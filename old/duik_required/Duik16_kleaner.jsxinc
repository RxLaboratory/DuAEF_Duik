function ui_buildKleaner(ui_kleanerTab)
{
	debugLog.startTimer("Loading Kleaner tools.");

	//=========== FUNCTIONS ==========

	//=========== EVENTS =============

	function ui_kleanerButton_clicked()
	{
		Duik.animation.klean(
			ui_kleanerSeparateButton.checked,
			true,
			true,
			ui_kleanerTypeSelector.index == 0
		);
	}

	function ui_copyAnimButton_clicked()
	{
		Duik.animation.copy();
	}

	function ui_pasteAnimButton_clicked()
	{
		Duik.animation.paste(
			ui_pasteAnimationReplaceButton.checked,
			ui_pasteAnimationOffsetSelector.index == 0,
			ui_pasteAnimationReverseButton.checked
		);
	}

	//============ UI ===============

	var ui_kleanerGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerTab,'column');
	if ( settings.data.uiMode < 2 && !standAlone ) DuAEF.DuScriptUI.addSeparator(ui_kleanerGroup, "Kleaner");

	var ui_kleanerTypeSelector = DuAEF.DuScriptUI.addSelector(ui_kleanerGroup);
	ui_kleanerTypeSelector.addButton("Use expressions",DuAEF.DuBinary.toFile(w25_js_l),"Use expressions to smooth the animation",DuAEF.DuBinary.toFile(w25_js_r));
	ui_kleanerTypeSelector.addButton("Adjust interpolations",DuAEF.DuBinary.toFile(w18_kbez_l),"Adjust keyframe interpolations to smooth the animation",DuAEF.DuBinary.toFile(w18_kbez_r));
	var ui_kleanerSeparateButton = DuAEF.DuScriptUI.addCheckBox(ui_kleanerGroup,'Separate dimensions',DuAEF.DuBinary.toFile( w18_separatedimensions_l ),"Separates the dimensions before cleaning the animation",DuAEF.DuBinary.toFile( w18_separatedimensions_r ));
	var ui_kleanerButton = DuAEF.DuScriptUI.addButton(ui_kleanerGroup,"Klean!",DuAEF.DuBinary.toFile(w25_broom_l),"Cleans animation",DuAEF.DuBinary.toFile(w25_broom_r));
	ui_kleanerButton.setHelp("Kleaner", keyframetoolsHelp, keyframetoolsLink);

	DuAEF.DuScriptUI.addSeparator(ui_kleanerGroup, settings.data.uiMode < 2 ? "Copy/Paste animation": "");

	var ui_copyPasteOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerGroup,'column');
	ui_copyPasteOptionsGroup.alignment = ['fill','top'];
	ui_copyPasteOptionsGroup.alignChildren = ['center','top'];
	var ui_pasteAnimationOffsetSelector = DuAEF.DuScriptUI.addSelector(ui_copyPasteOptionsGroup);
	ui_pasteAnimationOffsetSelector.addButton("Offset",DuAEF.DuBinary.toFile(w14_moveaway_l),"Offset current values",DuAEF.DuBinary.toFile(w14_moveaway_r));
	ui_pasteAnimationOffsetSelector.addButton("Absolute",DuAEF.DuBinary.toFile(w14_absolute_l),"Replaces current values",DuAEF.DuBinary.toFile(w14_absolute_r));
	var ui_pasteAnimationReverseButton = DuAEF.DuScriptUI.addCheckBox(ui_copyPasteOptionsGroup,'Reverse',undefined,"Reverts the animation in time",undefined);
	var ui_pasteAnimationReplaceButton = DuAEF.DuScriptUI.addCheckBox(ui_copyPasteOptionsGroup,'Replace',undefined,"Replaces any existing keyframe on the properties before loading the new animation",undefined);
	
	var ui_pasteAnimGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerGroup,'row');
	ui_copyAnimButton = DuAEF.DuScriptUI.addButton(ui_pasteAnimGroup,'',DuAEF.DuBinary.toFile(w25_copy_l),"Copy selected keyframes",DuAEF.DuBinary.toFile(w25_copy_r));
	ui_copyAnimButton.setHelp("Copy and Paste Animation", keyframetoolsHelp, keyframetoolsLink);
	var ui_pasteAnimButton = DuAEF.DuScriptUI.addButton(ui_pasteAnimGroup,'',DuAEF.DuBinary.toFile(w25_paste_l),"Paste keyframes",DuAEF.DuBinary.toFile(w25_paste_r));
	ui_pasteAnimButton.setHelp("Copy and Paste Animation", keyframetoolsHelp, keyframetoolsLink);
	ui_pasteAnimButton.alignment = ['center','top'];
	ui_copyAnimButton.alignment = ['center','top'];

	//========= INIT ===================

	ui_kleanerTypeSelector.setCurrentIndex(0);
	ui_pasteAnimationOffsetSelector.setCurrentIndex(1);

	//========== CONNECT EVENTS ========

	ui_kleanerButton.onClick = ui_kleanerButton_clicked;
	ui_copyAnimButton.onClick = ui_copyAnimButton_clicked;
	ui_pasteAnimButton.onClick = ui_pasteAnimButton_clicked;


	debugLog.stopTimer("Kleaner tools ready.");
}
