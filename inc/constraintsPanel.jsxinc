function buildConstraintsUI( )
{
    // tools
    var toolsGroup = DuScriptUI.group(this);
    DuScriptUI.setBackgroundColor(toolsGroup , DuColor.Color.DARK_GREY );

    var listButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_list,
        DuScriptUI.String.CONSTRAINT_LIST_TIP
    );
    listButton.alignment = ['center','top'];
    listButton.onClick = Duik.Constraint.list;

    var separateButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_separate_dimensions,
        DuScriptUI.String.CONSTRAINT_SEPARATE_TIP
    );
    separateButton.alignment = ['center','top'];
    separateButton.onClick = Duik.Constraint.separateDimensions;

    var lockButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_lock,
        DuScriptUI.String.CONSTRAINT_LOCK_TIP
    );
    lockButton.alignment = ['center','top'];
    lockButton.onClick = Duik.Constraint.lock;

    var zeroButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_zero,
        DuScriptUI.String.CONSTRAINT_ZERO_TIP
    );
    zeroButton.alignment = ['center','top'];
    zeroButton.onClick = Duik.Constraint.zero;
    zeroButton.onAltClick = Duik.Constraint.resetPRS;
    zeroButton.onCtrlAltClick = function () { Duik.Constraint.resetPRS(undefined, true); };

    var alignButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_h_align,
        DuScriptUI.String.ALIGN_LAYERS_TIP + '\n' + DuScriptUI.String.ALIGN_LAYERS_DETAILS,
        true
    );
    alignButton.optionsPopup.build = function()
    {
        var posButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.POSITION,
            w16_move
        );
        var rotButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.ROTATION,
            w16_rotate
        );
        var scaButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.SCALE,
            w16_scale
        );
        var opaButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.OPACITY,
            w16_opacity
        );

        posButton.setChecked( true );
        rotButton.setChecked( true );
        scaButton.setChecked( true );

        DuScriptUI.staticText( alignButton.optionsPanel, DuScriptUI.String.ALIGN_LAYERS_DETAILS );

        alignButton.onClick = function() {
            Duik.Constraint.alignLayers(
                posButton.checked,
                rotButton.checked,
                scaButton.checked,
                opaButton.checked
            )
        }
    }

    var etmButton = DuScriptUI.button(
        toolsGroup,
        '',
        w12_expose_transform,
        DuScriptUI.String.CONSTRAINT_ETM_TIP
    );
    etmButton.alignment = ['center','top'];
    etmButton.onClick = Duik.Constraint.exposeTransform;

    var mainGroup = DuScriptUI.group(this, 'stacked');
    mainGroup.alignment = ['fill', 'fill'];

    var constraintsGroup = DuScriptUI.group(mainGroup, 'column');

    /*var autorigButton = DuScriptUI.button(
        constraintsGroup,
        DuScriptUI.String.AUTORIG,
        w16_autorig,
        DuScriptUI.String.AUTORIG_TIP,
        true
    );

    var connectorButton = DuScriptUI.button(
        constraintsGroup,
        DuScriptUI.String.DUIK_CONNECTOR,
        w16_connector,
        DuScriptUI.String.CONNECTOR_TIP,
        true
    );*/

    var keyMorphButton = DuScriptUI.button(
        constraintsGroup,
        DuScriptUI.String.DUIK_KEY_MORPH,
        w16_shape_keys,
        DuScriptUI.String.KEY_MORPH_TIP
    );
    keyMorphButton.onClick = Duik.Constraint.morphKeys;

    var pinsButton = DuScriptUI.button(
        constraintsGroup,
        DuScriptUI.String.DUIK_PINS,
        w16_pin,
        DuScriptUI.String.PINS_TIP,
        true
    );
    pinsButton.onClick = Duik.Constraint.pin;
    pinsButton.onAltClick = function( ) { Duik.Constraint.pin( false ) };

    var ikGroup = DuScriptUI.multiButton(
        constraintsGroup,
        DuScriptUI.String.CONSTRAINT_IK_FK,
        w16_ik_fk,
        DuScriptUI.String.CONSTRAINT_IK_FK_TIP
    );
    ikGroup.build = function () {
        var ikButton = this.addButton(
            DuScriptUI.String.IK,
            w16_ik,
            DuScriptUI.String.IK_TIP,
            true
        );
        var ikSelector;
        ikButton.optionsPopup.build = function ()
        {
            ikSelector = DuScriptUI.selector( ikButton.optionsPanel );
            ikSelector.addButton(
                DuScriptUI.String.THREE_IK,
                w16_three_ik,
                DuScriptUI.String.THREE_IK_TIP
            );
            ikSelector.addButton(
                DuScriptUI.String.ONE_TWO_IK,
                w16_one_two_ik,
                DuScriptUI.String.ONE_TWO_TIP
            );
            ikSelector.addButton(
                DuScriptUI.String.TWO_ONE_IK,
                w16_two_one_ik,
                DuScriptUI.String.TWO_ONE_TIP
            );
            ikSelector.setCurrentIndex( 1 );
        }

        var bezierIKButton = this.addButton(
            DuScriptUI.String.BEZIER_IK,
            w16_bezier_ik,
            DuScriptUI.String.BEZIER_IK_TIP
        );

        var fkButton = this.addButton(
            DuScriptUI.String.FK,
            w16_fk,
            DuScriptUI.String.FK_TIP
        );

        ikButton.onClick = function ()
        {
            Duik.Constraint.ik( ikSelector.index );
        }

        bezierIKButton.onClick = function ()
        {
            Duik.Constraint.ik(undefined, true);
        }

        fkButton.onClick = Duik.Constraint.fk;
    }

    var parentGroup = DuScriptUI.multiButton(
        constraintsGroup,
        DuScriptUI.String.CONSTRAINT_PARENT,
        w16_parent,
        DuScriptUI.String.CONSTRAINT_PARENT_TIP
    );
    parentGroup.build = function () {
        var autoParentButton = this.addButton(
            DuScriptUI.String.AUTO_PARENT,
            w16_auto_parent,
            DuScriptUI.String.AUTO_PARENT_TIP
        );
        autoParentButton.onClick = Duik.Constraint.autoParent;
        autoParentButton.onAltClick = function () { Duik.Constraint.autoParent(true) };

        var parentConstraintButton = this.addButton(
            DuScriptUI.String.PARENT_CONSTRAINT,
            w16_parent,
            DuScriptUI.String.PARENT_CONSTRAINT_TIP
        );
        parentConstraintButton.onClick = Duik.Constraint.parent;

        var parentAcrossCompButton = this.addButton(
            DuScriptUI.String.PARENT_ACROSS_COMP,
            w16_parent_across_comp,
            DuScriptUI.String.PARENT_ACROSS_COMP_TIP
        );
        parentAcrossCompButton.onClick = function()
        {
            constraintsGroup.visible = false;
            parentAcrossCompGroup.visible = true;

            // build panel
            if (!parentAcrossCompGroup.built)
            {
                parentAcrossCompGroup.built = true;

                var locatorsGroup = DuScriptUI.group(parentAcrossCompGroup, 'row');
                DuScriptUI.setBackgroundColor( locatorsGroup, DuColor.Color.DARK_GREY );

                var locatorButton = DuScriptUI.button(
                    locatorsGroup,
                    '',
                    w12_locator,
                    DuScriptUI.String.LOCATOR_TIP
                );
                locatorButton.alignment = ['center', 'top'];
                locatorButton.onClick = Duik.Constraint.locator;

                var extractLocatorButton = DuScriptUI.button(
                    locatorsGroup,
                    '',
                    w12_extract_locator,
                    DuScriptUI.String.EXTRACT_LOCATOR_TIP,
                    true
                );
                extractLocatorButton.alignment = ['center', 'top'];
                extractLocatorButton.onClick = function() 
                {
                    var useEssentialProperties = locatorModeSelector.index == 1;
                    Duik.Constraint.extractLocators(useEssentialProperties);
                }

                var locatorModeSelector;
                extractLocatorButton.optionsPopup.build = function ()
                {
                    locatorModeSelector = DuScriptUI.selector( extractLocatorButton.optionsPanel );
                    locatorModeSelector.addButton(
                        DuScriptUI.String.USE_EXPRESSIONS,
                        w16_expression
                    );
                    locatorModeSelector.addButton(
                        DuScriptUI.String.USE_ESSENTIAL_PROPERTIES,
                        w16_essential_property
                    );
                    locatorModeSelector.setCurrentIndex( 1 );
                }

                DuScriptUI.staticText(
                    parentAcrossCompGroup,
                    DuScriptUI.String.PARENT_COMP + ':',
                    undefined,
                    false
                );

                var parentCompSelector = DuScriptUI.compSelector(
                    parentAcrossCompGroup
                );
                parentCompSelector.filterComps = DuAEComp.getRelatives;
                parentCompSelector.onChange = function () 
                {
                    var comp = parentCompSelector.getComp();
                    if ( !comp ) return;
                    parentCompLayerSelector.comp = comp;
                    parentCompLayerSelector.refresh();
                }

                DuScriptUI.staticText(
                    parentAcrossCompGroup,
                    DuScriptUI.String.PARENT_LAYER + ':',
                    undefined,
                    false
                );

                var parentCompLayerSelector = DuScriptUI.layerSelector(
                    parentAcrossCompGroup
                );
                parentCompLayerSelector.onChange = function() 
                {
                    if ( parentCompLayerSelector.index > 0 ) parentCompValidButton.enabled = true;
                    else parentCompValidButton.enabled = false;
                }

                DuScriptUI.separator( parentAcrossCompGroup );

                var parentCompValidGroup = DuScriptUI.group(
                    parentAcrossCompGroup,
                    'row'
                );

                var parentCompCancelButton = DuScriptUI.button(
                    parentCompValidGroup,
                    DuScriptUI.String.BACK_PREVIOUS,
                    DuScriptUI.Icon.BACK,
                    DuScriptUI.String.CLOSE_SETTINGS,
                    false,
                    'row',
                    'center'
                );
                parentCompCancelButton.onClick = function () {
                    parentAcrossCompGroup.visible = false;
                    constraintsGroup.visible = true;
                }

                var parentCompValidButton = DuScriptUI.button(
                    parentCompValidGroup,
                    DuScriptUI.String.PARENT_ACROSS_COMP,
                    DuScriptUI.Icon.CHECK,
                    DuScriptUI.String.PARENT_ACROSS_COMP_TIP,
                    false,
                    'row',
                    'center'
                );
                parentCompValidButton.enabled = false;
                parentCompValidButton.onClick = function ()
                {
                    //get comp and layer
                    var comp = parentCompSelector.getComp();
                    var layer = comp.layer( parentCompLayerSelector.index );

                    // We need the options of the extract locator button
                    extractLocatorButton.optionsPopup.build();

                    var useEssentialProperties = locatorModeSelector.index == 1;

                    Duik.Constraint.parentAcrossComp( layer, useEssentialProperties );

                    parentAcrossCompGroup.visible = false;
                    constraintsGroup.visible = true;
                }

                DuScriptUI.showUI( parentAcrossCompGroup );
            }
        }
    }   

    var transformGroup = DuScriptUI.multiButton(
        constraintsGroup,
        DuScriptUI.String.CONSTRAINT_TRANSFORM,
        w16_constraint,
        DuScriptUI.String.CONSTRAINT_TRANSFORM_TIP
    );
    transformGroup.build = function () {
        var positionConstraintButton = this.addButton(
            DuScriptUI.String.POSITION_CONSTRAINT,
            w16_move,
            DuScriptUI.String.POSITION_CONSTRAINT_TIP
        );
        positionConstraintButton.onClick = Duik.Constraint.position;

        var orientationConstraintButton = this.addButton(
            DuScriptUI.String.ORIENTATION_CONSTRAINT,
            w16_rotate,
            DuScriptUI.String.ORIENTATION_CONSTRAINT_TIP
        );
        orientationConstraintButton.onClick = Duik.Constraint.orientation;

        var pathConstraintButton = this.addButton(
            DuScriptUI.String.PATH_CONSTRAINT + '...',
            w16_bezier,
            DuScriptUI.String.PATH_CONSTRAINT_TIP,
            false,
            undefined,
            undefined,
            false
        );
        pathConstraintButton.onClick = function ()
        {
            var pathConstraintValidButton;
            var pathConstraintLabel;

            var pathProp = null;
            // Get path prop
            function pickPath() {
                pathProp = null;
                pathConstraintValidButton.enabled = false;
                pathConstraintLabel.text = DuScriptUI.String.PICK_PATH;
                var props = DuAEComp.getSelectedProps( PropertyValueType.SHAPE );
                if ( props.length == 0 ) return false;

                pathProp = props.pop();
                var parentProp = pathProp.getProperty().parentProperty;
                pathConstraintLabel.text = pathProp.layer.index + " - " + pathProp.layer.name + " # " + parentProp.name;
                pathConstraintValidButton.enabled = true;
            }

            // build panel
            if (!pathConstraintGroup.built)
            {
                pathConstraintGroup.built = true;

                var pathGroup = DuScriptUI.group(pathConstraintGroup, 'row');

                pathConstraintLabel = DuScriptUI.staticText(pathGroup, DuScriptUI.String.PICK_PATH );
                pathConstraintLabel.alignment = ['fill', 'center'];

                var pickPathButton = DuScriptUI.button(
                    pathGroup,
                    '',
                    DuScriptUI.Icon.EYE_DROPPER_BIG,
                    DuScriptUI.String.PICK_PATH
                );
                pickPathButton.alignment = ['right', 'center'];
                pickPathButton.onClick = pickPath;

                var pathConstraintValidGroup = DuScriptUI.group(pathConstraintGroup, 'row');

                var pathConstraintCancelButton = DuScriptUI.button(
                    pathConstraintValidGroup,
                    DuScriptUI.String.BACK_PREVIOUS,
                    DuScriptUI.Icon.BACK,
                    DuScriptUI.String.CLOSE_SETTINGS,
                    false,
                    'row',
                    'center'
                );
                pathConstraintValidGroup.onClick = function () {
                    pathConstraintGroup.visible = false;
                    constraintsGroup.visible = true;
                }

                pathConstraintValidButton = DuScriptUI.button(
                    pathConstraintValidGroup,
                    DuScriptUI.String.PATH_CONSTRAINT,
                    DuScriptUI.Icon.CHECK,
                    DuScriptUI.String.PATH_CONSTRAINT_TIP,
                    false,
                    'row',
                    'center'
                );
                pathConstraintValidButton.enabled = false;
                pathConstraintValidButton.onClick = function ()
                {
                    Duik.Constraint.path( pathProp );
                    pathConstraintGroup.visible = false;
                    constraintsGroup.visible = true;
                }

                DuScriptUI.showUI( pathConstraintGroup );
            }

            // we can create
            if (Duik.Constraint.path()) return;

            // ask for the path
            constraintsGroup.visible = false;
            pathConstraintGroup.visible = true;
            pickPath();
        }
    }

    var parentAcrossCompGroup = DuScriptUI.group( mainGroup, 'column');
    parentAcrossCompGroup.visible = false;
    parentAcrossCompGroup.built = false;

    var pathConstraintGroup = DuScriptUI.group( mainGroup, 'column');
    pathConstraintGroup.visible = false;
    pathConstraintGroup.built = false;
}