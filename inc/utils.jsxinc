// UTILS

function createCtrlButton(group, icon, helpTip, type) {
    var btn = DuScriptUI.button(
        group,
        '',
        icon,
        helpTip + '\n' + DuScriptUI.String.CTRL_CREATION_TIP
    )
    btn.onClick = function() {
        Duik.Controller.fromLayers(type);
    };
    btn.onAltClick = function() {
        Duik.Controller.fromLayers(type, false, true);
    };
    btn.onCtrlClick = function() {
        Duik.Controller.fromLayers(type, true);
    };
    btn.onCtrlAltClick = function() {
        Duik.Controller.fromLayers(type, true, true);
    };
    return btn;
}

function createSideSelector(container) {
    var sideSelector = DuScriptUI.selector(container);
    sideSelector.addButton(DuScriptUI.String.NONE, w16_no_side);
    sideSelector.addButton(DuScriptUI.String.LEFT, w16_left_hand);
    sideSelector.addButton(DuScriptUI.String.RIGHT, w16_right_hand);
    sideSelector.setCurrentIndex(0);
    return sideSelector;
}

function createLocationSelector(container) {
    var locationSelector = DuScriptUI.selector(container);
    locationSelector.addButton(DuScriptUI.String.NONE, w16_no_loc);
    locationSelector.addButton(DuScriptUI.String.FRONT, w16_front);
    locationSelector.addButton(DuScriptUI.String.BACK_LOCATION, w16_back);
    locationSelector.addButton(DuScriptUI.String.MIDDLE, w16_middle);
    locationSelector.addButton(DuScriptUI.String.ABOVE, w16_above);
    locationSelector.addButton(DuScriptUI.String.UNDER, w16_under);
    locationSelector.addButton(DuScriptUI.String.TAIL, w16_tail_loc);
    locationSelector.setCurrentIndex(0);
    return locationSelector;
}

function createTypeSelector(container) {
    var typeSelector = DuScriptUI.selector(container);
    typeSelector.addButton(DuScriptUI.String.NONE, w16_layer);
    typeSelector.addButton(DuScriptUI.String.BONE, w16_bone);
    typeSelector.addButton(DuScriptUI.String.PIN, w16_pin);
    typeSelector.addButton(DuScriptUI.String.CONTROLLER, w16_controller);
    typeSelector.addButton(DuScriptUI.String.DUIK_ZERO, w16_zero);
    typeSelector.addButton(DuScriptUI.String.LOCATOR, w16_locator);
    typeSelector.setCurrentIndex(0);
    return typeSelector;
}

function createMoveAnchorPointButton(toolsGroup) {
    var moveAnchorPointButton = toolsGroup.addButton(
        DuScriptUI.String.MOVE_ANCHOR_POINTS,
        w12_move_anchor_point,
        DuScriptUI.String.MOVE_ANCHOR_POINTS_TIP
    );
    return moveAnchorPointButton;
}

function buildMoveAnchorPointGroup(moveAnchorPointGroup, mainGroup) {

    var titleBar = createSubPanel(
        moveAnchorPointGroup,
        DuScriptUI.String.MOVE_ANCHOR_POINTS,
        mainGroup,
        false
    );

    var maskButton = DuScriptUI.checkBox(
        moveAnchorPointGroup,
        DuScriptUI.String.INCLUDE_MASKS,
        w16_mask,
        DuScriptUI.String.INCLUDE_MASKS_TIP
    );

    var gridGroup = DuScriptUI.group(moveAnchorPointGroup, 'row');
    gridGroup.alignment = ['center', 'top'];
    var column1 = DuScriptUI.group(gridGroup, 'column');
    var column2 = DuScriptUI.group(gridGroup, 'column');
    var column3 = DuScriptUI.group(gridGroup, 'column');

    var tlButton = DuScriptUI.button(
        column1,
        '',
        w12_move_tl
    );
    tlButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.TOP_LEFT, marginsSlider.value, maskButton.checked);
    };
    var lButton = DuScriptUI.button(
        column1,
        '',
        w12_move_l
    );
    lButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.LEFT, marginsSlider.value, maskButton.checked);
    };
    var blButton = DuScriptUI.button(
        column1,
        '',
        w12_move_bl
    );
    blButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.BOTTOM_LEFT, marginsSlider.value, maskButton.checked);
    };

    var tButton = DuScriptUI.button(
        column2,
        '',
        w12_move_t
    );
    tButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.TOP, marginsSlider.value, maskButton.checked);
    };
    var cButton = DuScriptUI.button(
        column2,
        '',
        w12_center
    );
    cButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.CENTER, marginsSlider.value, maskButton.checked);
    };
    var bButton = DuScriptUI.button(
        column2,
        '',
        w12_move_b
    );
    bButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.BOTTOM, marginsSlider.value, maskButton.checked);
    };

    var trButton = DuScriptUI.button(
        column3,
        '',
        w12_move_tr
    );
    trButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.TOP_RIGHT, marginsSlider.value, maskButton.checked);
    };
    var rButton = DuScriptUI.button(
        column3,
        '',
        w12_move_r
    );
    rButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.RIGHT, marginsSlider.value, maskButton.checked);
    };
    var brButton = DuScriptUI.button(
        column3,
        '',
        w12_move_br
    );
    brButton.onClick = function() {
        Duik.Constraint.moveAnchorPoint(DuMath.Location.BOTTOM_RIGHT, marginsSlider.value, maskButton.checked);
    };

    var marginsSlider = DuScriptUI.slider(
        moveAnchorPointGroup,
        0,
        -500,
        500,
        'column',
        false,
        DuScriptUI.String.MARGIN + ": ",
        ' ' + DuAE.UnitText.PIXELS
    );
    
    moveAnchorPointGroup.built = true;
    DuScriptUI.showUI(moveAnchorPointGroup);
}

function buildEffectorMapGroup(effectorMapGroup, mainGroup) {

    var titleBar = createSubPanel(
        effectorMapGroup,
        DuScriptUI.String.PICK_TEXTURE,
        mainGroup,
        false
    );

    var mapLabel = effectorMapGroup.add('statictext', undefined, DuScriptUI.String.PICK_EFFECTOR_MAP_HELP + ':');
    mapLabel.enabled = false;
    effectorMapGroup.layerSelector = DuScriptUI.layerSelector( effectorMapGroup, DuScriptUI.String.PICK_EFFECTOR_MAP_TIP );

    var connectButton = DuScriptUI.button(
        effectorMapGroup,
        DuScriptUI.String.CONNECT_PROPERTIES,
        w16_props,
        DuScriptUI.String.CONNECT_PROPERTIES_TIP,
        false,
        'column',
        'center'
    );
    connectButton.onClick = function() {
        var comp = DuAEProject.getActiveComp();
        if (!comp) return;

        var layerIndex = effectorMapGroup.layerSelector.index;
        if (layerIndex < 1 || layerIndex > comp.numLayers) return;

        DuAE.beginUndoGroup(DuScriptUI.String.EFFECTOR_MAP);

        var props = DuAEComp.getSelectedProps();

        Duik.Automation.effectorMap( comp.layer(layerIndex), props);

        cancelButton.onClick();

        DuAE.endUndoGroup();
    }

    effectorMapGroup.built = true;
    DuScriptUI.showUI(effectorMapGroup);
}

function createAlignButton(container) {
    var alignButton = container.addButton(
        DuScriptUI.String.ALIGN_LAYERS,
        w12_h_align,
        DuScriptUI.String.ALIGN_LAYERS_TIP + '\n' + DuScriptUI.String.ALIGN_LAYERS_DETAILS,
        true
    );
    alignButton.optionsPopup.build = function() {
        var posButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.POSITION,
            w16_move
        );
        var rotButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.ROTATION,
            w16_rotate
        );
        var scaButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.SCALE,
            w16_scale
        );
        var opaButton = DuScriptUI.checkBox(
            alignButton.optionsPanel,
            DuScriptUI.String.OPACITY,
            w16_opacity
        );

        posButton.setChecked(true);
        rotButton.setChecked(true);
        scaButton.setChecked(true);

        DuScriptUI.staticText(alignButton.optionsPanel, DuScriptUI.String.ALIGN_LAYERS_DETAILS);

        alignButton.onClick = function() {
            Duik.Constraint.alignLayers(
                posButton.checked,
                rotButton.checked,
                scaButton.checked,
                opaButton.checked
            )
        }
    }
}

function setSideSelector(selector, side) {
    if (side == DuOCO.Side.NONE) selector.setCurrentIndex(0);
    else if (side == DuOCO.Side.LEFT) selector.setCurrentIndex(1);
    else if (side == DuOCO.Side.RIGHT) selector.setCurrentIndex(2);

}

function setLocationSelector(selector, location) {
    if (location == DuOCO.Location.NONE) selector.setCurrentIndex(0);
    else if (location == DuOCO.Location.FRONT) selector.setCurrentIndex(1);
    else if (location == DuOCO.Location.BACK) selector.setCurrentIndex(2);
    else if (location == DuOCO.Location.MIDDLE) selector.setCurrentIndex(3);
    else if (location == DuOCO.Location.ABOVE) selector.setCurrentIndex(4);
    else if (location == DuOCO.Location.UNDER) selector.setCurrentIndex(5);
    else if (location == DuOCO.Location.TAIL) selector.setCurrentIndex(6);

}

function setTypeSelector(selector, type) {
    if (type == Duik.Layer.Type.BONE) selector.setCurrentIndex(1);
    else if (type == Duik.Layer.Type.PIN) selector.setCurrentIndex(2);
    else if (type == Duik.Layer.Type.CONTROLLER) selector.setCurrentIndex(3);
    else if (type == Duik.Layer.Type.CONTROLLER_BG) selector.setCurrentIndex(3);
    else selector.setCurrentIndex(0);
}

function getSide(selector) {
    var side = DuOCO.Side.NONE;
    if (selector.index == 1) side = DuOCO.Side.LEFT;
    else if (selector.index == 2) side = DuOCO.Side.RIGHT;
    return side;
}

function getLocation(selector) {
    var location = DuOCO.Location.NONE;
    if (selector.index == 1) location = DuOCO.Location.FRONT;
    else if (selector.index == 2) location = DuOCO.Location.BACK;
    else if (selector.index == 3) location = DuOCO.Location.MIDDLE;
    else if (selector.index == 4) location = DuOCO.Location.ABOVE;
    else if (selector.index == 5) location = DuOCO.Location.UNDER;
    else if (selector.index == 6) location = DuOCO.Location.TAIL;
    return location;
}

function getType(selector) {
    var type = Duik.Layer.Type.NONE;
    if (selector.index == 1) type = Duik.Layer.Type.BONE;
    else if (selector.index == 2) type = Duik.Layer.Type.PIN;
    else if (selector.index == 3) type = Duik.Layer.Type.CONTROLLER;
    else if (selector.index == 4) type = Duik.Layer.Type.ZERO;
    else if (selector.index == 5) type = Duik.Layer.Type.LOCATOR;
    return type;
}

function createKleanerButton( container ) {
    var kleanerGroup = DuScriptUI.multiButton(
            container,
            DuScriptUI.String.KLEANER,
            w16_kleaner,
            DuScriptUI.String.KLEANER_TIP
        );
    kleanerGroup.build = function() {
        var aliveButton = this.addButton(
            DuScriptUI.String.ALIVE,
            undefined,
            DuScriptUI.String.ALIVE_TIP
        );
        var inanimateButton = this.addButton(
            DuScriptUI.String.INANIMATE,
            undefined,
            DuScriptUI.String.INANIMATE_TIP
        );
        var trueStopButton = this.addButton(
            DuScriptUI.String.TRUE_STOP,
            undefined,
            DuScriptUI.String.TRUE_STOP_TIP
        );
        var exactButton = this.addButton(
            DuScriptUI.String.EXACT_KEYFRAMES,
            undefined,
            DuScriptUI.String.EXACT_KEYFRAMES_TIP
        );
        var springButton = this.addButton(
            DuScriptUI.String.SPRING,
            undefined,
            DuScriptUI.String.SPRING_TIP
        );
        var springLightButton = this.addButton(
            DuScriptUI.String.SPRING_NO_SIMU,
            undefined,
            DuScriptUI.String.SPRING_NO_SIMU_TIP
        );
        var bounceButton = this.addButton(
            DuScriptUI.String.BOUNCE,
            undefined,
            DuScriptUI.String.BOUNCE_TIP
        );
        var bounceLightButton = this.addButton(
            DuScriptUI.String.BOUNCE_NO_SIMU,
            undefined,
            DuScriptUI.String.BOUNCE_NO_SIMU_TIP
        );

        aliveButton.onClick = function() {
            Duik.Automation.kleaner();
        };

        inanimateButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Will'].index).setValue(0);
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            DuAE.endUndoGroup();
        };

        trueStopButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Follow through']['Flexibility'].index).setValue(0);
            DuAE.endUndoGroup();
        };

        exactButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            effect(i['Follow through']['Flexibility'].index).setValue(0);
            effect(i['Overlap']['Overlap'].index).setValue(0);
            effect(i['Soft body']['Flexibility'].index).setValue(0);
            DuAE.endUndoGroup();
        };

        springButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            effect(i['Motion interpolation']['Motion interpolation'].index).setValue(0);
            effect(i['Overlap']['Overlap'].index).setValue(0);
            DuAE.endUndoGroup();
        };

        springLightButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Size'].index).setValue(0);
            effect(i['Weight'].index).setValue(0);
            effect(i['Strength'].index).setValue(0);
            effect(i['Will'].index).setValue(0);
            effect(i['Flexibility'].index).setValue(0);
            effect(i['Friction'].index).setValue(0);
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            effect(i['Motion interpolation']['Motion interpolation'].index).setValue(0);
            effect(i['Overlap']['Overlap'].index).setValue(0);
            effect(i['Performance']['Always disable simulations'].index).setValue(1);
            effect(i['Performance']['Disable general parameters'].index).setValue(1);
            DuAE.endUndoGroup();
        };

        bounceButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);
            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            effect(i['Motion interpolation']['Motion interpolation'].index).setValue(0);
            effect(i['Overlap']['Overlap'].index).setValue(0);
            effect(i['Follow through']['Bounce'].index).setValue(1);
            DuAE.endUndoGroup();
        };

        bounceLightButton.onClick = function() {
            DuAE.beginUndoGroup(DuScriptUI.String.KLEANER);

            var effect = Duik.Automation.kleaner();

            var i = Duik.PseudoEffect.KLEANER.props; 
            effect(i['Size'].index).setValue(0);
            effect(i['Weight'].index).setValue(0);
            effect(i['Strength'].index).setValue(0);
            effect(i['Will'].index).setValue(0);
            effect(i['Flexibility'].index).setValue(0);
            effect(i['Friction'].index).setValue(0);
            effect(i['Anticipation']['Anticipation'].index).setValue(0);
            effect(i['Motion interpolation']['Motion interpolation'].index).setValue(0);
            effect(i['Overlap']['Overlap'].index).setValue(0);
            effect(i['Performance']['Always disable simulations'].index).setValue(1);
            effect(i['Performance']['Disable general parameters'].index).setValue(1);
            effect(i['Follow through']['Bounce'].index).setValue(1);

            DuAE.endUndoGroup();
        };
    };
}

function createSubPanel( container, title, mainGroup, pinButton ) {
    pinButton = def(pinButton, true);
    
    container.built = true;

    DuScriptUI.separator(container);

    var titleBar = DuScriptUI.titleBar( container, title, true, pinButton);
    titleBar.onClose = function() {
        container.visible = false;
        mainGroup.visible = true;
    };

    return titleBar;
}

function addValidButton( container, title, tip, icon ) {
    icon = def(icon, DuScriptUI.Icon.CHECK);
    DuScriptUI.separator( container );
    var validButton = DuScriptUI.button(
        container,
        title,
        DuScriptUI.Icon.CHECK,
        tip,
        false,
        'row',
        'center'
    );
    return validButton;
}

function createXSheetButton( container ){
    var xSheetButton = DuScriptUI.button(
        container,
        DuScriptUI.String.X_SHEET,
        w16_x_sheet,
        DuScriptUI.String.X_SHEET_TIP
    );
    xSheetButton.onClick = Duik.Animation.xSheet;
    xSheetButton.onCtrlClick = function() { Duik.Animation.xSheet(true) };
}

function createAutorigButton( container ){
    var autorigButton = DuScriptUI.button(
        container,
        DuScriptUI.String.AUTORIG,
        w16_autorig,
        DuScriptUI.String.BONE_PANEL_AUTORIG_TIP,
        true
    );
    autorigButton.optionsPopup.build = function()
    {
        DuScriptUI.staticText( autorigButton.optionsPanel, DuScriptUI.String.THREE_LAYER_RIG );
        var threeLayerSelector = DuScriptUI.selector( autorigButton.optionsPanel );
        threeLayerSelector.addButton(
            DuScriptUI.String.ONE_TWO_IK,
            w16_one_two_ik,
            DuScriptUI.String.ONE_TWO_TIP
        );
        threeLayerSelector.addButton(
            DuScriptUI.String.TWO_ONE_IK,
            w16_two_one_ik,
            DuScriptUI.String.TWO_ONE_TIP
        );
        threeLayerSelector.addButton(
            DuScriptUI.String.FK,
            w16_fk,
            DuScriptUI.String.FK_TIP
        );
        threeLayerSelector.addButton(
            DuScriptUI.String.BEZIER_IK,
            w16_bezier_ik,
            DuScriptUI.String.BEZIER_IK_TIP
        );
        threeLayerSelector.addButton(
            DuScriptUI.String.BEZIER_FK,
            w16_bezier_fk,
            DuScriptUI.String.BEZIER_FK
        );
        threeLayerSelector.onChange = function() {
            DuESF.scriptSettings.data.autorig = def(DuESF.scriptSettings.data.autorig, {});
            DuESF.scriptSettings.data.autorig.threeLayerMode = threeLayerSelector.index;
            DuESF.scriptSettings.save();
        };

        DuScriptUI.staticText( autorigButton.optionsPanel, DuScriptUI.String.LONG_CHAIN_RIG );
        var longSelector = DuScriptUI.selector( autorigButton.optionsPanel );
        longSelector.addButton(
            DuScriptUI.String.FK,
            w16_fk,
            DuScriptUI.String.FK_TIP
        );
        longSelector.addButton(
            DuScriptUI.String.BEZIER_IK,
            w16_bezier_ik,
            DuScriptUI.String.BEZIER_IK_TIP
        );
        longSelector.addButton(
            DuScriptUI.String.BEZIER_FK,
            w16_bezier_fk,
            DuScriptUI.String.BEZIER_FK
        );
        longSelector.onChange = function() {
            DuESF.scriptSettings.data.autorig = def(DuESF.scriptSettings.data.autorig, {});
            DuESF.scriptSettings.data.autorig.longMode = longSelector.index;
            DuESF.scriptSettings.save();
        };

        DuScriptUI.staticText( autorigButton.optionsPanel, DuScriptUI.String.BAKING );
        var bakingSelector = DuScriptUI.selector( autorigButton.optionsPanel );
        bakingSelector.addButton(
            DuScriptUI.String.NO_BAKE,
            w16_bone,
            DuScriptUI.String.NO_BAKE_TIP
        );
        bakingSelector.addButton(
            DuScriptUI.String.BAKE_BONES,
            w16_bake_bone,
            DuScriptUI.String.BAKE_BONES_AUTORIG_TIP
        );
        bakingSelector.addButton(
            DuScriptUI.String.BAKE_ENVELOPS,
            w16_bake_envelop,
            DuScriptUI.String.BAKE_ENVELOPS_TIP
        );
        bakingSelector.onChange = function() {
            DuESF.scriptSettings.data.autorig = def(DuESF.scriptSettings.data.autorig, {});
            DuESF.scriptSettings.data.autorig.bakeMode = bakingSelector.index;
            DuESF.scriptSettings.save();
        };

        // Restore indices
        DuESF.scriptSettings.data.autorig = def(DuESF.scriptSettings.data.autorig, {});
        DuESF.scriptSettings.data.autorig.threeLayerMode = def(DuESF.scriptSettings.data.autorig.threeLayerMode, 0);
        DuESF.scriptSettings.data.autorig.longMode = def(DuESF.scriptSettings.data.autorig.longMode, 0);
        DuESF.scriptSettings.data.autorig.bakeMode = def(DuESF.scriptSettings.data.autorig.bakeMode, 2);
        threeLayerSelector.setCurrentIndex(DuESF.scriptSettings.data.autorig.threeLayerMode);
        longSelector.setCurrentIndex(DuESF.scriptSettings.data.autorig.longMode);
        bakingSelector.setCurrentIndex(DuESF.scriptSettings.data.autorig.bakeMode);

        autorigButton.onClick = function() {
            var threeMode = threeLayerSelector.index + 1;
            var longMode = longSelector.index + 3;
            var bakeMode = 'envelops';
            if (bakingSelector.index == 1) bakeMode = 'bones';
            else if (bakingSelector.index == 0) bakeMode = 'none';
            Duik.Rig.auto(bakeMode, longMode, threeMode)
        };
    }
    
    return autorigButton;
}