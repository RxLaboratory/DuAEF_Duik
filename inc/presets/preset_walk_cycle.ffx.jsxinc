var preset_walk_cycle = new DuBinary( "RIFX\x00\x02\u00F3@FaFXhead\x00\x00\x00\x10\x00\x00\x00\x03\x00\x00\x00]\x00\x00\x00!\x01\x00\x00\x00LIST\x00\x02\u00F3\x1Cbescbeso\x00\x00\x008\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00`\x00\x00\x18\x00\x00\x00\x00\x00\x04\x00\x01\x00\x01\x05\x00\x02\u00D0?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FF\u00FF\u00FFLIST\x00\x00\x00\u00ACtdsptdot\x00\x00\x00\x04\u00FF\u00FF\u00FF\u00FFtdpl\x00\x00\x00\x04\x00\x00\x00\x02LIST\x00\x00\x00@tdsitdix\x00\x00\x00\x04\u00FF\u00FF\u00FF\u00FFtdmn\x00\x00\x00(ADBE Effect Parade\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00@tdsitdix\x00\x00\x00\x04\x00\x00\x00\x01tdmn\x00\x00\x00(Pseudo/0.20517463873237607\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run CycleLIST\x00\x00\x00dtdsptdot\x00\x00\x00\x04\u00FF\u00FF\u00FF\u00FFtdpl\x00\x00\x00\x04\x00\x00\x00\x01LIST\x00\x00\x00@tdsitdix\x00\x00\x00\x04\u00FF\u00FF\u00FF\u00FFtdmn\x00\x00\x00(ADBE End of path sentinel\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x02\u00F1\u0092sspcfnam\x00\x00\x00\bUtf8\x00\x00\x00\x00LIST\x00\x00h\u0096parTparn\x00\x00\x00\x04\x00\x00\x00\u0083tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0000\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ww\x05\u00D9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FF\u00FF\u00FF\x00\x00\x00\x00\x00\u00E1\x02\n\x00\x00\x00\x00\u008C\x10y\u00FBtdmn\x00\x00\x00(Pseudo/0.20517463873237607-0001\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rUse this value to start\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0002\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0003\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\ror stop the cycle:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0004\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0005\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nGeneral motion\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0006\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nWalk\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0007\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nRun\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0008\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rMain parameters:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0009\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0010\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rCharacter\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0011\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rAdjust the character traits\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0012\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0013\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nHeight\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00D\u00FA\x00\x00\x00\x00\x00\x00C\u00FA\x00\x00B\u00C8\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0014\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nEnergy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00C\x16\x00\x00A \x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0015\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nSoftness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00CH\x00\x00A\u00A0\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0016\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0017\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rWalk Cycle\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0018\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rHow does the character walk?\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0019\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0020\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nWalk speed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\x1C@\x00F\x1C@\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0021\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07Type\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\x1C@\x00F\x1C@\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00pdnm\x00\x00\x00\x1AUtf8\x00\x00\x00\x11Realistic|Dancing\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0022\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0023\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rRun Cycle\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0024\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rHow does the character run?\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0025\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0026\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nRun speed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\x1C@\x00F\x1C@\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0027\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0028\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rIndividual limb adjustments:\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0029\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0030\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rNeck and head\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0031\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Head swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\u00FF\u00FE\x00\x00\u00FF\u00FE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0032\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Neck swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0033\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nNeck softness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00A \x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0034\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0035\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rBody\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0036\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Torso swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x02\u0080\x00\x00\x02\u0080\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0037\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Spine swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x02\u0080\x00\x00\x02\u0080\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0038\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Hips swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0039\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nSpine softness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00A \x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0040\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nBody translation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00@\u00C0\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0041\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0042\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rArms\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0043\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Shoulders swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0044\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Arms swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x14\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0045\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nArms softness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00@\u00A0\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0046\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rLeft arm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0047\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Shoulder swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0048\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Arm swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0049\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nL.Arm softness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0050\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0051\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rRight arm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0052\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Shoulder swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0053\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Arm swing\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0054\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nR.Arm softness\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0055\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0056\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0057\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rLegs\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0058\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nFeet height\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00B\x10\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0059\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nFeet rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00CH\x00\x00B\u00C8\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0060\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rLeft leg\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0061\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nL.Foot height\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0062\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nL.Foot rotation amplitude\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0063\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0064\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rRight leg\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0065\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nR.Foot height\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00CH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0066\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nR.Foot rotation amplitude\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C3\u00FA\x00\x00C\u00FA\x00\x00\x00\x00\x00\x00B\u00C8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0067\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0068\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0069\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rAdvanced parameters:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0070\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0071\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nTime offset\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C2\u00C8\x00\x00B\u00C8\x00\x00\u00C2\u00C8\x00\x00B\u00C8\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0072\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nStep amplitude\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00Dz\x00\x00B\u00C8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0073\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nStep frequency\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00Dz\x00\x00B\u00C8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0074\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rUseful data:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0075\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0076\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rAnimation data\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0077\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rSpine\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0078\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Head rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FF\x14\u00E2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0079\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Neck rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FF\u00CB?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0080\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Torso rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ZW\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0081\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Spine rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00EDE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0082\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03Hips rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FD\u0088p\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0083\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nBody Y Position\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x13J\u008E\u00CE\u0097,\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0084\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0085\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rLeft arm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0086\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Shoulder rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FB.\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0087\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Arm rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\tr'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0088\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Forearm rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\u00E5\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0089\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Hand rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\r\u00E7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0090\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0091\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rRight arm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0092\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Shoulder rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FB.\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0093\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Arm rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00F6\u008D\u00D9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0094\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Forearm rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00F7\x1A\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0095\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Hand rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00FB\u00F2\x19\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0096\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0097\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rLeft leg\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0098\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nL.Foot X position\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@Sy\u00AD\u009C3\t\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0099\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nL.Foot Y position\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00BF\u00E9\u00A8B\u00DD\u00FA.\u0080\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0100\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Foot rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00FF\u00EC\u00DA>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0101\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03L.Foot roll\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0102\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0103\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rRight leg\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0104\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nR.Foot X position\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C0Q\"\u00AA\u00AA\u00AA\u00AA\u00AC\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0105\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nR.Foot Y position\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0106\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Foot rotation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0107\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03R.Foot roll\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\u00D4\u00D8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\u00C6\u00FA\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0108\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0109\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0110\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rParameters\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0111\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rMay be manually adjusted.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0112\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0113\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nLeg height (px)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@t\u0090\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00D\u00FA\x00\x00C\u00E1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0114\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0115\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rComputation\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0116\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rThese values are used\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0117\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0118\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rto compute the animation.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0119\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0120\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rThey can be useful for your\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0121\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0122\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\rown expressions.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0123\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0124\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nCycle frequency (Hz)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dy\u00C0\x00\x00\x00\x00\x00B\u00F0\x00\x00?\u0080\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0125\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nCycle duration (s)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0126\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nCycle duration (f)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\u00BB\u0080\x00\x00\x00\x00\x00F\u00BB\u0080\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0127\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nTime (s)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\u00EE\u00AA\u00AA\u00AA\u00AA\u00AA\u00AB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00G\u00A8\u00C0\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0128\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\nSpeed (px/s)\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@d\u0090\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\u00FA\x00\x00\x00\x00\x00\x00Dz\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0129\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Effect Built In Params\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00pard\x00\x00\x00\u0094\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x02\u0088\u00C0tdgptdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdmn\x00\x00\x00(Pseudo/0.20517463873237607-0000\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00ECtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x03tdsn\x00\x00\x00\bUtf8\x00\x00\x00\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00`\x00?\x1A6\u00E2\u00EB\x1CC-?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdpi\x00\x00\x00\x04\x00\x00\x0B\u00E1tdps\x00\x00\x00\x04\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0001\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00ECtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00 Utf8\x00\x00\x00\x17Use this value to start\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0002\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0003\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E6tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x12or stop the cycle:tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0004\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0005\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EGeneral motiontdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0006\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x04Walktdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\u00C5UUUW*u\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0007\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x03Run\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0008\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x10Main parameters:tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0009\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0010\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tCharacter\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0011\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00$Utf8\x00\x00\x00\x1BAdjust the character traits\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0012\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0013\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x06Heighttdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\x7F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0014\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x06Energytdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\u00C5UUUW*u\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@b\u00C0\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0015\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FCtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bSoftnesstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0016\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0017\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nWalk Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0018\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00$Utf8\x00\x00\x00\x1CHow does the character walk?tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0019\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0020\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nWalk speedtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0021\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00D8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x04Typetdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00?\x1A6\u00E2\u00EB\x1CC-?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0022\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0023\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRun Cycle\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0024\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00$Utf8\x00\x00\x00\x1BHow does the character run?\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0025\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0026\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRun speed\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0027\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0028\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00$Utf8\x00\x00\x00\x1CIndividual limb adjustments:tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0029\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0030\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rNeck and head\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0031\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nHead swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\u00C0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0032\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nNeck swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0033\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rNeck softness\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0034\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0035\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00D8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x04Bodytdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0036\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BTorso swing\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0037\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BSpine swing\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0038\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nHips swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0039\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0ESpine softnesstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0040\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x04tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x10Body translationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0041\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0042\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00D8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x04Armstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0043\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FShoulders swing\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0044\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nArms swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0045\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rArms softness\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0046\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DCtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bLeft armtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0047\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0080tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x10L.Shoulder swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0094/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar shouldersSwing = fx(\"Shoulders swing\").value;\r\nvalue + shouldersSwing;\r\ntdmn\x00\x00\x00(Pseudo/0.20517463873237607-0048\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01ntdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BL.Arm swing\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0085/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar armsSwing = fx(\"Arms swing\").value;\r\nvalue + armsSwing;\r\n\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0049\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0098tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EL.Arm softnesstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u008E/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar armsSoftness = fx(\"Arms softness\").value;\r\nvalue + armsSoftness;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0050\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0051\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRight arm\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0052\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0080tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x10R.Shoulder swingtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0094/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar shouldersSwing = fx(\"Shoulders swing\").value;\r\nvalue + shouldersSwing;\r\ntdmn\x00\x00\x00(Pseudo/0.20517463873237607-0053\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01ntdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BR.Arm swing\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0085/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar armsSwing = fx(\"Arms swing\").value;\r\nvalue + armsSwing;\r\n\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0054\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0098tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0ER.Arm softnesstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u008E/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar armsSoftness = fx(\"Arms softness\").value;\r\nvalue + armsSoftness;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0055\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0056\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0057\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00D8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\fUtf8\x00\x00\x00\x04Legstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0058\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x00tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BFeet height\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0059\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rFeet rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0060\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DCtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bLeft legtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0061\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0092tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rL.Foot height\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0088/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar feetHeight = fx(\"Feet height\").value;\r\nvalue + feetHeight;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0062\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u00A4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\"Utf8\x00\x00\x00\x19L.Foot rotation amplitude\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u008E/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar feetRotation = fx(\"Feet rotation\").value;\r\nvalue + feetRotation;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0063\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0064\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRight leg\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0065\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0092tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rR.Foot height\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0088/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar feetHeight = fx(\"Feet height\").value;\r\nvalue + feetHeight;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@i\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0066\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u00A4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\"Utf8\x00\x00\x00\x19R.Foot rotation amplitude\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u008E/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar feetRotation = fx(\"Feet rotation\").value;\r\nvalue + feetRotation;\r\ntdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0067\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0068\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0069\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1CUtf8\x00\x00\x00\x14Advanced parameters:tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0070\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0071\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x00tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BTime offset\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\u00C0Y\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0072\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EStep amplitudetdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u008F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0073\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x02tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EStep frequencytdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u008F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0074\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\fUseful data:tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0075\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0076\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EAnimation datatdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0077\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x05Spine\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0078\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u009Ctdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rHead rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00B1/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"Head swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"Neck softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 8 );\r\nt -= s\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: .5 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: .5 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle')*walk + animate(runKeys, 'cycle', 'cycle')*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0079\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00A2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rNeck rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00B7/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"Neck swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"Neck softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 6 );\r\nt -= s\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.08);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: .5 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 4*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 4*a, time: .5 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0080\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00A8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0ETorso rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00BD/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"Torso swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"Spine softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 4 );\r\nt -= s;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: .5 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 5*a, time: .5 }\r\n];\r\n\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0081\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00AEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0ESpine rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00C4/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"Spine swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"Spine softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 2 );\r\nt -= s;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.2);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: .5 }\r\n];\r\n\r\no -= s;\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 3*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a, time: .2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 3*a, time: .5 }\r\n];\r\n\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0082\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\ntdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\rHips rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\x1F/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"Hips swing\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: -0.5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 0.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -0.5*a, time: 1 }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: -2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -2*a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle' ,t)*walk + animate(runKeys, 'cycle', 'cycle' ,t)*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0083\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u0094tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FBody Y Position\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u0088/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"Body translation\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar dance = fx(\"Type\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na *= (h/100);\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0.2, -0.1);\r\n\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .2/dance, interpolation: gaussianInterpolation, params: -e },\r\n\t{ value: .5*a, time: .5/dance }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: 3*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: .2, interpolation: gaussianInterpolation, params: -e },\r\n\t{ value: 3*a, time: .5 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdum\x00\x00\x00\b\u00C0\u00DF@\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00DF@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0084\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0085\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DCtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bLeft armtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0086\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00B6tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1CUtf8\x00\x00\x00\x13L.Shoulder rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00C6/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"L.Shoulder swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"L.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 2, 0, 1 );\r\nt -= s;\r\nt += .5;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0087\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00A4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EL.Arm rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00BA/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"L.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"L.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 4 );\r\nt -= s;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -2*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0088\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00C8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x12L.Forearm rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00DA/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"L.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"L.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 7 );\r\nt -= s;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar a1 = clamp(-4*a, -110, 180);\r\n\r\nvar runKeys = [\r\n\t{ value: -a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a1, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0089\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00C6tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FL.Hand rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00DA/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"L.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"L.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 10 );\r\nt -= s;\r\na = linearExtrapolation(e, 0, 100, 0, 2.5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\nvar a1 = clamp(-4*a, -90, 180);\r\n\r\nvar runKeys = [\r\n\t{ value: -a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a1, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle' ,t)*walk + animate(runKeys, 'cycle', 'cycle' ,t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0090\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0091\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRight arm\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0092\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00B6tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1CUtf8\x00\x00\x00\x13R.Shoulder rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00C6/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"R.Shoulder swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"R.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 2, 0, 1 );\r\nt -= s;\r\nt += .5;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0093\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00AEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0ER.Arm rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00C4/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"R.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"R.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 4 );\r\nt -= s;\r\nt += .5;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar runKeys = [\r\n\t{ value: 2*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -2*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 2*a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0094\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00D2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x12R.Forearm rotationtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00E4/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"R.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"R.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 7 );\r\nt -= s;\r\nt += .5;\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\n\r\nvar a1 = clamp(-4*a, -110, 180);\r\n\r\nvar runKeys = [\r\n\t{ value: -a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a1, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0095\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00D0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FR.Hand rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00E4/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar e = fx(\"Energy\").value;\r\nvar a = fx(\"R.Arm swing\").value;\r\nvar s = fx(\"Softness\").value;\r\nvar ss = fx(\"R.Arm softness\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\ns /= 100;\r\nss /= 100;\r\ns = linearExtrapolation( s*ss, 0, 1, 0, 10 );\r\nt -= s;\r\nt += .5;\r\na = linearExtrapolation(e, 0, 100, 0, 2.5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, 0, -0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: .5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -.5*a, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 1 }\r\n];\r\n\r\ne -= .1;\r\nvar a1 = clamp(-4*a, -90, 180);\r\n\r\nvar runKeys = [\r\n\t{ value: -a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: a1, time: .5, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle' ,t)*walk + animate(runKeys, 'cycle', 'cycle' ,t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0096\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0097\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DCtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bLeft legtdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0098\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16Ftdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x11L.Foot X position\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x157/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Speed (px/s)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\nt += .5;\r\nwalk /= 100;\r\nrun /= 100;\r\ne = linearExtrapolation(e, 0, 100, 0.2, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: -.5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 0.5, interpolation: linear },\r\n\t{ value: -.5*a, time: 1 }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: -.6*a, time: .05, interpolation: gaussianInterpolation, params: e+.1 },\r\n\t{ value: .66*a, time: .42, interpolation: bezierInterpolation, params: [.2, 0, .8, .15 ] },\r\n\t{ value: .5*a, time: .5 },\r\n\t{ value: -.5*a, time: .85, interpolation: bezierInterpolation, params: [0.15, .7, .5, 1] },\r\n\t{ value: -.6*a, time: 1.05 }\r\n]\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdum\x00\x00\x00\b\u00C0\u00DF@\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00DF@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0099\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x17\u009Atdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x11L.Foot Y position\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x16\u008C/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar lh = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"L.Foot height\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\nt += .5;\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\nvar a = lh;\r\na /= 2;\r\na *= (h/100);\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, -0.2, 0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: 0, time: 0, interpolation: bezierInterpolation, params: [0, 0.1, .5, 1.0] },\r\n\t{ value: -a, time: 0.2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 0, time: 0.5 },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nvar a1 = clamp(-4*a, -lh, 0);\r\nvar a2 = -1.5*a;\r\n\r\nvar runKeys = [\r\n\t{ value: 0, time: .5 },\r\n\t{ value: 0, time: .85, interpolation: bezierInterpolation, params: [ 0.0, 0.0, .7, 1] },\r\n\t{ value: a1, time: 1.15, interpolation: gaussianInterpolation, params: e }, \r\n\t{ value: .5*a2, time: 1.3, interpolation: bezierInterpolation },\r\n\t{ value: a2, time: 1.4, interpolation: bezierInterpolation, params: [.33, 0, 1, .9] },\r\n\t{ value: 0, time: 1.5 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdum\x00\x00\x00\b\u00C0\u00DF@\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00DF@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0100\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x18\x00tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FL.Foot rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x17\x13/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"L.Foot height\").value;\r\nvar r = fx(\"L.Foot rotation amplitude\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\nt += .5;\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na /= 2;\r\na *= (h/100);\r\na *= (r/100);\r\na = linear(e, 0, 100, 0, a*4);\r\na = clamp(a, -180, 180);\r\na *= gMo;\r\nvar a2 = a*.65;\r\na2 = clamp(a2, -40, 40);\r\n\r\ne = linearExtrapolation(e, 0, 100, 0.2, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: 0, time: 0, interpolation: bezierInterpolation, params: [0, 0, 0.66, 1.0] },\r\n\t{ value: a, time: .1, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a2, time: .5, interpolation: bezierInterpolation, params: [0.33, 0, 1.0, 0.66] },\r\n\t{ value: 0, time: .6 },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nvar a1 = clamp(3*a, -200, 200);\r\n\r\nvar runKeys = [\r\n\t{ value: a1, time: 0 },\r\n\t{ value: a1, time: .15, interpolation: gaussianInterpolation, params: e},\r\n\t{ value: -a2, time: .4, interpolation: bezierInterpolation, params: [.33, 0, 1, 1] },\r\n\t{ value: 0, time: .55 },\r\n\t{ value: 0, time: .85, interpolation: bezierInterpolation, params: [0, 0, .66, 1] },\r\n\t{ value: a1, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0101\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00C2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BL.Foot roll\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00DA/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"L.Foot height\").value;\r\nvar r = fx(\"L.Foot rotation amplitude\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\nt += .5;\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na /= 2;\r\na *= (h/100);\r\na *= (r/100);\r\na = linear(e, 0, 100, 0, a*4);\r\na = clamp(a, -120, 120);\r\na *= gMo;\r\n\r\nvar walkKeys = [\r\n\t{ value: a, time: 0, interpolation: bezierInterpolation, params: [0, 0.2, .5, 1.0] },\r\n\t{ value: 0, time: .2 },\r\n\t{ value: 0, time: .7, interpolation: bezierInterpolation, params: [0.5, 0, .8, .66] },\r\n\t{ value: a, time: 1 }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: 0, time: 0 },\r\n\t{ value: 0, time: .7, interpolation: bezierInterpolation, params: [0, 0.0, .7, 1] },\r\n\t{ value: a, time: .9, interpolation: bezierInterpolation, params: [0, 0.3, .66, 1] },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0102\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0103\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\tRight leg\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0104\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16<tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x11R.Foot X position\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15-/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Speed (px/s)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\nwalk /= 100;\r\nrun /= 100;\r\ne = linearExtrapolation(e, 0, 100, 0.2, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: -.5*a, time: 0, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: .5*a, time: 0.5, interpolation: linear },\r\n\t{ value: -.5*a, time: 1 }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: -.6*a, time: .05, interpolation: gaussianInterpolation, params: e+.1 },\r\n\t{ value: .66*a, time: .42, interpolation: bezierInterpolation, params: [.2, 0, .8, .15 ] },\r\n\t{ value: .5*a, time: .5 },\r\n\t{ value: -.5*a, time: .85, interpolation: bezierInterpolation, params: [0.15, .7, .5, 1] },\r\n\t{ value: -.6*a, time: 1.05 }\r\n]\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\nfunction animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdum\x00\x00\x00\b\u00C0\u00DF@\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00DF@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0105\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x17\u0094tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x11R.Foot Y position\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x16\u0085/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar lh = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"R.Foot height\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\nvar a = lh;\r\na /= 2;\r\na *= (h/100);\r\na = linearExtrapolation(e, 0, 100, 0, 5*a);\r\na *= gMo;\r\ne = linearExtrapolation(e, 0, 100, -0.2, 0.4);\r\n\r\nvar walkKeys = [\r\n\t{ value: 0, time: 0, interpolation: bezierInterpolation, params: [0, 0.1, .5, 1.0] },\r\n\t{ value: -a, time: 0.2, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: 0, time: 0.5 },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nvar a1 = clamp(-4*a, -lh, 0);\r\nvar a2 = -1.5*a;\r\n\r\nvar runKeys = [\r\n\t{ value: 0, time: .5 },\r\n\t{ value: 0, time: .85, interpolation: bezierInterpolation, params: [ 0.0, 0.0, .7, 1] },\r\n\t{ value: a1, time: 1.15, interpolation: gaussianInterpolation, params: e }, \r\n\t{ value: .5*a2, time: 1.3, interpolation: bezierInterpolation },\r\n\t{ value: a2, time: 1.4, interpolation: bezierInterpolation, params: [.33, 0, 1, .9] },\r\n\t{ value: 0, time: 1.5 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdum\x00\x00\x00\b\u00C0\u00DF@\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00DF@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0106\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x17\u00F6tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FR.Foot rotation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x17\n/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"R.Foot height\").value;\r\nvar r = fx(\"R.Foot rotation amplitude\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na /= 2;\r\na *= (h/100);\r\na *= (r/100);\r\na = linear(e, 0, 100, 0, a*4);\r\na = clamp(a, -180, 180);\r\na *= gMo;\r\nvar a2 = a*.65;\r\na2 = clamp(a2, -40, 40);\r\n\r\ne = linearExtrapolation(e, 0, 100, 0.2, -0.1);\r\n\r\nvar walkKeys = [\r\n\t{ value: 0, time: 0, interpolation: bezierInterpolation, params: [0, 0, 0.66, 1.0] },\r\n\t{ value: a, time: .1, interpolation: gaussianInterpolation, params: e },\r\n\t{ value: -a2, time: .5, interpolation: bezierInterpolation, params: [0.33, 0, 1.0, 0.66] },\r\n\t{ value: 0, time: .6 },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nvar a1 = clamp(3*a, -200, 200);\r\n\r\nvar runKeys = [\r\n\t{ value: a1, time: 0 },\r\n\t{ value: a1, time: .15, interpolation: gaussianInterpolation, params: e},\r\n\t{ value: -a2, time: .4, interpolation: bezierInterpolation, params: [.33, 0, 1, 1] },\r\n\t{ value: 0, time: .55 },\r\n\t{ value: 0, time: .85, interpolation: bezierInterpolation, params: [0, 0, .66, 1] },\r\n\t{ value: a1, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0107\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x16\u00B8tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BR.Foot roll\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x15\u00CF/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar a = fx(\"Leg height (px)\").value;\r\nvar e = fx(\"Energy\").value;\r\nvar h = fx(\"R.Foot height\").value;\r\nvar r = fx(\"R.Foot rotation amplitude\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar t = fx(\"Time (s)\").value;\r\n\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\na /= 2;\r\na *= (h/100);\r\na *= (r/100);\r\na = linear(e, 0, 100, 0, a*4);\r\na = clamp(a, -120, 120);\r\na *= gMo;\r\n\r\nvar walkKeys = [\r\n\t{ value: a, time: 0, interpolation: bezierInterpolation, params: [0, 0.2, .5, 1.0] },\r\n\t{ value: 0, time: .2 },\r\n\t{ value: 0, time: .7, interpolation: bezierInterpolation, params: [0.5, 0, .8, .66] },\r\n\t{ value: a, time: 1 }\r\n];\r\n\r\nvar runKeys = [\r\n\t{ value: 0, time: 0 },\r\n\t{ value: 0, time: .7, interpolation: bezierInterpolation, params: [0, 0.0, .7, 1] },\r\n\t{ value: a, time: .9, interpolation: bezierInterpolation, params: [0, 0.3, .66, 1] },\r\n\t{ value: 0, time: 1 }\r\n];\r\n\r\nfunction linearExtrapolation( t, tMin, tMax, value1, value2 )\r\n{\r\n  if (tMax == tMin) return (value1+value2) / 2;\r\n  return value1 + (( t - tMin) / (tMax - tMin)) * (value2 - value1);\r\n}\r\n\r\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof bezierPoints === 'undefined') bezierPoints = [0.33,0.0,0.66,1.0];\r\n\r\n    if (arguments.length !== 5 && arguments.length !== 6) return (value1+value2)/2;\r\n    var a = value2 - value1;\r\n    var b = tMax - tMin;\r\n    if (b == 0) return (value1+value2)/2;\r\n    var c = clamp((t - tMin) / b, 0, 1);\r\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4) bezierPoints = [0.33,0.0,0.66,1];\r\n    return a * h(c, bezierPoints) + value1;\r\n\r\n    function h(f, g) {\r\n        var x = 3 * g[0];\r\n        var j = 3 * (g[2] - g[0]) - x;\r\n        var k = 1 - x - j;\r\n        var l = 3 * g[1];\r\n        var m = 3 * (g[3] - g[1]) - l;\r\n        var n = 1 - l - m;\r\n        var d = f;\r\n        for (var i = 0; i < 5; i++) {\r\n            var z = d * (x + d * (j + d * k)) - f;\r\n            if (Math.abs(z) < 1e-3) break;\r\n            d -= z / (x + d * (2 * j + 3 * k * d));\r\n        }\r\n        return d * (l + d * (m + d * n));\r\n    }\r\n}\r\n\r\nfunction gaussianInterpolation( t, tMin, tMax, value1, value2, rate )\r\n{\r\n    if (typeof tMin === 'undefined') tMin = 0;\r\n    if (typeof tMax === 'undefined') tMax = 1;\r\n    if (typeof value1 === 'undefined') value1 = 0;\r\n    if (typeof value2 === 'undefined') value2 = 0;\r\n    if (typeof rate === 'undefined') rate = 0;\r\n\r\n    // fix small bump at first value\r\n    if (t != tMin)\r\n    {\r\n        var newValue1 = gaussianInterpolation( tMin, tMin, tMax, value1, value2, rate );\r\n        var offset = newValue1 - value1;\r\n        value1 = value1 - offset;\r\n    }\r\n\tif (rate < 0) rate = rate*10;\r\n\trate = linear(t, tMin, tMax, 0.25, rate);\r\n\tvar r = ( 1 - rate );\r\n    var fwhm = (tMax-tMin) * r;\r\n    var center = tMax;\r\n\tif (t >= tMax) return value2;\r\n    if (fwhm === 0 && t == center) return value2;\r\n    else if (fwhm === 0) return value1;\r\n\t\r\n    var exp = -4 * Math.LN2;\r\n    exp *= Math.pow((t - center),2);\r\n    exp *= 1/ Math.pow(fwhm, 2);\r\n    var result = Math.pow(Math.E, exp);\r\n\tresult = result * (value2-value1) + value1;\r\n    return result;\r\n}\r\n\r\n function animate(ks, loopOut, loopIn, ct) {\r\n    if (ks.length == 0) return value;\r\n    if (ks.length == 1) return ks[0].value;\r\n    if (typeof loopOut === 'undefined') loopOut = 'none';\r\n    if (typeof loopIn === 'undefined') loopIn = 'none';\r\n\tif (typeof ct === 'undefined') ct = time;\r\n    // times\r\n    var startTime = ks[0].time;\r\n    var endTime = ks[ks.length-1].time;\r\n    var duration = endTime - startTime;\r\n    // Loop out\r\n    if ( ct >= endTime )\r\n    {\r\n        if ( loopOut == 'cycle' ) ct = ((ct - startTime) % duration) + startTime;\r\n        else if ( loopOut == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Loop in\r\n    else if ( ct < startTime) {\r\n        if ( loopIn == 'cycle' ) ct = ((ct - startTime) % duration) + startTime + duration;\r\n        else if ( loopIn == 'pingpong' ) {\r\n            var d = duration * 2;\r\n            ct += d;\r\n            ct = (ct-startTime) % d;\r\n            if (ct > duration) ct = d - ct;\r\n            ct += startTime;\r\n        }\r\n    }\r\n    // Find the right keyframe\r\n    for (var i = 0; i < ks.length; i++) {\r\n        var k = ks[i];\r\n        if (k.time > ct && i == 0) return k.value;\r\n        if (k.time == ct) return k.value;\r\n        if (k.time < ct) {\r\n            // it was the last one\r\n            if (i == ks.length - 1) return k.value;\r\n            // The next key\r\n            var nk = ks[i+1];\r\n            // it's not the current keyframe\r\n            if (nk.time < ct) continue;\r\n            if (typeof k.interpolation === 'undefined') return linear(ct, k.time, nk.time, k.value, nk.value);\r\n            // interpolate\r\n            if (typeof k.params === 'undefined') return k.interpolation(ct, k.time, nk.time, k.value, nk.value);\r\n            else return k.interpolation(ct, k.time, nk.time, k.value, nk.value, k.params);\r\n        }\r\n    }\r\n    // just in case...\r\n    return value;\r\n}\r\n\r\nvalue + animate(walkKeys, 'cycle', 'cycle', t)*walk + animate(runKeys, 'cycle', 'cycle', t)*run;\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0108\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0109\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0110\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x12Utf8\x00\x00\x00\nParameterstdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0111\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00EEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\"Utf8\x00\x00\x00\x19May be manually adjusted.\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0112\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0113\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\x04tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x0FLeg height (px)\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@t\u0090\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u009F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0114\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0115\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\x0BComputation\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0116\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00EAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1EUtf8\x00\x00\x00\x15These values are used\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0117\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0118\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00EEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\"Utf8\x00\x00\x00\x19to compute the animation.\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0119\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0120\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00F0tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00$Utf8\x00\x00\x00\x1BThey can be useful for your\x00tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0121\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0122\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E4tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x18Utf8\x00\x00\x00\x10own expressions.tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0123\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0124\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x02*tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1CUtf8\x00\x00\x00\x14Cycle frequency (Hz)tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x01\x19/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar characterHeight = fx(\"Height\").value;\r\nvar freq = fx(\"Step frequency\");\r\nvar run = fx(\"Run\");\r\ncharacterHeight /= 100;\r\nrun /= 100;\r\nrun = 1-(run*.33);\r\nfreq /= 100;\r\nfreq /= characterHeight;\r\nfreq /= run;\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@^\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0125\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u00A2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x12Cycle duration (s)tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0093/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar freq = fx(\"Cycle frequency (Hz)\").value;\r\nif (freq> 0) 1/freq;\r\nelse 0;\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u008F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0126\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x01\u0094tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1AUtf8\x00\x00\x00\x12Cycle duration (f)tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x00\u0085/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar dur = fx(\"Cycle duration (s)\").value;\r\ntimeToFrames(dur);\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u00D7p\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0127\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x05<tdbstdsb\x00\x00\x00\x04\x00\x00\x02\x01tdsn\x00\x00\x00\x10Utf8\x00\x00\x00\bTime (s)tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x048/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar run = fx(\"Run\");\r\nvar stepFreq = fx(\"Step frequency\");\r\nvar freq = fx(\"Cycle frequency (Hz)\");\r\nvar o = fx(\"Time offset\");\r\no /= 100;\r\n\r\nvar result = freq.value * time;\r\n\r\n// Get and sort key times\r\nvar times = [];\r\nfor (var i = 1; i <= run.numKeys; i++) {\r\n\tvar t = run.key(i).time;\r\n\t//if (t >= time) break;\r\n    times.push(t);\r\n}\r\nfor (var i = 1; i <= stepFreq.numKeys; i++) {\r\n    var t = stepFreq.key(i).time;\r\n\t//if (t >= time) break;\r\n    times.push(t);\r\n}\r\n\r\ntimes.sort(function(a, b){return a - b});\r\nvar n = times.length;\r\n\r\nvar t0 = times[0];\r\nif (n > 0 && t0 < time){\r\n\tvar v0 = freq.valueAtTime(t0);\r\n\tresult = v0 * t0;\r\n\tfor (var i = 1; i < n; i++){\r\n\t\tvar t2 = times[i];\r\n\t\tif (t2 > time) break;\r\n\t\tvar t1 = times[i-1];\r\n\t\tvar v1 = freq.valueAtTime(t1);\r\n\t\tvar v2 = freq.valueAtTime(t2-0.001);\r\n\t\tresult += (v1 + v2)*(t2 - t1)/2;\r\n\t}\r\n\tvar t = times[i-1];\r\n\tvar v = freq.valueAtTime(t);\r\n\tresult += (freq.value + v)*(time - t)/2;\r\n} else {\r\n\tresult = freq.value*time;\r\n}\r\n\r\nresult + o;//*/tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u008F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0128\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x03\u00FEtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x14Utf8\x00\x00\x00\fSpeed (px/s)tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\x00\u00FF\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Utf8\x00\x00\x02\u00F5/*== Duik: walk-run cycle ==*/\r\nvar fx = thisProperty.propertyGroup();\r\nvar legHeight = fx(\"Leg height (px)\").value;\r\nvar freq = fx(\"Cycle frequency (Hz)\").value;\r\nvar walkSpeed = fx(\"Walk speed\").value;\r\nvar runSpeed = fx(\"Run speed\").value;\r\nvar gMo = fx(\"General motion\").value;\r\nvar walk = fx(\"Walk\").value;\r\nvar run = fx(\"Run\").value;\r\nvar freq = fx(\"Step frequency\").value;\r\nvar amp = fx(\"Step amplitude\").value;\r\nvar energy = fx(\"Energy\").value;\r\namp /= 100;\r\nfreq /= 100;\r\nenergy /= 100;\r\nwalkSpeed /= 100;\r\nrunSpeed /= 100;\r\ngMo /= 100;\r\nwalk /= 100;\r\nrun /= 100;\r\nwalk *= legHeight / 2 * walkSpeed;\r\nrun *= legHeight * runSpeed * 1.1;\r\nvar result = walk+run;\r\nresult *= freq;\r\nresult *= gMo;\r\nresult /= freq;\r\nresult *= amp;\r\nresult *= (5*energy);\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@\u008F@\x00\x00\x00\x00\x00tdmn\x00\x00\x00(Pseudo/0.20517463873237607-0129\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00E2tdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x16Utf8\x00\x00\x00\x0EWalk-Run Cycletdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\u008C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Effect Built In Params\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x036tdgptdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x1CUtf8\x00\x00\x00\x13Compositing Options\x00tdmn\x00\x00\x00(ADBE Effect Mask Parade\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00Vtdgptdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x06-_0_/-tdmn\x00\x00\x00(ADBE Group End\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Effect Mask Opacity\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00FAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x06-_0_/-tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\u00FF\u00FF\u00FF\u00FF\x00\x00`\x00?\x1A6\u00E2\u00EB\x1CC-?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(@Y\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdum\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x00\x00tduM\x00\x00\x00\b@Y\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Force CPU GPU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST\x00\x00\x00\u00DAtdbstdsb\x00\x00\x00\x04\x00\x00\x00\x01tdsn\x00\x00\x00\x0EUtf8\x00\x00\x00\x06-_0_/-tdb4\x00\x00\x00|\u00DB\u0099\x00\x01\x00\x01\x00\x00\x00\x02\x00\x04\x00\x00`\x00?\x1A6\u00E2\u00EB\x1CC-?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00cdat\x00\x00\x00(?\u00F0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Group End\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00tdmn\x00\x00\x00(ADBE Group End\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00pgui\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00<?xpacket begin=\"\u00EF\u00BB\u00BF\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\n<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        \">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n            xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\"\n            xmlns:xmpMM=\"http://ns.adobe.com/xap/1.0/mm/\"\n            xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\">\n         <dc:format>application/vnd.adobe.aftereffects.preset-animation</dc:format>\n         <xmp:CreatorTool>Adobe Photoshop 22.5 (20210825.orig.371 f9e5e2d)  (Windows)</xmp:CreatorTool>\n         <xmp:CreateDate>2022-05-03T16:18:51+02:00</xmp:CreateDate>\n         <xmp:MetadataDate>2022-05-03T16:18:51+02:00</xmp:MetadataDate>\n         <xmp:ModifyDate>2022-05-03T16:18:51+02:00</xmp:ModifyDate>\n         <xmpMM:InstanceID>xmp.iid:ad485151-2b62-d345-9987-c2cd04f0cd71</xmpMM:InstanceID>\n         <xmpMM:DocumentID>xmp.did:ad485151-2b62-d345-9987-c2cd04f0cd71</xmpMM:DocumentID>\n         <xmpMM:OriginalDocumentID>xmp.did:ad485151-2b62-d345-9987-c2cd04f0cd71</xmpMM:OriginalDocumentID>\n         <xmpMM:History>\n            <rdf:Seq>\n               <rdf:li rdf:parseType=\"Resource\">\n                  <stEvt:action>created</stEvt:action>\n                  <stEvt:instanceID>xmp.iid:ad485151-2b62-d345-9987-c2cd04f0cd71</stEvt:instanceID>\n                  <stEvt:when>2022-05-03T16:18:51+02:00</stEvt:when>\n                  <stEvt:softwareAgent>Adobe Photoshop 22.5 (20210825.orig.371 f9e5e2d)  (Windows)</stEvt:softwareAgent>\n               </rdf:li>\n            </rdf:Seq>\n         </xmpMM:History>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                           \n<?xpacket end=\"w\"?>", "preset_walk_cycle.ffx", "presets" );
preset_walk_cycle;
