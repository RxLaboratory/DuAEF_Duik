function buildControllersUI()
{
    // UTILS
    function updateEditPanel ()
    {
        setSideSelector( sideEditSelector, Duik.Layer.side() );

        setLocationSelector( locationEditSelector, Duik.Layer.location());

        colorEditSelector.setColor( Duik.Controller.color( ) );

        sizeEdit.setText( Duik.Controller.size() );

        opacityEdit.setText( Duik.Controller.opacity() );

        characterEdit.setText( Duik.Layer.characterName() );

        limbEdit.setText( Duik.Layer.limbName() );
    }

    function setSide()
    {
        var side = getSide(sideEditSelector);
        Duik.Controller.setSide(side);
    }

    function setLocation()
    {
        var location = getLocation(locationEditSelector);
        Duik.Controller.setLocation(location);
    }

    function setColor()
    {
        var color = colorEditSelector.color;
        Duik.Controller.setColor(color);
    }

    function setSize()
    {
        var size = parseInt( sizeEdit.text );
        if (isNaN(size)) return;
        Duik.Controller.setSize(size);
    }

    function setOpacity()
    {
        var opacity = parseInt( opacityEdit.text );
        if (isNaN(opacity)) return;
        Duik.Controller.setOpacity(opacity);
    }

    function setCharacterName()
    {
        Duik.Controller.setCharacterName( characterEdit.text );
    }

    function setLimbName()
    {
        Duik.Controller.setLimbName( limbEdit.text );
    }

    // UI

    // A Spacer
    var spacer = this.add('group');
    spacer.margins = 0;
    spacer.spacing = 0;
    spacer.size = [-1,3];
    
    // A title
    DuScriptUI.staticText( this, DuScriptUI.String.CONTROLLERS ).alignment = ['center', 'top'];

    // tools
    var toolsGroup = DuScriptUI.toolBar( this );

    var selectButton = toolsGroup.addButton(
        DuScriptUI.String.SELECT_CONTROLLERS,
        w12_select,
        DuScriptUI.String.CTRL_SELECT_TIP
    );
    selectButton.onClick = Duik.Controller.select;

    var showButton = toolsGroup.addButton(
        DuScriptUI.String.SHOW_HIDE_CONTROLLERS,
        w12_show,
        DuScriptUI.String.CTRL_SHOW_TIP
    );
    showButton.onClick = Duik.Controller.toggleVisibility;

    var tagButton = toolsGroup.addButton(
        DuScriptUI.String.TAG_CONTROLLERS,
        w12_tag,
        DuScriptUI.String.CTRL_TAG_TIP
    );
    tagButton.onClick = Duik.Controller.tag;

    var bakeButton = toolsGroup.addButton(
        DuScriptUI.String.BAKE_CONTROLLERS,
        w12_bake,
        DuScriptUI.String.CTRL_BAKE_TIP
    );
    bakeButton.onClick = Duik.Controller.bake;

    var editButton = toolsGroup.addButton(
        DuScriptUI.String.CTRL_SETTINGS,
        DuScriptUI.Icon.SETTINGS,
        DuScriptUI.String.CTRL_EDIT_TIP
    );
    editButton.onClick = function()
    {
        //updateEditPanel();
        mainGroup.visible = false;
        editGroup.visible = true;
    }

    // Main stack

    var stackGroup = DuScriptUI.group( this, 'stacked');
    stackGroup.margins = 3;
    stackGroup.alignment = ['fill','fill'];

    // Main group
    var mainGroup = DuScriptUI.group( stackGroup, 'column');
    mainGroup.alignment = ['fill','fill'];
    mainGroup.spacing = 3;

    // Controllers

    // A Spacer
    /*var spacer = mainGroup.add('group');
    spacer.margins = 0;
    spacer.spacing = 0;
    spacer.size = [-1,3];*/

    var line1 = DuScriptUI.group( mainGroup, 'row');
    //line1.alignment = [ 'center', 'top'];

    var rotateButton = createCtrlButton(
        line1,
        w16_rotate,
        DuScriptUI.String.CTRL_ROTATE_TIP,
        Duik.Controller.Type.ROTATION
        );

    var moveHButton = createCtrlButton(
        line1,
        w16_move_h,
        DuScriptUI.String.CTRL_MOVE_H_TIP,
        Duik.Controller.Type.X_POSITION
        );
    var moveVButton = createCtrlButton(
        line1,
        w16_move_v,
        DuScriptUI.String.CTRL_MOVE_V_TIP,
        Duik.Controller.Type.Y_POSITION
        );
    var moveButton = createCtrlButton(
        line1,
        w16_move,
        DuScriptUI.String.CTRL_MOVE_TIP,
        Duik.Controller.Type.POSITION
        );
    var moveRotateButton = createCtrlButton(
        line1,
        w16_move_rotate,
        DuScriptUI.String.CTRL_MOVE_ROTATE_TIP,
        Duik.Controller.Type.TRANSFORM
        );

    var line2 = DuScriptUI.group( mainGroup, 'row');
    //line2.alignment = [ 'center', 'top'];

    var cameraButton = createCtrlButton(
        line2,
        w16_camera,
        DuScriptUI.String.CTRL_CAMERA_TIP,
        Duik.Controller.Type.CAMERA
        );
    var sliderButton = createCtrlButton(
        line2,
        w16_slider,
        DuScriptUI.String.CTRL_SLIDER_TIP,
        Duik.Controller.Type.SLIDER
        );
    var slider2DButton = createCtrlButton(
        line2,
        w16_2d_slider,
        DuScriptUI.String.CTRL_2D_SLIDER_TIP,
        Duik.Controller.Type.DOUBLE_SLIDER
        );
    var angleButton = createCtrlButton(
        line2,
        w16_angle,
        DuScriptUI.String.CTRL_ANGLE_TIP,
        Duik.Controller.Type.ANGLE
        );
    var eyebrowButton = createCtrlButton(
        line2,
        w16_eyebrow,
        DuScriptUI.String.CTRL_EYEBROW_TIP,
        Duik.Controller.Type.EYEBROW
        );

    var line3 = DuScriptUI.group( mainGroup, 'row');
    //line3.alignment = [ 'center', 'top'];

    var earButton = createCtrlButton(
        line3,
        w16_ear,
        DuScriptUI.String.CTRL_EAR_TIP,
        Duik.Controller.Type.EAR
        );
    var hairButton = createCtrlButton(
        line3,
        w16_hair,
        DuScriptUI.String.CTRL_HAIR_TIP,
        Duik.Controller.Type.HAIR
        );
    var mouthButton = createCtrlButton(
        line3,
        w16_mouth,
        DuScriptUI.String.CTRL_MOUTH_TIP,
        Duik.Controller.Type.MOUTH
        );
    var noseButton = createCtrlButton(
        line3,
        w16_nose,
        DuScriptUI.String.CTRL_NOSE_TIP,
        Duik.Controller.Type.NOSE
        );
    var eyeButton = createCtrlButton(
        line3,
        w16_eye,
        DuScriptUI.String.CTRL_EYE_TIP,
        Duik.Controller.Type.EYE
        );

    var line4 = DuScriptUI.group( mainGroup, 'row');
    //line4.alignment = [ 'center', 'top'];

    var headButton = createCtrlButton(
        line4,
        w16_head,
        DuScriptUI.String.CTRL_HEAD_TIP,
        Duik.Controller.Type.HEAD
        );
    var footButton = createCtrlButton(
        line4,
        w16_foot,
        DuScriptUI.String.CTRL_FOOT_TIP,
        Duik.Controller.Type.FOOT
        );
    var pawButton = createCtrlButton(
        line4,
        w16_digitigrade,
        DuScriptUI.String.CTRL_PAW_TIP,
        Duik.Controller.Type.CLAWS
        );
    var hoofButton = createCtrlButton(
        line4,
        w16_ungulate,
        DuScriptUI.String.CTRL_HOOF_TIP,
        Duik.Controller.Type.HOOF
        );
    var handButton = createCtrlButton(
        line4,
        w16_controller,
        DuScriptUI.String.CTRL_HAND_TIP,
        Duik.Controller.Type.HAND
        );

    var line5 = DuScriptUI.group( mainGroup, 'row');
    //line5.alignment = [ 'center', 'top'];

    var hipsButton = createCtrlButton(
        line5,
        w16_hips,
        DuScriptUI.String.CTRL_HIPS_TIP,
        Duik.Controller.Type.HIPS
        );
    var bodyButto = createCtrlButton(
        line5,
        w16_body,
        DuScriptUI.String.CTRL_BODY_TIP,
        Duik.Controller.Type.BODY
        );
    var shouldersButton = createCtrlButton(
        line5,
        w16_shoulders,
        DuScriptUI.String.CTRL_SHOULDERS_TIP,
        Duik.Controller.Type.SHOULDERS
        );
    var tailButton = createCtrlButton(
        line5,
        w16_tail_ctrl,
        DuScriptUI.String.CTRL_TAIL_TIP,
        Duik.Controller.Type.TAIL
        );
    var hairStrandButton = createCtrlButton(
        line5,
        w16_hair_strand,
        DuScriptUI.String.CTRL_HAIR_STRAND_TIP,
        Duik.Controller.Type.PONEYTAIL
        );

    var line6 = DuScriptUI.group( mainGroup, 'row');
    //line6.alignment = [ 'center', 'top'];

    var finButton = createCtrlButton(
        line6,
        w16_fin,
        DuScriptUI.String.CTRL_FIN_TIP,
        Duik.Controller.Type.FIN
        );
    var wingButton = createCtrlButton(
        line6,
        w16_wing,
        DuScriptUI.String.CTRL_WING_TIP,
        Duik.Controller.Type.WING
        );
    var pincerButton = createCtrlButton(
        line6,
        w16_arthropod,
        DuScriptUI.String.CTRL_PINCER_TIP,
        Duik.Controller.Type.PINCER
        );
    var line7 = DuScriptUI.group( mainGroup, 'row');
    //line7.alignment = [ 'center', 'top'];

    var audioButton = createCtrlButton(
        line7,
        w16_audio,
        DuScriptUI.String.CTRL_AUDIO_TIP,
        Duik.Controller.Type.AUDIO
        );
    var nullButton = createCtrlButton(
        line7,
        w16_null,
        DuScriptUI.String.CTRL_NULL_TIP,
        Duik.Controller.Type.NULL
        );

    // Tools

    DuScriptUI.separator(mainGroup);

    // Pseudo Effects
	var fxButton = DuScriptUI.multiButton(
        mainGroup,
        DuScriptUI.String.CTRL_PSEUDOEFFECT,
        w16_fx,
        DuScriptUI.String.CTRL_PSEUDOEFFECT_TIP
    );
    fxButton.build = function()
    {
        var fxEyesButton = this.addButton(
            DuScriptUI.String.EYES,
            w16_eye,
            DuScriptUI.String.CTRL_PSEUDOEFFECT_EYES_TIP
        );
        fxEyesButton.onClick = function () {
            Duik.Controller.pseudoEffect( Duik.Controller.PseudoEffect.EYES );
        }
        var fxFingersButton = this.addButton(
            DuScriptUI.String.FINGERS,
            w16_fingers,
            DuScriptUI.String.CTRL_PSEUDOEFFECT_FINGERS_TIP
        );
        fxFingersButton.onClick = function () {
            Duik.Controller.pseudoEffect( Duik.Controller.PseudoEffect.FINGERS );
        }
        var fxHandButton = this.addButton(
            DuScriptUI.String.HAND,
            w16_controller,
            DuScriptUI.String.CTRL_PSEUDOEFFECT_HAND_TIP
        );
        fxHandButton.onClick = function () {
            Duik.Controller.pseudoEffect( Duik.Controller.PseudoEffect.HAND );
        }
        var fxHeadButton = this.addButton(
            DuScriptUI.String.HEAD,
            w16_head,
            DuScriptUI.String.CTRL_PSEUDOEFFECT_HEAD_TIP
        );
        fxHeadButton.onClick = function () {
            Duik.Controller.pseudoEffect( Duik.Controller.PseudoEffect.HEAD );
        }
    }
    
    var extractButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.CTRL_EXTRACT,
        w16_extract,
        DuScriptUI.String.CTRL_EXTRACT_TIP,
        true
    );
    extractButton.optionsPopup.build = function ()
    {
        var extractModeSelector = DuScriptUI.selector( extractButton.optionsPanel );
        extractModeSelector.addButton(
            DuScriptUI.String.USE_EXPRESSIONS,
            w16_expression
        );
        extractModeSelector.addButton(
            DuScriptUI.String.USE_ESSENTIAL_PROPERTIES,
            w16_essential_property
        );
        if (DuAE.version.version  < 17.0) extractModeSelector.setCurrentIndex( 0 );
        else extractModeSelector.setCurrentIndex( 1 );

        var extractBakeButton = DuScriptUI.checkBox(
            extractButton.optionsPanel,
            DuScriptUI.String.BAKE_CONTROLLERS,
            w16_bake
        );
        extractBakeButton.setChecked( true );

        extractButton.onClick = function() {

            var useEP = extractModeSelector.index == 1;
            var bake = extractBakeButton.checked;

            Duik.Controller.extract( undefined, useEP, bake);
        }
    }
    

    // Edit Group
    var editGroup = DuScriptUI.group( stackGroup, 'column');
    editGroup.alignment = ['fill','top'];

    var pickButton = DuScriptUI.button(
        editGroup,
        DuScriptUI.String.PICK_LAYER,
        DuScriptUI.Icon.EYE_DROPPER
    );
    pickButton.onClick = updateEditPanel;

    var sideEditGroup = DuScriptUI.group(editGroup, 'row');
    var sideEditSelector = createSideSelector( sideEditGroup );
    var sideEditApplyButton = DuScriptUI.button(
        sideEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_SIDE_TIP
    );
    sideEditApplyButton.alignment = ['right', 'center'];
    sideEditApplyButton.onClick = setSide;

    var locationEditGroup = DuScriptUI.group(editGroup, 'row');
    var locationEditSelector = createLocationSelector( locationEditGroup );
    var locationEditApplyButton = DuScriptUI.button(
        locationEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_LOCATION_TIP
    );
    locationEditApplyButton.alignment = ['right', 'center'];
    locationEditApplyButton.onClick = setLocation;

    var colorEditGroup = DuScriptUI.group(editGroup, 'row');
    var colorEditSelector = DuScriptUI.colorSelector( colorEditGroup, DuScriptUI.String.LAYER_COLOR_TIP );
    var colorEditApplyButton = DuScriptUI.button(
        colorEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_COLOR_TIP
    );
    colorEditApplyButton.alignment = ['right', 'center'];
    colorEditApplyButton.onClick = setColor;

    var sizeEditGroup = DuScriptUI.group( editGroup, 'row' );
    var sizeEditLabel = DuScriptUI.staticText( sizeEditGroup, tr(DuScriptUI.String.SIZE) + ':',  undefined, false);
    sizeEditLabel.alignment = ['left', 'center'];
    var sizeEdit = DuScriptUI.editText(
        sizeEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.LAYER_SIZE_TIP),
        false
    );
    sizeEdit.alignment = ['fill', 'fill'];
    var sizeEditApplyButton = DuScriptUI.button(
        sizeEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_SIZE_TIP
    );
    sizeEditApplyButton.alignment = ['right', 'center'];
    sizeEditApplyButton.onClick = setSize;

    var opacityEditGroup = DuScriptUI.group( editGroup, 'row' );
    var opacityEditLabel = DuScriptUI.staticText( opacityEditGroup, tr(DuScriptUI.String.OPACITY) + ':',  undefined, false);
    opacityEditLabel.alignment = ['left', 'center'];
    var opacityEdit = DuScriptUI.editText(
        opacityEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.BONE_OPACITY_TIP),
        false
    )
    opacityEdit.alignment = ['fill', 'fill'];
    var opacityEditApplyButton = DuScriptUI.button(
        opacityEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_OPACITY_TIP
    );
    opacityEditApplyButton.alignment = ['right', 'center'];
    opacityEditApplyButton.onClick = setOpacity;

    var characterEditGroup = DuScriptUI.group( editGroup, 'row' );
    var characterEditLabel = DuScriptUI.staticText( characterEditGroup, tr(DuScriptUI.String.CHARACTER) + ':',  undefined, false);
    characterEditLabel.alignment = ['left', 'center'];
    var characterEdit = DuScriptUI.editText(
        characterEditGroup,
        '',
        '',
        '',
        DuScriptUI.String.CHARACTER_NAME,
        DuScriptUI.String.LAYER_CHARACTER_TIP,
        false
    )
    characterEdit.alignment = ['fill', 'fill'];
    var characterEditApplyButton = DuScriptUI.button(
        characterEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_CHARACTER_TIP
    );
    characterEditApplyButton.alignment = ['right', 'center'];
    characterEditApplyButton.onClick = setCharacterName;

    var limbEditGroup = DuScriptUI.group( editGroup, 'row' );
    var limbEditLabel = DuScriptUI.staticText( limbEditGroup, tr(DuScriptUI.String.LIMB) + ':',  undefined, false);
    limbEditLabel.alignment = ['left', 'center'];
    var limbEdit = DuScriptUI.editText(
        limbEditGroup,
        '',
        '',
        '',
        DuScriptUI.String.LIMB_NAME,
        tr(DuScriptUI.String.LAYER_LIMB_TIP),
        false
    )
    limbEdit.alignment = ['fill', 'fill'];
    var limbEditApplyButton = DuScriptUI.button(
        limbEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.LAYER_LIMB_TIP
    );
    limbEditApplyButton.alignment = ['right', 'center'];
    limbEditApplyButton.onClick = setLimbName;

    DuScriptUI.separator( editGroup );

    // Valid button
    var validGroup = DuScriptUI.group(editGroup, 'row');
    var cancelButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.CANCEL,
        DuScriptUI.Icon.BACK,
        DuScriptUI.String.CANCEL
    )
    cancelButton.onClick = function()
    {
        mainGroup.visible = true;
        editGroup.visible = false;
    }

    var applyEditButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.APPLY,
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.APPLY
    )
    applyEditButton.onClick = function ()
    {
        setSide();
        setLocation();
        setColor();
        setSize();
        setOpacity();
        setCharacterName();
        setLimbName();
    }

    editGroup.visible = false;

}