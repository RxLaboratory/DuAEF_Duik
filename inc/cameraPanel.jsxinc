function buildCameraPanelUI( tab )
{
    // A Spacer
    var spacer = tab.add('group');
    spacer.margins = 0;
    spacer.spacing = 0;
    spacer.size = [-1,3];

    // A title
    DuScriptUI.staticText( tab, DuScriptUI.String.CAMERAS ).alignment = ['center', 'top'];

    // tools
    var toolsGroup = DuScriptUI.toolBar( this );

    // DuFrame
    var frameButton = toolsGroup.addButton(
        DuScriptUI.String.FRAMING_GUIDES,
        w12_frame,
        DuScriptUI.String.FRAMING_GUIDES_TIP
    );
    frameButton.onClick = Duik.Camera.frame;

    // Scale Z-Link
    var scaleZLinkButton = toolsGroup.addButton(
        DuScriptUI.String.SCALE_Z_LINK,
        w12_scale_z_link,
        DuScriptUI.String.SCALE_Z_LINK_TIP
    );
    scaleZLinkButton.onClick = function() {
        var result = Duik.Camera.scaleZLink();
        if (result == 0) alert(DuScriptUI.String.NO_CAMERA_ALERT);
        else if (result == -1) alert(DuScriptUI.String.SELECT_LAYERS_ALERT);
    }

    // A Spacer
    var spacer = tab.add('group');
    spacer.margins = 0;
    spacer.spacing = 0;
    spacer.size = [-1,3];

    // Camera Rig
    var cameraRigButton = DuScriptUI.button(
        tab,
        DuScriptUI.String.CAMERA_RIG,
        w16_camera_rig,
        DuScriptUI.String.CAMERA_RIG_TIP
    );
    cameraRigButton.onClick = function() {
        var ctrls = Duik.Camera.rig();
        if (ctrls.length == 0) alert( DuScriptUI.String.NO_TWO_NODE_CAMERA_ALERT );
    }

    // 2D Camera
    var twoDCameraButton = DuScriptUI.button(
        tab,
        DuScriptUI.String.TWO_D_CAMERA,
        w16_2d_camera,
        DuScriptUI.String.TWO_D_CAMERA_TIP
    );
    twoDCameraButton.onClick = Duik.Camera.twoDCamera;
}