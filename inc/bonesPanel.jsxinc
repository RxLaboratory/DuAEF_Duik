function buildBonesUI( tab )
{
    // UTILS
    function getSide()
    {
        var side = DuOCO.Side.NONE;
        if (sideSelector.index == 1) side = DuOCO.Side.LEFT;
        else if (sideSelector.index == 2) side = DuOCO.Side.RIGHT;
        return side;
    }

    function getLocation()
    {
        var location = DuOCO.Location.NONE;
        if (locationSelector.index == 1) location = DuOCO.Location.FRONT;
        else if (locationSelector.index == 2) location = DuOCO.Location.BACK;
        else if (locationSelector.index == 3) location = DuOCO.Location.MIDDLE;
        else if (locationSelector.index == 4) location = DuOCO.Location.ABOVE;
        else if (locationSelector.index == 5) location = DuOCO.Location.UNDER;
        else if (locationSelector.index == 6) location = DuOCO.Location.TAIL;
        return location;
    }

    // Prop buttons

    var propGroup = DuScriptUI.group(tab);

    var selectButton = DuScriptUI.button(
        propGroup,
        '',
        w12_select,
        "Select all bones"
    );
    selectButton.alignment = ['center','top'];

    var showButton = DuScriptUI.button(
        propGroup,
        '',
        w12_show,
        "Show/Hide bones"
    );
    showButton.alignment = ['center','top'];

    var duplicateButton = DuScriptUI.button(
        propGroup,
        '',
        w12_duplicate,
        "Duplicate selected bones"
    );
    duplicateButton.alignment = ['center','top'];

    var unlinkButton = DuScriptUI.button(
        propGroup,
        '',
        w12_unlink,
        "Toggle edit mode"
    );
    unlinkButton.alignment = ['center','top'];

    var bakeButton = DuScriptUI.button(
        propGroup,
        '',
        w12_bake,
        "Bake bones apperance"
    );
    bakeButton.alignment = ['center','top'];

    var editButton = DuScriptUI.button(
        propGroup,
        '',
        DuScriptUI.Icon.SETTINGS,
        "Edit selected bones"
    );
    editButton.alignment = ['center','top'];
    editButton.onClick = function()
    {
        mainGroup.visible = false;
        editGroup.visible = true;
    }


    // Main stack

    var stackGroup = DuScriptUI.group( tab, 'stacked');
    stackGroup.alignment = ['fill','fill'];

    // Main group
    var mainGroup = DuScriptUI.group( stackGroup, 'column');
    mainGroup.alignment = ['fill','fill'];

    // Character name
    var nameEdit = DuScriptUI.editText(
        mainGroup,
        '',
        '',
        '',
        "Character name",
        "Choose the name of the character"
    );

    var presetGroup = DuScriptUI.group(mainGroup);
    presetGroup.alignment = ['fill','fill'];

    var presetList = presetGroup.add('listbox');
    presetList.alignment = ['fill', 'fill'];

    var hominoidItem = presetList.add('item',"Hominoid");
    hominoidItem.image = w16_hominoid.binAsString;
    
    var plantigradeItem = presetList.add('item',"Plantigrade");
    plantigradeItem.image = w16_bunny.binAsString;

    var digitigradeItem = presetList.add('item',"Digitigrade");
    digitigradeItem.image = w16_cat.binAsString;
    
    var ungulateItem = presetList.add('item',"Ungulate");
    ungulateItem.image = w16_horse.binAsString;

    var birdItem = presetList.add('item',"Bird");
    birdItem.image = w16_bird.binAsString;
    
    var fishItem = presetList.add('item',"Fish");
    fishItem.image = w16_fish.binAsString;

    var snakeItem = presetList.add('item',"Snake");
    snakeItem.image = w16_snake.binAsString;

    // Lizard, arachnid, insect, biped dinosaur...

    // Preset buttons
    var presetButtonsGroup = DuScriptUI.group(presetGroup, 'column');
    presetButtonsGroup.alignment = ['right','fill'];

    var createArmatureButton = DuScriptUI.button(
        presetButtonsGroup,
        "",
        DuScriptUI.Icon.CHECK,
        "Create the selected armature."
        );

    DuScriptUI.separator( presetButtonsGroup );

    var addPresetButton = DuScriptUI.button(
        presetButtonsGroup,
        "",
        w12_add,
        "Add a new armature preset from selection."
        );

    var editPresetButton = DuScriptUI.button(
        presetButtonsGroup,
        "",
        w12_edit,
        "Rename the current armature preset."
        );

    var removePresetButton = DuScriptUI.button(
        presetButtonsGroup,
        "",
        w12_remove,
        "Remove the selected armature preset from the list."
    );
    
    // Limbs

    // Location selectors
    var locationGroup = DuScriptUI.group( mainGroup );
    locationGroup.alignment = ['fill','bottom'];
    var sideSelector = DuScriptUI.selector( locationGroup );
    sideSelector.addButton( "None" );
    sideSelector.addButton( "Left" );
    sideSelector.addButton( "Right" );
    sideSelector.setCurrentIndex(0);
    var locationSelector = DuScriptUI.selector( locationGroup );
    locationSelector.addButton( "None" );
    locationSelector.addButton( "Front" );
    locationSelector.addButton( "Back" );
    locationSelector.addButton( "Middle" );
    locationSelector.addButton( "Above" );
    locationSelector.addButton( "Under" );
    locationSelector.addButton( "Tail" );
    locationSelector.setCurrentIndex(0);
  
    var armButton = DuScriptUI.button(
        mainGroup,
        "Arm (or front leg)",
        w16_arm,
        "Add an armature for an arm",
        true
    )
    armButton.alignment = ['fill', 'bottom'];

    var legButton = DuScriptUI.button(
        mainGroup,
        "Leg",
        w16_leg,
        "Add an armature for a leg",
        true
    )
    legButton.alignment = ['fill', 'bottom'];

    var spineButton = DuScriptUI.button(
        mainGroup,
        "Spine",
        w16_spine,
        "Add an armature for a spine (including the hips and head)",
        true
    )
    spineButton.alignment = ['fill', 'bottom'];

    var tailButton = DuScriptUI.button(
        mainGroup,
        "Tail",
        w16_tail,
        "Add an armature for a tail.",
        true
    )
    tailButton.alignment = ['fill', 'bottom'];

    var customButton = DuScriptUI.button(
        mainGroup,
        "Custom",
        w16_custom,
        "Add a custom armature.",
        true
    )
    customButton.alignment = ['fill', 'bottom'];

    // Custom options
    var numCustomGroup = DuScriptUI.group( customButton.optionsPanel );
    DuScriptUI.staticText(
        numCustomGroup,
        "Number of bones:"
    )
    var numCustomEdit = DuScriptUI.editText(
        numCustomGroup,
        '',
        '',
        '',
        "002"
    )
    var customNameEdit = DuScriptUI.editText(
        customButton.optionsPanel,
        '',
        '',
        '',
        "Limb name"
    )

    customButton.onClick = function()
    {
        // Get options
        var num = parseInt( numCustomEdit.text );
        if (isNaN(num)) num = 2;
        if (num < 1) num = 1;
        
        var name = customNameEdit.text;
        var characterName = nameEdit.text;
        var side = getSide();
        var location = getLocation();

        Duik.Bone.customLimb(num, name, characterName, side, location);
    };

    // Auto-Rig

    DuScriptUI.separator(mainGroup);

    var autorigButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.AUTORIG,
        w16_autorig,
        DuScriptUI.String.BONE_PANEL_AUTORIG_TIP
    )

    // Edit Group
    var editGroup = DuScriptUI.group( stackGroup, 'column');
    editGroup.alignment = ['fill','top'];

    var sideEditGroup = DuScriptUI.group(editGroup, 'row');
    var sideEditSelector = DuScriptUI.selector( sideEditGroup );
    sideEditSelector.addButton( "None" );
    sideEditSelector.addButton( "Left" );
    sideEditSelector.addButton( "Right" );
    sideEditSelector.setCurrentIndex(0);
    var sideEditApplyButton = DuScriptUI.button(
        sideEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_SIDE_TIP
    );
    sideEditApplyButton.alignment = ['right', 'center'];

    var locationEditGroup = DuScriptUI.group(editGroup, 'row');
    var locationEditSelector = DuScriptUI.selector( locationEditGroup );
    locationEditSelector.addButton( "None" );
    locationEditSelector.addButton( "Front" );
    locationEditSelector.addButton( "Back" );
    locationEditSelector.addButton( "Middle" );
    locationEditSelector.addButton( "Above" );
    locationEditSelector.addButton( "Under" );
    locationEditSelector.addButton( "Tail" );
    locationEditSelector.setCurrentIndex(0);
    var locationEditApplyButton = DuScriptUI.button(
        locationEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_LOCATION_TIP
    );
    locationEditApplyButton.alignment = ['right', 'center'];

    var colorEditGroup = DuScriptUI.group(editGroup, 'row');
    var colorEditSelector = DuScriptUI.colorSelector( colorEditGroup, DuScriptUI.String.BONE_COLOR_TIP );
    var colorEditApplyButton = DuScriptUI.button(
        colorEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_COLOR_TIP
    );
    colorEditApplyButton.alignment = ['right', 'center'];

    var sizeEditGroup = DuScriptUI.group( editGroup, 'row' );
    var sizeEditLabel = DuScriptUI.staticText( sizeEditGroup, tr(DuScriptUI.String.SIZE) + ':',  undefined, false);
    sizeEditLabel.alignment = ['left', 'center'];
    var sizeEdit = DuScriptUI.editText(
        sizeEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.BONE_SIZE_TIP),
        false
    )
    sizeEdit.alignment = ['fill', 'fill'];
    var sizeEditApplyButton = DuScriptUI.button(
        sizeEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_SIZE_TIP
    );
    sizeEditApplyButton.alignment = ['right', 'center'];

    var opacityEditGroup = DuScriptUI.group( editGroup, 'row' );
    var opacityEditLabel = DuScriptUI.staticText( opacityEditGroup, tr(DuScriptUI.String.OPACITY) + ':',  undefined, false);
    opacityEditLabel.alignment = ['left', 'center'];
    var opacityEdit = DuScriptUI.editText(
        opacityEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.BONE_OPACITY_TIP),
        false
    )
    opacityEdit.alignment = ['fill', 'fill'];
    var opacityEditApplyButton = DuScriptUI.button(
        opacityEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_OPACITY_TIP
    );
    opacityEditApplyButton.alignment = ['right', 'center'];

    var characterEditGroup = DuScriptUI.group( editGroup, 'row' );
    var characterEditLabel = DuScriptUI.staticText( characterEditGroup, tr(DuScriptUI.String.CHARACTER) + ':',  undefined, false);
    characterEditLabel.alignment = ['left', 'center'];
    var characterEdit = DuScriptUI.editText(
        characterEditGroup,
        '',
        '',
        '',
        "Character Name",
        tr(DuScriptUI.String.BONE_CHARACTER_TIP),
        false
    )
    characterEdit.alignment = ['fill', 'fill'];
    var characterEditApplyButton = DuScriptUI.button(
        characterEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_CHARACTER_TIP
    );
    characterEditApplyButton.alignment = ['right', 'center'];


    // Valid button
    var validGroup = DuScriptUI.group(editGroup, 'row');
    var cancelButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.CANCEL,
        DuScriptUI.Icon.BACK,
        DuScriptUI.String.CANCEL
    )
    cancelButton.onClick = function()
    {
        mainGroup.visible = true;
        editGroup.visible = false;
    }

    var applyEditButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.APPLY,
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.APPLY
    )

    editGroup.visible = false;
}