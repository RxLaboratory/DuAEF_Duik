function buildBonesUI( )
{
    // UTILS
    function updateEditPanel ()
    {
        setSideSelector( sideEditSelector, Duik.Layer.side() );

        setLocationSelector( locationEditSelector, Duik.Layer.location());

        colorEditSelector.setColor( Duik.Bone.color( ) );

        sizeEdit.setText( Duik.Bone.size() );

        opacityEdit.setText( Duik.Bone.opacity() );

        characterEdit.setText( Duik.Layer.characterName() );

        limbEdit.setText( Duik.Layer.limbName() );
    }

    function setSide()
    {
        var side = getSide(sideEditSelector);
        Duik.Bone.setSide(side);
    }

    function setLocation()
    {
        var location = getLocation(locationEditSelector);
        Duik.Bone.setLocation(location);
    }

    function setColor()
    {
        var color = colorEditSelector.color;
        Duik.Bone.setColor(color);
    }

    function setSize()
    {
        var size = parseInt( sizeEdit.text );
        if (isNaN(size)) return;
        Duik.Bone.setSize(size);
    }

    function setOpacity()
    {
        var opacity = parseInt( opacityEdit.text );
        if (isNaN(opacity)) return;
        Duik.Bone.setOpacity(opacity);
    }

    function setCharacterName()
    {
        Duik.Bone.setCharacterName( characterEdit.text );
    }

    function setLimbName()
    {
        Duik.Bone.setLimbName( limbEdit.text );
    }

    // Prop buttons

    //DuScriptUI.separator(this);

    var propGroup = DuScriptUI.group(this);
    DuScriptUI.setBackgroundColor(propGroup , DuColor.Color.DARK_GREY );

    var selectButton = DuScriptUI.button(
        propGroup,
        '',
        w12_select,
        "Select all bones"
    );
    selectButton.alignment = ['center','top'];
    selectButton.onClick = Duik.Bone.select;

    var showButton = DuScriptUI.button(
        propGroup,
        '',
        w12_show,
        "Show/Hide bones"
    );
    showButton.alignment = ['center','top'];
    showButton.onClick = Duik.Bone.toggleVisibility;

    var duplicateButton = DuScriptUI.button(
        propGroup,
        '',
        w12_duplicate,
        "Duplicate selected bones"
    );
    duplicateButton.alignment = ['center','top'];
    duplicateButton.onClick = Duik.Bone.duplicate;

    var unlinkButton = DuScriptUI.button(
        propGroup,
        '',
        w12_unlink,
        "Toggle edit mode"
    );
    unlinkButton.alignment = ['center','top'];
    unlinkButton.onClick = Duik.Bone.unlink;

    var bakeButton = DuScriptUI.button(
        propGroup,
        '',
        w12_bake,
        "Bake bones apperance"
    );
    bakeButton.alignment = ['center','top'];

    var editButton = DuScriptUI.button(
        propGroup,
        '',
        DuScriptUI.Icon.SETTINGS,
        "Edit selected bones"
    );
    editButton.alignment = ['center','top'];
    editButton.onClick = function()
    {
        updateEditPanel();
        mainGroup.visible = false;
        editGroup.visible = true;
    }

    //DuScriptUI.separator(this);

    // Main stack

    var stackGroup = DuScriptUI.group( this, 'stacked');
    stackGroup.alignment = ['fill','fill'];

    // Main group
    var mainGroup = DuScriptUI.group( stackGroup, 'column');
    mainGroup.alignment = ['fill','fill'];

    // Character name
    var nameEdit = DuScriptUI.editText(
        mainGroup,
        '',
        '',
        '',
        DuScriptUI.String.CHARACTER_NAME,
        DuScriptUI.String.BONE_CHARACTER_TIP
    );
    
    // Limbs
  
    var armButton = DuScriptUI.button(
        mainGroup,
        "Arm (or front leg)",
        w16_arm,
        "Add an armature for an arm",
        true
    );

    var armOptionsTabPanel = DuScriptUI.tabPanel( armButton.optionsPanel, 'column' );
    var armPlantigradeTab = armOptionsTabPanel.addTab(
        "Plantigrade",
        w16_controller,
        DuScriptUI.String.PLANTIGRADE_TIP
    );
    var armDigitigradeTab = armOptionsTabPanel.addTab(
        "Digitigrade",
        w16_digitigrade,
        DuScriptUI.String.DIGITIGRADE_TIP
    );
    var armUngulateTab = armOptionsTabPanel.addTab(
        "Ungulate",
        w16_ungulate,
        DuScriptUI.String.UNGULATE_TIP
    );
    var armArthropodTab = armOptionsTabPanel.addTab(
        "Arthropod",
        w16_arthropod,
        DuScriptUI.String.ARTHROPOD_TIP
    );

    var armLocationSelector = createLocationSelector( armButton.optionsPanel );
    armLocationSelector.setCurrentIndex(1);
    var armSideSelector = createSideSelector( armButton.optionsPanel );
    armSideSelector.setCurrentIndex(1);

    var armShoulderButton = DuScriptUI.checkBox(
        armButton.optionsPanel, 
        DuScriptUI.String.SHOULDER );
    armShoulderButton.textColor = DuColor.Color.RAINBOX_RED;
    armShoulderButton.dim();

    var armArmButton = DuScriptUI.checkBox(
        armButton.optionsPanel, 
        DuScriptUI.String.ARM );
    armArmButton.textColor = DuColor.Color.ORANGE;
    armArmButton.setChecked(true);
    armArmButton.dim();

    var armForearmButton = DuScriptUI.checkBox(
        armButton.optionsPanel, 
        DuScriptUI.String.FOREARM );
    armForearmButton.textColor = DuColor.Color.YELLOW;
    armForearmButton.setChecked(true);
    armForearmButton.dim();

    var armHandButton = DuScriptUI.checkBox(
        armButton.optionsPanel, 
        DuScriptUI.String.HAND );
    armHandButton.textColor = DuColor.Color.LIGHT_BLUE;
    armHandButton.setChecked(true);
    armHandButton.dim();

    var armClawsButton = DuScriptUI.checkBox(
        armButton.optionsPanel, 
        DuScriptUI.String.CLAWS );
    armClawsButton.textColor = DuColor.Color.LIGHT_PURPLE;
    armClawsButton.dim();

    armPlantigradeTab.build = function( )
    {
        var illustrationGroup = this.add( 'group' );
        illustrationGroup.orientation = 'stacked';
        illustrationGroup.margins = 0;
        illustrationGroup.spacing = 0;
        var illustration1 = illustrationGroup.add('image', undefined, w128_human_arm.binAsString );
        illustration1.alignment = ['center', 'top'];
        var illustration2 = illustrationGroup.add('image', undefined, w128_bear_arm.binAsString );
        illustration2.alignment = ['center', 'top'];
        illustration2.visible = false;
        armClawsButton.onClick = function () {
            illustration2.visible = armClawsButton.checked;
            illustration1.visible = !armClawsButton.checked;
        }
    };

    armDigitigradeTab.build = function( armTab )
    {
        var illustration = this.add('image', undefined, w128_digitigrade_arm.binAsString );
        illustration.alignment = ['center', 'top'];  
    };

    armUngulateTab.build = function( armTab )
    {
        var illustration = this.add('image', undefined, w128_ungulate_arm.binAsString );
        illustration.alignment = ['center', 'top'];  
    };

    armArthropodTab.build = function( armTab )
    {
        var illustration = this.add('image', undefined, w128_arthropod_arm.binAsString );
        illustration.alignment = ['center', 'top'];
    };

    armOptionsTabPanel.setCurrentIndex(0);
    armOptionsTabPanel.onChange = function()
    {
        if (armOptionsTabPanel.index == 2)
        {
            armClawsButton.defaultText = DuScriptUI.String.HOOF;
            armClawsButton.checkedText = DuScriptUI.String.HOOF;
            armClawsButton.label.text = DuScriptUI.String.HOOF;
        }
        else 
        {
            armClawsButton.defaultText = DuScriptUI.String.CLAWS;
            armClawsButton.checkedText = DuScriptUI.String.CLAWS;
            armClawsButton.label.text = DuScriptUI.String.CLAWS;
        }
    }

    armButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;
        var type = DuOCO.LimbType.PLANTIGRADE;
        if (armOptionsTabPanel.index == 1) type = DuOCO.LimbType.DIGITIGRADE;
        if (armOptionsTabPanel.index == 2) type = DuOCO.LimbType.UNGULATE;
        if (armOptionsTabPanel.index == 3) type = DuOCO.LimbType.ARTHROPOD;
        var side = getSide(armSideSelector);
        var location = getLocation(armLocationSelector);

        Duik.Bone.arm(
            characterName,
            type,
            side,
            armShoulderButton.checked,
            armArmButton.checked,
            armForearmButton.checked,
            armHandButton.checked,
            armClawsButton.checked,
            location
        );

        // Set the side to the other for the next limb
        if (side == DuOCO.Side.LEFT) armSideSelector.setCurrentIndex( 2 );
        else if (side == DuOCO.Side.RIGHT) armSideSelector.setCurrentIndex( 1 );
    };

    var legButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.LEG,
        w16_leg,
        "Add an armature for a leg",
        true
    );

    var legOptionsTabPanel = DuScriptUI.tabPanel( legButton.optionsPanel, 'column' );
    var legPlantigradeTab = legOptionsTabPanel.addTab(
        "Plantigrade",
        w16_foot,
        DuScriptUI.String.PLANTIGRADE_TIP
    );
    var legDigitigradeTab = legOptionsTabPanel.addTab(
        "Digitigrade",
        w16_digitigrade,
        DuScriptUI.String.DIGITIGRADE_TIP
    );
    var legUngulateTab = legOptionsTabPanel.addTab(
        "Ungulate",
        w16_ungulate,
        DuScriptUI.String.UNGULATE_TIP
    );

    var legLocationSelector = createLocationSelector( legButton.optionsPanel );
    legLocationSelector.setCurrentIndex(2);
    var legSideSelector = createSideSelector( legButton.optionsPanel );
    legSideSelector.setCurrentIndex(1);

    var legThighButton = DuScriptUI.checkBox(
        legButton.optionsPanel, 
        DuScriptUI.String.THIGH );
    legThighButton.textColor = DuColor.Color.ORANGE;
    legThighButton.setChecked(true);
    legThighButton.dim();

    var legCalfButton = DuScriptUI.checkBox(
        legButton.optionsPanel, 
        DuScriptUI.String.CALF );
    legCalfButton.textColor = DuColor.Color.YELLOW;
    legCalfButton.setChecked(true);
    legCalfButton.dim();

    var legFootButton = DuScriptUI.checkBox(
        legButton.optionsPanel, 
        DuScriptUI.String.FOOT );
    legFootButton.textColor = DuColor.Color.LIGHT_BLUE;
    legFootButton.setChecked(true);
    legFootButton.dim();

    var legClawsButton = DuScriptUI.checkBox(
        legButton.optionsPanel, 
        DuScriptUI.String.CLAWS );
    legClawsButton.textColor = DuColor.Color.LIGHT_PURPLE;
    legClawsButton.dim();

    legPlantigradeTab.build = function( )
    {
        var illustration = this.add('image', undefined, w128_human_leg.binAsString );
        illustration.alignment = ['center', 'top'];
    };

    legDigitigradeTab.build = function( )
    {
        var illustration = this.add('image', undefined, w128_digitigrade_leg.binAsString );
        illustration.alignment = ['center', 'top'];  
    };

    legUngulateTab.build = function( )
    {
        var illustration = this.add('image', undefined, w128_ungulate_leg.binAsString );
        illustration.alignment = ['center', 'top'];  
    };

    legOptionsTabPanel.onChange = function()
    {
        if (legOptionsTabPanel.index == 0)
        {
            legClawsButton.defaultText = DuScriptUI.String.TOES;
            legClawsButton.checkedText = DuScriptUI.String.TOES;
            legClawsButton.label.text = DuScriptUI.String.TOES;
        }
        else if (legOptionsTabPanel.index == 2)
        {
            legClawsButton.defaultText = DuScriptUI.String.HOOF;
            legClawsButton.checkedText = DuScriptUI.String.HOOF;
            legClawsButton.label.text = DuScriptUI.String.HOOF;
        }
        else 
        {
            legClawsButton.defaultText = DuScriptUI.String.CLAWS;
            legClawsButton.checkedText = DuScriptUI.String.CLAWS;
            legClawsButton.label.text = DuScriptUI.String.CLAWS;
        }
    }
    legOptionsTabPanel.setCurrentIndex(0);

    legButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;
        var type = DuOCO.LimbType.PLANTIGRADE;
        if (legOptionsTabPanel.index == 1) type = DuOCO.LimbType.DIGITIGRADE;
        if (legOptionsTabPanel.index == 2) type = DuOCO.LimbType.UNGULATE;
        var side = getSide(legSideSelector);
        var location = getLocation(legLocationSelector);

        Duik.Bone.leg(
            characterName,
            type,
            side,
            legThighButton.checked,
            legCalfButton.checked,
            legFootButton.checked,
            legClawsButton.checked,
            location
        );

        // Set the side to the other for the next limb
        if (side == DuOCO.Side.LEFT) legSideSelector.setCurrentIndex( 2 );
        else if (side == DuOCO.Side.RIGHT) legSideSelector.setCurrentIndex( 1 );
    };

    var spineButton = DuScriptUI.button(
        mainGroup,
        "Spine",
        w16_spine,
        "Add an armature for a spine (including the hips and head)",
        true
    );

    var spineIllu = spineButton.optionsPanel.add('image', undefined, w128_human_spine.binAsString);
    spineIllu.alignment = ['center', 'top'];

    var spineHeadButton = DuScriptUI.checkBox(
        spineButton.optionsPanel, 
        DuScriptUI.String.HEAD );
    spineHeadButton.textColor = DuColor.Color.LIGHT_BLUE;
    spineHeadButton.setChecked(true);
    spineHeadButton.dim();

    var spineNeckEdit = DuScriptUI.editText(
        spineButton.optionsPanel,
        '',
        DuScriptUI.String.NECK + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "001",
        '',
        false
    );
    spineNeckEdit.textColor = DuColor.Color.YELLOW;
    spineNeckEdit.changed();

    var spineNumEdit = DuScriptUI.editText(
        spineButton.optionsPanel,
        '',
        DuScriptUI.String.SPINE + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "002",
        '',
        false
    );
    spineNumEdit.textColor = DuColor.Color.ORANGE;
    spineNumEdit.changed();

    var spineHipsButton = DuScriptUI.checkBox(
        spineButton.optionsPanel, 
        DuScriptUI.String.HIPS );
    spineHipsButton.textColor = DuColor.Color.RAINBOX_RED;
    spineHipsButton.setChecked(true);
    spineHipsButton.dim();

    spineButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var neck = parseInt(spineNeckEdit.text);
        if (isNaN(neck)) neck = 1;
        var spine = parseInt(spineNumEdit.text);
        if (isNaN(spine)) spine = 2;

        Duik.Bone.spine(
            characterName,
            spineHeadButton.checked,
            neck,
            spine,
            spineHipsButton.checked
        );
    };

    var tailButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.TAIL,
        w16_tail,
        "Add an armature for a tail.",
        true
    );

    var tailIllu = tailButton.optionsPanel.add('image', undefined, w128_tail.binAsString);
    tailIllu.alignment = ['center', 'top'];

    var tailEdit = DuScriptUI.editText(
        tailButton.optionsPanel,
        '',
        DuScriptUI.String.TAIL + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "003",
        '',
        false
    );

    tailButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var num = parseInt(tailEdit.text);
        if (isNaN(num)) num = 3;

        Duik.Bone.tail(
            characterName,
            num
        );
    };

    var wingButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.WING,
        w16_wing,
        "Add an armature for a wing.",
        true
    );

    var wingIllu = wingButton.optionsPanel.add('image', undefined, w128_wing.binAsString);
    wingIllu.alignment = ['center', 'top'];

    var wingSideSelector = createSideSelector( wingButton.optionsPanel );
    wingSideSelector.setCurrentIndex(1);

    var wingArmButton = DuScriptUI.checkBox(
        wingButton.optionsPanel, 
        DuScriptUI.String.ARM );
    wingArmButton.textColor = DuColor.Color.ORANGE;
    wingArmButton.setChecked(true);
    wingArmButton.dim();

    var wingForearmButton = DuScriptUI.checkBox(
        wingButton.optionsPanel, 
        DuScriptUI.String.FOREARM );
    wingForearmButton.textColor = DuColor.Color.YELLOW;
    wingForearmButton.setChecked(true);
    wingForearmButton.dim();

    var wingHandButton = DuScriptUI.checkBox(
        wingButton.optionsPanel, 
        DuScriptUI.String.HAND );
    wingHandButton.textColor = DuColor.Color.LIGHT_BLUE;
    wingHandButton.setChecked(true);
    wingHandButton.dim();

    var wingFeathersEdit = DuScriptUI.editText(
        wingButton.optionsPanel,
        '',
        DuScriptUI.String.FEATHERS + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "005",
        '',
        false
    );
    wingFeathersEdit.textColor = DuColor.Color.LIGHT_PURPLE;
    wingFeathersEdit.changed();

    wingButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var side = getSide( wingSideSelector );

        var num = parseInt(wingFeathersEdit.text);
        if (isNaN(num)) num = 5;

        Duik.Bone.wing(
            characterName,
            side,
            wingArmButton.checked,
            wingForearmButton.checked,
            wingHandButton.checked,
            num
        );

        // Set the side to the other for the next limb
        if (side == DuOCO.Side.LEFT) wingSideSelector.setCurrentIndex( 2 );
        else if (side == DuOCO.Side.RIGHT) wingSideSelector.setCurrentIndex( 1 );
    };

    var snakeSpineButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.SNAKE_SPINE,
        w16_snake_spine,
        "Add an armature for a snake / worm with a head.",
        true
    );

    var snakeSpineIllu = snakeSpineButton.optionsPanel.add('image', undefined, w128_snake_spine.binAsString);
    snakeSpineIllu.alignment = ['center', 'top'];

    var snakeSpineHeadButton = DuScriptUI.checkBox(
        snakeSpineButton.optionsPanel, 
        DuScriptUI.String.HEAD );
    snakeSpineHeadButton.textColor = DuColor.Color.LIGHT_BLUE;
    snakeSpineHeadButton.setChecked(true);
    snakeSpineHeadButton.dim();

    var snakeSpineEdit = DuScriptUI.editText(
        snakeSpineButton.optionsPanel,
        '',
        DuScriptUI.String.SPINE + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "005",
        '',
        false
    );

    snakeSpineButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var num = parseInt(snakeSpineEdit.text);
        if (isNaN(num)) num = 5;

        Duik.Bone.snakeSpine(
            characterName,
            snakeSpineHeadButton.checked,
            num
        );
    };

    var finButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.FIN,
        w16_fin,
        "Add an armature for a fin.",
        true
    );

    var finIllu = finButton.optionsPanel.add('image', undefined, w128_fin.binAsString);
    finIllu.alignment = ['center', 'top'];

    var finEdit = DuScriptUI.editText(
        finButton.optionsPanel,
        '',
        DuScriptUI.String.FISHBONES + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "005",
        '',
        false
    );

    finButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var num = parseInt(finEdit.text);
        if (isNaN(num)) num = 5;

        Duik.Bone.fin(
            characterName,
            DuOCO.Side.NONE,
            num
        );
    };

    var hairButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.HAIR,
        w16_hair_strand,
        "Add an armature for a hair strand.",
        true
    );

    var hairEdit = DuScriptUI.editText(
        hairButton.optionsPanel,
        '',
        DuScriptUI.String.HAIR + ': ',
        ' ' + DuScriptUI.String.LAYERS.toLowerCase(),
        "003",
        '',
        false
    );

    hairButton.onClick = function() 
    {
        // Get options
        var characterName = nameEdit.text;

        var num = parseInt(hairEdit.text);
        if (isNaN(num)) num = 3;

        Duik.Bone.hair(
            characterName,
            num
        );
    };

    var customButton = DuScriptUI.button(
        mainGroup,
        "Custom",
        w16_custom,
        DuScriptUI.String.CREATE_CUSTOM_BONES_TIP,
        true
    );

    // Custom options
    var customLocationSelector = createLocationSelector( customButton.optionsPanel );
    var customSideSelector = createSideSelector( customButton.optionsPanel );
    var numCustomGroup = DuScriptUI.group( customButton.optionsPanel );
    DuScriptUI.staticText(
        numCustomGroup,
        "Number of bones:"
    );
    var numCustomEdit = DuScriptUI.editText(
        numCustomGroup,
        '',
        '',
        '',
        "002"
    );
    var customNameEdit = DuScriptUI.editText(
        customButton.optionsPanel,
        '',
        '',
        '',
        "Limb name"
    );

    customButton.onClick = function()
    {
        // Get options
        var num = parseInt( numCustomEdit.text );
        if (isNaN(num)) num = 2;
        if (num < 1) num = 1;
        
        var name = customNameEdit.text;
        var characterName = nameEdit.text;
        var side = getSide(customSideSelector);
        var location = getLocation(customLocationSelector);

        Duik.Bone.customLimb(num, name, characterName, side, location);
    };

    // Auto-Rig

    DuScriptUI.separator(mainGroup);

    var autorigButton = DuScriptUI.button(
        mainGroup,
        DuScriptUI.String.AUTORIG,
        w16_autorig,
        DuScriptUI.String.BONE_PANEL_AUTORIG_TIP
    );

    // Edit Group
    var editGroup = DuScriptUI.group( stackGroup, 'column');
    editGroup.alignment = ['fill','top'];

    var pickButton = DuScriptUI.button(
        editGroup,
        DuScriptUI.String.PICK_LAYER,
        DuScriptUI.Icon.EYE_DROPPER
    );
    pickButton.onClick = updateEditPanel;

    var sideEditGroup = DuScriptUI.group(editGroup, 'row');
    var sideEditSelector = createSideSelector( sideEditGroup );
    var sideEditApplyButton = DuScriptUI.button(
        sideEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_SIDE_TIP
    );
    sideEditApplyButton.alignment = ['right', 'center'];
    sideEditApplyButton.onClick = setSide;

    var locationEditGroup = DuScriptUI.group(editGroup, 'row');
    var locationEditSelector = createLocationSelector( locationEditGroup );
    var locationEditApplyButton = DuScriptUI.button(
        locationEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_LOCATION_TIP
    );
    locationEditApplyButton.alignment = ['right', 'center'];
    locationEditApplyButton.onClick = setLocation;

    var colorEditGroup = DuScriptUI.group(editGroup, 'row');
    var colorEditSelector = DuScriptUI.colorSelector( colorEditGroup, DuScriptUI.String.BONE_COLOR_TIP );
    var colorEditApplyButton = DuScriptUI.button(
        colorEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_COLOR_TIP
    );
    colorEditApplyButton.alignment = ['right', 'center'];
    colorEditApplyButton.onClick = setColor;

    var sizeEditGroup = DuScriptUI.group( editGroup, 'row' );
    var sizeEditLabel = DuScriptUI.staticText( sizeEditGroup, tr(DuScriptUI.String.SIZE) + ':',  undefined, false);
    sizeEditLabel.alignment = ['left', 'center'];
    var sizeEdit = DuScriptUI.editText(
        sizeEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.BONE_SIZE_TIP),
        false
    );
    sizeEdit.alignment = ['fill', 'fill'];
    var sizeEditApplyButton = DuScriptUI.button(
        sizeEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_SIZE_TIP
    );
    sizeEditApplyButton.alignment = ['right', 'center'];
    sizeEditApplyButton.onClick = setSize;

    var opacityEditGroup = DuScriptUI.group( editGroup, 'row' );
    var opacityEditLabel = DuScriptUI.staticText( opacityEditGroup, tr(DuScriptUI.String.OPACITY) + ':',  undefined, false);
    opacityEditLabel.alignment = ['left', 'center'];
    var opacityEdit = DuScriptUI.editText(
        opacityEditGroup,
        "100",
        '',
        " %",
        "100",
        tr(DuScriptUI.String.BONE_OPACITY_TIP),
        false
    )
    opacityEdit.alignment = ['fill', 'fill'];
    var opacityEditApplyButton = DuScriptUI.button(
        opacityEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_OPACITY_TIP
    );
    opacityEditApplyButton.alignment = ['right', 'center'];
    opacityEditApplyButton.onClick = setOpacity;

    var characterEditGroup = DuScriptUI.group( editGroup, 'row' );
    var characterEditLabel = DuScriptUI.staticText( characterEditGroup, tr(DuScriptUI.String.CHARACTER) + ':',  undefined, false);
    characterEditLabel.alignment = ['left', 'center'];
    var characterEdit = DuScriptUI.editText(
        characterEditGroup,
        '',
        '',
        '',
        DuScriptUI.String.CHARACTER_NAME,
        DuScriptUI.String.BONE_CHARACTER_TIP,
        false
    )
    characterEdit.alignment = ['fill', 'fill'];
    var characterEditApplyButton = DuScriptUI.button(
        characterEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_CHARACTER_TIP
    );
    characterEditApplyButton.alignment = ['right', 'center'];
    characterEditApplyButton.onClick = setCharacterName;

    var limbEditGroup = DuScriptUI.group( editGroup, 'row' );
    var limbEditLabel = DuScriptUI.staticText( limbEditGroup, tr(DuScriptUI.String.LIMB) + ':',  undefined, false);
    limbEditLabel.alignment = ['left', 'center'];
    var limbEdit = DuScriptUI.editText(
        limbEditGroup,
        '',
        '',
        '',
        DuScriptUI.String.LIMB_NAME,
        tr(DuScriptUI.String.BONE_LIMB_TIP),
        false
    )
    limbEdit.alignment = ['fill', 'fill'];
    var limbEditApplyButton = DuScriptUI.button(
        limbEditGroup,
        "",
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.BONE_LIMB_TIP
    );
    limbEditApplyButton.alignment = ['right', 'center'];
    limbEditApplyButton.onClick = setLimbName;

    // Valid button
    var validGroup = DuScriptUI.group(editGroup, 'row');
    var cancelButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.CANCEL,
        DuScriptUI.Icon.BACK,
        DuScriptUI.String.CANCEL
    )
    cancelButton.onClick = function()
    {
        mainGroup.visible = true;
        editGroup.visible = false;
    }

    var applyEditButton = DuScriptUI.button(
        validGroup,
        DuScriptUI.String.APPLY,
        DuScriptUI.Icon.CHECK,
        DuScriptUI.String.APPLY
    )
    applyEditButton.onClick = function ()
    {
        setSide();
        setLocation();
        setColor();
        setSize();
        setOpacity();
        setCharacterName();
        setLimbName();
    }

    editGroup.visible = false;
}