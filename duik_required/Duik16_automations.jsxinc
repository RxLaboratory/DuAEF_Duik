function ui_buildAutomations(ui_automationsMainGroup)
{
	debugLog.startTimer("Loading automations.");

	function setCurrentAutomationPanel(panel)
	{
		if (panel == undefined) panel = 0;

		ui_automationsBaseGroup.visible = panel == 0;
		ui_randomOptionsGroup.visible = panel == 2;
		ui_walkCycleOptionsGroup.visible = panel == 3;
		ui_mapEffectorOptionsGroup.visible = panel == 4;
	}

	function initAutomationsUI()
	{
		setCurrentAutomationPanel(0);
	}

	function randomCheckSelection()
	{
		if (!ui_randomLayerTimesButton.checked && !ui_randomLayerIndicesButton.checked && !ui_randomLayerInButton.checked && !ui_randomLayerOutButton.checked)
		{
			ui_randomLayerTimesButton.setChecked(true);
			ui_randomKeyValuesButton.setChecked(true);
		}
		if (!ui_randomKeyTimesButton.checked && !ui_randomKeyValuesButton.checked)
		{
			ui_randomKeyValuesButton.setChecked(true);
		}
	}

	//=========== EVENTS ============
	function ui_listButton_clicked()
	{
		Duik.constraints.list();
	}

	function ui_wiggleButton_clicked()
	{
		Duik.automation.wiggle(
			ui_wiggleSeparateSelector.index == 1,
			ui_wiggleIndividualSelector.index == 0
		);
	}

	function ui_swingButton_clicked()
	{
		Duik.automation.swing();
	}

	function ui_wheelButton_clicked()
	{
		Duik.automation.wheel();
	}

	function ui_randomSelector_changed()
	{
		var index = ui_randomSelector.index;
		ui_randomLayersGroup.visible = index == 1;
		ui_randomKeysGroup.visible = index == 2;
	}

	function ui_randomLayerTimesButton_clicked()
	{
		randomCheckSelection();
	}

	function ui_randomKeyTimesButton_clicked()
	{
		randomCheckSelection();
	}

	function ui_randomValidButton_clicked()
	{
		var fromCurrentVal = ui_randomOffsetSelector.index == 0;
		var xMin = parseFloat(ui_randomXMinSlider.text);
		var xMax = parseFloat(ui_randomXMaxSlider.text);
		var yMin = parseFloat(ui_randomYMinSlider.text);
		var yMax = parseFloat(ui_randomYMaxSlider.text);
		var zMin = parseFloat(ui_randomZMinSlider.text);
		var zMax = parseFloat(ui_randomZMaxSlider.text);

		if (ui_randomSelector.index == 0)
		{
			var props = DuAEF.DuAE.Comp.getSelectedProps();
			if (props.length == 0) return;

			app.beginUndoGroup('Duik | ' + "Randomize selected properties");

			DuAEF.Duik.Automation.Randomize.properties(props,fromCurrentVal,xMin,xMax,yMin,yMax,zMin,zMax,ui_randomSeparateSelector.index == 0);

			app.endUndoGroup();
		}
		if (ui_randomSelector.index == 1)
		{
			if (ui_randomLayerTimesButton.checked)
			{
				var comp = DuAEF.DuAE.Project.getActiveComp();
				if (!comp) return;
				var layers = comp.selectedLayers;

				app.beginUndoGroup('Duik | ' + "Randomize layer times");

				DuAEF.Duik.Automation.Randomize.startTimes(layers,fromCurrentVal,xMin,xMax);

				app.endUndoGroup();
			}
			if (ui_randomLayerIndicesButton.checked)
			{
				var comp = DuAEF.DuAE.Project.getActiveComp();
				if (!comp) return;
				var layers = comp.selectedLayers;

				app.beginUndoGroup('Duik | ' + "Randomize layer indices");

				DuAEF.Duik.Automation.Randomize.indices(layers,fromCurrentVal,xMin,xMax);

				app.endUndoGroup();
			}
			if (ui_randomLayerInButton.checked)
			{
				var comp = DuAEF.DuAE.Project.getActiveComp();
				if (!comp) return;
				var layers = comp.selectedLayers;

				app.beginUndoGroup('Duik | ' + "Randomize layer in points");

				DuAEF.Duik.Automation.Randomize.inPoints(layers,fromCurrentVal,xMin,xMax);

				app.endUndoGroup();
			}
			if (ui_randomLayerOutButton.checked)
			{
				var comp = DuAEF.DuAE.Project.getActiveComp();
				if (!comp) return;
				var layers = comp.selectedLayers;

				app.beginUndoGroup('Duik | ' + "Randomize layer out points");

				DuAEF.Duik.Automation.Randomize.outPoints(layers,fromCurrentVal,xMin,xMax);

				app.endUndoGroup();
			}
		}
		else
		{
			if (ui_randomKeyTimesButton.checked)
			{
				var props = DuAEF.DuAE.Comp.getSelectedProps();
				if (props.length == 0) return;

				app.beginUndoGroup('Duik | ' + "Randomize selected key times");

				DuAEF.Duik.Automation.Randomize.selectedKeyTimes(props,fromCurrentVal,xMin,xMax);

				app.endUndoGroup();
			}
			if (ui_randomKeyValuesButton.checked)
			{
				var props = DuAEF.DuAE.Comp.getSelectedProps();
				if (props.length == 0) return;

				app.beginUndoGroup('Duik | ' + "Randomize selected key values");

				DuAEF.Duik.Automation.Randomize.selectedKeys(props,fromCurrentVal,xMin,xMax,yMin,yMax,zMin,zMax,ui_randomSeparateSelector.index == 0);

				app.endUndoGroup();
			}
		}
	}

	function ui_effectorButton_clicked()
	{
		Duik.automation.effector();
	}

	function ui_springButton_clicked()
	{
		Duik.automation.spring();
	}

	function ui_blinkButton_clicked()
	{
		Duik.automation.blink();
	}

	function ui_moveAwayButton_clicked()
	{
		Duik.automation.moveAway();
	}

	function ui_paintRigButton_clicked()
	{
		Duik.automation.paintRig();
	}

	function ui_walkOptionsButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		app.beginUndoGroup('Duik | ' + "Load layers for walk cycle.");

		var ctrls = comp.selectedLayers;
		var selectedOnly = true;
		if(ctrls.length == 0)
		{
			ctrls = comp.layers;
			selectedOnly = false;
		}

		ui_walkHeadSelector.setCurrentIndex(0);
		ui_walkNeckSelector.setCurrentIndex(0);
		ui_walkBodySelector.setCurrentIndex(0);
		ui_walkHipsSelector.setCurrentIndex(0);
		ui_walkRHandSelector.setCurrentIndex(0);
		ui_walkLHandSelector.setCurrentIndex(0);
		ui_walkRFootSelector.setCurrentIndex(0);
		ui_walkLFootSelector.setCurrentIndex(0);
		ui_walkHeadSelector.selectedOnly = selectedOnly;
		ui_walkNeckSelector.selectedOnly = selectedOnly;
		ui_walkBodySelector.selectedOnly = selectedOnly;
		ui_walkHipsSelector.selectedOnly = selectedOnly;
		ui_walkRHandSelector.selectedOnly = selectedOnly;
		ui_walkLHandSelector.selectedOnly = selectedOnly;
		ui_walkRFootSelector.selectedOnly = selectedOnly;
		ui_walkLFootSelector.selectedOnly = selectedOnly;
		ui_walkHeadSelector.refresh();
		ui_walkNeckSelector.refresh();
		ui_walkBodySelector.refresh();
		ui_walkHipsSelector.refresh();
		ui_walkRHandSelector.refresh();
		ui_walkLHandSelector.refresh();
		ui_walkRFootSelector.refresh();
		ui_walkLFootSelector.refresh();

		//side
		DuAEF.Duik.Autorig.detectCharacterSide(ctrls);

		//populate selectors
		var it = new Iterator(ctrls);
		it.do(function(layer)
		{
			var params = DuAEF.Duik.getDuikMarkerParameters(layer);
			if(!params)return;
			var type = params[DuAEF.Duik.MarkerParameters.CONTROLLER_TYPE];
			if (type == DuAEF.Duik.Controller.Types.HEAD) ui_walkHeadSelector.setCurrentIndex(layer.index);
			else if (type == DuAEF.Duik.Controller.Types.SHOULDERS) ui_walkNeckSelector.setCurrentIndex(layer.index);
			else if (type == DuAEF.Duik.Controller.Types.BODY) ui_walkBodySelector.setCurrentIndex(layer.index);
			else if (type == DuAEF.Duik.Controller.Types.HIPS) ui_walkHipsSelector.setCurrentIndex(layer.index);
			else if (type == DuAEF.Duik.Controller.Types.HAND)
			{
				if (DuAEF.Duik.Autorig.isRight(layer)) ui_walkRHandSelector.setCurrentIndex(layer.index);
				else ui_walkLHandSelector.setCurrentIndex(layer.index);
			}
			else if (type == DuAEF.Duik.Controller.Types.FOOT)
			{
				if (DuAEF.Duik.Autorig.isRight(layer)) ui_walkRFootSelector.setCurrentIndex(layer.index);
				else ui_walkLFootSelector.setCurrentIndex(layer.index);
			}

		});

		app.endUndoGroup();

		setCurrentAutomationPanel(3);
	}

	function ui_walkValidButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var numLayers = comp.numLayers;

		var headCtrl = ui_walkHeadSelector.getLayer();
		var neckCtrl = ui_walkNeckSelector.getLayer();
		var bodyCtrl = ui_walkBodySelector.getLayer();
		var hipsCtrl = ui_walkHipsSelector.getLayer();
		var rHandCtrl = ui_walkRHandSelector.getLayer();
		var lHandCtrl = ui_walkLHandSelector.getLayer();
		var rFootCtrl = ui_walkRFootSelector.getLayer();
		var lFootCtrl = ui_walkLFootSelector.getLayer();

		DuAEF.DuAE.App.beginUndoGroup("Walk cycle");

		DuAEF.DuAE.Project.setProgressMode(true);

		DuAEF.Duik.Automation.walk(headCtrl,neckCtrl,bodyCtrl,hipsCtrl,rHandCtrl,lHandCtrl,rFootCtrl,lFootCtrl,comp);

		DuAEF.DuAE.Project.setProgressMode(false);

		DuAEF.DuAE.App.endUndoGroup();

		setCurrentAutomationPanel(0);

	}

	function ui_proceduralWalkButton_clicked()
	{
		Duik.automation.walk();
	}

	function ui_looperButton_clicked()
	{
		Duik.automation.loop();
	}

	function ui_mapEffectorButton_clicked()
	{
		mapEffectorTexture = null;
        ui_mapEffectorLabel.text = "Select path...";
        ui_mapEffectorValidButton.enabled = false;
        if (settings.data.uiMode < 2) ui_mapEffectorSeparator.enabled = false;
        ui_mapEffectorValidButton.icon.image = ui_mapEffectorValidButton.standardImage = DuAEF.DuBinary.toFile( w25_mapeffector_m );
        setCurrentAutomationPanel( 4 );
	}

	function ui_mapEffectorPickButton_clicked()
	{
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
        if ( layers.length == 0 ) return;

        mapEffectorTexture = layers.pop();
        ui_mapEffectorLabel.text = mapEffectorTexture.index + " - " + mapEffectorTexture.name;
        ui_mapEffectorValidButton.enabled = true;
        if (settings.data.uiMode < 2) ui_mapEffectorSeparator.enabled = true;
        ui_mapEffectorValidButton.icon.image = ui_mapEffectorValidButton.standardImage = DuAEF.DuBinary.toFile( w25_mapeffector_l );
	}

	function ui_mapEffectorValidButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
        if ( props.length == 0 ) return;

		app.beginUndoGroup( 'Duik | ' + "Effector Map" );

		var effect = null;
		var it = new Iterator( props );
		it.do( function( p )
		{
			effect = DuAEF.Duik.Automation.mapEffector( p, mapEffectorTexture, effect );
		} );

		app.endUndoGroup();
	}

	function ui_kleanerButton_clicked()
	{
		Duik.animation.klean(
			ui_kleanerSeparateButton.checked,
			false,
			true,
			true,
			ui_kleanerKeysButton.checked
		);
		setCurrentAutomationPanel(0);
	}

	function ui_motionTrailButton_clicked()
	{
		var color = null;
		if (ui_motionTrailColorBox.selection.index == 1) color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);
		Duik.animation.motionTrail(
			color,
			ui_motionTrailUseExistingSelector.index == 0
		);
		setCurrentAutomationPanel(0);
	}

	function ui_motionTrailColor_clicked()
	{
		var color = $.colorPicker();
		if (color == -1) return;
		color = DuAEF.DuJS.Color.hexToRGB(color,false);
		ui_motionTrailColorEdit.setText(DuAEF.DuJS.Color.rgbToHex(color));
		ui_motionTrailColorEdit_changed();
	}

	function ui_motionTrailColorEdit_changed()
	{
		settings.data.motionTrailColor = ui_motionTrailColorEdit.text;
		settings.save();

		var color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);
		DuAEF.DuScriptUI.setTextColor(ui_motionTrailColorLabel,color);
	}

	function ui_motionTrailColorBox_changed()
	{
		var mode = ui_motionTrailColorBox.selection.index;
		settings.data.motionTrailColorMode = mode;
		settings.save();
		ui_motionTrailColorGroup.enabled = mode == 1;
	}

	function ui_exposureButton_clicked()
	{
		Duik.animation.xSheet(
			ui_exposureDetectButton.checked
		)
		setCurrentAutomationPanel(0);
	}

	function ui_timeremapButton_clicked()
	{
		
		Duik.animation.timeRemap();
		setCurrentAutomationPanel(0);
	}

	function ui_separateDimensionsButton_clicked ()
    {
        Duik.constraints.separateDimensions();
    }

	//========== UI =============

	ui_automationsMainGroup.orientation = 'stack';

	var ui_automationsBaseGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
	if (settings.data.uiMode < 2 && !standAlone ) DuAEF.DuScriptUI.addSeparator(ui_automationsBaseGroup,'Automations');

	var ui_automationsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsBaseGroup,'row');
	ui_automationsGroup.alignment = settings.data.uiMode > 2 ? [ 'center' ,'top'] : ['fill','top'];
	ui_automationsGroup.alignChildren = settings.data.uiMode > 2 ? [ 'center' ,'top'] : ['fill','top'];

	var ui_automationsFarLeftGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
	ui_automationsFarLeftGroup.alignChildren = settings.data.uiMode > 2 ? [ 'fill' ,'top'] : ['left','top'];
	ui_automationsFarLeftGroup.alignment = settings.data.uiMode > 2 ? [ 'fill' ,'top'] : ['left','top'];
	var ui_automationsLeftGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
	ui_automationsLeftGroup.alignChildren = ['fill','top'];
	var ui_automationsRightGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
	ui_automationsRightGroup.alignChildren = ['fill','top'];
	var ui_automationsFarRightGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
	ui_automationsFarRightGroup.alignChildren = settings.data.uiMode > 2 ? [ 'fill' ,'top'] : ['right','top'];
	ui_automationsFarRightGroup.alignment = settings.data.uiMode > 2 ? [ 'fill' ,'top'] : ['right','top'];

	var ui_kleanerGroup = DuAEF.DuScriptUI.addGroup(settings.data.uiMode > 2 ? ui_automationsFarLeftGroup : ui_automationsLeftGroup);
	var ui_kleanerButton = DuAEF.DuScriptUI.addButton(ui_kleanerGroup,settings.data.uiMode > 2 ? '' : "Kleaner",DuAEF.DuBinary.toFile(w25_broom_l),"Cleans animation",DuAEF.DuBinary.toFile(w25_broom_r));
	ui_kleanerButton.setHelp("Kleaner", kleanerHelp, kleanerLink);
	var ui_kleanerOptionsButton = DuAEF.DuScriptUI.addButton(ui_kleanerGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Kleaner options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_kleanerOptionsButton.group.alignment = [settings.data.uiMode > 2 ? 'left' : 'right','center'];

	var ui_xSheetGroup = DuAEF.DuScriptUI.addGroup(settings.data.uiMode > 2 ? ui_automationsRightGroup : ui_automationsLeftGroup);
	var ui_xSheetButton = DuAEF.DuScriptUI.addButton(ui_xSheetGroup,settings.data.uiMode > 2 ? '' : "X-Sheet",DuAEF.DuBinary.toFile(w25_exposure_l),"Change the exposure of the animation",DuAEF.DuBinary.toFile(w25_exposure_r));
	ui_xSheetButton.setHelp("X-Sheet", xsheetHelp, xsheetLink);
	var ui_xSheetOptionsButton = DuAEF.DuScriptUI.addButton(ui_xSheetGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"X-Sheet options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_xSheetOptionsButton.group.alignment = [settings.data.uiMode > 2 ? 'left' : 'right','center'];

	var ui_mapEffectorButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarLeftGroup : ui_automationsLeftGroup,settings.data.uiMode > 2 ? '' : "Effector Map...",DuAEF.DuBinary.toFile(w25_mapeffector_l),"Use a texture effector to drive properties",DuAEF.DuBinary.toFile(w25_mapeffector_r));
	ui_mapEffectorButton.setHelp("Effector Map", effectormapHelp, effectormapLink);
	var ui_wiggleGroup = DuAEF.DuScriptUI.addGroup(settings.data.uiMode > 2 ? ui_automationsRightGroup : ui_automationsLeftGroup);
	var ui_wiggleButton = DuAEF.DuScriptUI.addButton(ui_wiggleGroup,settings.data.uiMode > 2 ? '' : "Wiggle",DuAEF.DuBinary.toFile(w25_wiggle_l),"Make the property wiggle",DuAEF.DuBinary.toFile(w25_wiggle_r));
	ui_wiggleButton.setHelp("Wiggle", wiggleHelp, wiggleLink);
	var ui_wiggleOptionsButton = DuAEF.DuScriptUI.addButton(ui_wiggleGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Wiggle options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_wiggleOptionsButton.group.alignment = [settings.data.uiMode > 2 ? 'left' : 'right','center'];
	var ui_swingButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarLeftGroup : ui_automationsLeftGroup,settings.data.uiMode > 2 ? '' : "Swing",DuAEF.DuBinary.toFile(w25_swing_l),"Make the property swing between two values",DuAEF.DuBinary.toFile(w25_swing_r));
	ui_swingButton.setHelp("Swing", swingHelp, swingLink);
	var ui_wheelButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsRightGroup : ui_automationsLeftGroup,settings.data.uiMode > 2 ? '' : "Wheel",DuAEF.DuBinary.toFile(w25_wheel_l),"Automate the rotation of a wheel",DuAEF.DuBinary.toFile(w25_wheel_r));
	ui_wheelButton.setHelp("Wheel", wheelHelp, wheelLink);
	var ui_randomButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarLeftGroup : ui_automationsLeftGroup,settings.data.uiMode > 2 ? '' : "Random...",DuAEF.DuBinary.toFile(w25_randomize_l),"Randomizes all types of values and properties",DuAEF.DuBinary.toFile(w25_randomize_r));
	ui_randomButton.setHelp("Random", randomHelp, randomLink);
	var ui_walkGroup = DuAEF.DuScriptUI.addGroup(settings.data.uiMode > 2 ? ui_automationsRightGroup : ui_automationsLeftGroup);
	var ui_proceduralWalkButton = DuAEF.DuScriptUI.addButton(ui_walkGroup,settings.data.uiMode > 2 ? '' : "Walk cycle",DuAEF.DuBinary.toFile(w25_proceduralwalk_l),"Procedural walk cycle tool",DuAEF.DuBinary.toFile(w25_proceduralwalk_r));
	ui_proceduralWalkButton.setHelp("Walk Cycle", walkcycleHelp, walkcycleLink);
	var ui_walkOptionsButton = DuAEF.DuScriptUI.addButton(ui_walkGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Walk cycle options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_walkOptionsButton.group.alignment = [settings.data.uiMode > 2 ? 'left' : 'right','center'];

	var ui_motionTrailGroup = DuAEF.DuScriptUI.addGroup(settings.data.uiMode > 2 ? ui_automationsLeftGroup : ui_automationsRightGroup);
	var ui_motionTrailButton = DuAEF.DuScriptUI.addButton(ui_motionTrailGroup,settings.data.uiMode > 2 ? '' : "Motion trail",DuAEF.DuBinary.toFile(w25_anim_l),"Add a motion trail for the selected layer(s).",DuAEF.DuBinary.toFile(w25_anim_r));
	ui_motionTrailButton.setHelp("Motion Trail", motiontrailHelp, motiontrailLink);
	var ui_motionTrailOptionsButton = DuAEF.DuScriptUI.addButton(ui_motionTrailGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Kleaner options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_motionTrailOptionsButton.group.alignment = [settings.data.uiMode > 2 ? 'left' : 'right','center'];
	if (DuAEF.DuAE.App.version.version < 15)
	{
		ui_motionTrailGroup.enabled = false;
		if (settings.data.uiMode < 2) ui_motionTrailButton.label.text = 'CC2018';
	}

	var ui_timeremapButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarRightGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Time remap",DuAEF.DuBinary.toFile(w25_timeremap_l),"Enable time remapping",DuAEF.DuBinary.toFile(w25_timeremap_r));
	ui_timeremapButton.setHelp("Time Remap",timeremapHelp, timeremapLink);

	var ui_effectorButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsLeftGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Effector",DuAEF.DuBinary.toFile(w25_effector_l),"Use an effector to drive properties",DuAEF.DuBinary.toFile(w25_effector_r));
	ui_effectorButton.setHelp("Effector", effectorHelp, effectorLink);
	var ui_springButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarRightGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Spring",DuAEF.DuBinary.toFile(w25_spring_l),"Automate springs and bounces of a property",DuAEF.DuBinary.toFile(w25_spring_r));
	ui_springButton.setHelp("Kleaner", kleanerHelp, kleanerLink);
	var ui_blinkButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsLeftGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Blink",DuAEF.DuBinary.toFile(w25_blink_l),"Make a property blink",DuAEF.DuBinary.toFile(w25_blink_r));
	ui_blinkButton.setHelp("Blink", blinkHelp, blinkLink);
	var ui_moveAwayButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarRightGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Move away",DuAEF.DuBinary.toFile(w25_moveaway_l),"Move a layer away from its parent",DuAEF.DuBinary.toFile(w25_moveaway_r));
	ui_moveAwayButton.setHelp("Move Away", moveawayHelp, moveawayLink);
	var ui_paintRigButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsLeftGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Paint rig",DuAEF.DuBinary.toFile(w25_paintrig_l),"Rig brush strokes",DuAEF.DuBinary.toFile(w25_paintrig_r));
	ui_paintRigButton.setHelp("Paint Rig", paintrigHelp, paintrigLink);
	var ui_looperButton = DuAEF.DuScriptUI.addButton(settings.data.uiMode > 2 ? ui_automationsFarRightGroup : ui_automationsRightGroup,settings.data.uiMode > 2 ? '' : "Looper",DuAEF.DuBinary.toFile(w25_loopin_l),"Defines loops before and after the keyframes",DuAEF.DuBinary.toFile(w25_loopin_r));
	ui_looperButton.setHelp("Looper", looperHelp, looperLink);

	var ui_listButton = DuAEF.DuScriptUI.addButton(ui_automationsLeftGroup,settings.data.uiMode > 2 ? '' : "List",DuAEF.DuBinary.toFile(w25_list_l),"Add a list to the property",DuAEF.DuBinary.toFile(w25_list_r));
	ui_listButton.setHelp("List", listHelp, listLink);

	var ui_separateDimensionsButton = DuAEF.DuScriptUI.addButton( ui_automationsRightGroup, settings.data.uiMode > 2 ? '' : "Separate Dimensions", DuAEF.DuBinary.toFile( w25_separatedimensions_l ), "Separates the dimensions of the property in an effect", DuAEF.DuBinary.toFile( w25_separatedimensions_r ) );
	ui_separateDimensionsButton.setHelp( "Separate Dimensions", separatedimensionsHelp, separatedimensionsLink );

	//WALK CYCLE
	var ui_walkCycleOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
	if (settings.data.uiMode < 2) DuAEF.DuScriptUI.addSeparator(ui_walkCycleOptionsGroup,'Walk cycle');
	var ui_walkLayerPicker = DuAEF.DuScriptUI.addLayerPicker(ui_walkCycleOptionsGroup);
	var ui_walkHeadSelector = ui_walkLayerPicker.addSelector("Head:");
	var ui_walkNeckSelector = ui_walkLayerPicker.addSelector("Neck & shoulders:");
	var ui_walkBodySelector = ui_walkLayerPicker.addSelector("Body:");
	var ui_walkHipsSelector = ui_walkLayerPicker.addSelector("Hips:");
	var ui_walkRHandSelector = ui_walkLayerPicker.addSelector("Right hand:");
	var ui_walkLHandSelector = ui_walkLayerPicker.addSelector("Left hand:");
	var ui_walkRFootSelector = ui_walkLayerPicker.addSelector("Right foot:");
	var ui_walkLFootSelector = ui_walkLayerPicker.addSelector("Left foot:");
	var ui_walkValidGroup = DuAEF.DuScriptUI.addGroup(ui_walkCycleOptionsGroup);
	ui_walkValidGroup.alignment = ['fill','top'];
	var ui_walkCancelButton = DuAEF.DuScriptUI.addButton(ui_walkValidGroup,'Cancel',DuAEF.DuBinary.toFile(w25_back_m),"Cancel",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_walkValidButton = DuAEF.DuScriptUI.addButton(ui_walkValidGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Walk cycle",DuAEF.DuBinary.toFile(w25_check_r));

	//WIGGLE
	var ui_wiggleWindow = DuAEF.DuScriptUI.createPopup( "Wiggle" );
	var ui_wiggleOptionsGroup = ui_wiggleWindow.contents;
	var ui_wiggleSeparateSelector = DuAEF.DuScriptUI.addSelector(ui_wiggleOptionsGroup);
	ui_wiggleSeparateSelector.addButton("Collapse dimensions",DuAEF.DuBinary.toFile(w14_collapsedimensions_l),"Control all dimensions together",DuAEF.DuBinary.toFile(w14_collapsedimensions_r));
	ui_wiggleSeparateSelector.addButton("Separate dimensions",DuAEF.DuBinary.toFile(w14_separatedimensions_l),"Separate the dimension controls of the wiggle",DuAEF.DuBinary.toFile(w14_separatedimensions_r));
	ui_wiggleSeparateSelector.setCurrentIndex(0);
	var ui_wiggleIndividualSelector = DuAEF.DuScriptUI.addSelector(ui_wiggleOptionsGroup);
	ui_wiggleIndividualSelector.addButton("Unified control",DuAEF.DuBinary.toFile(w14_batchcontrol_l),"Add one control for all properties",DuAEF.DuBinary.toFile(w14_batchcontrol_r));
	ui_wiggleIndividualSelector.addButton("Individual controls",DuAEF.DuBinary.toFile(w14_individualcontrol_l),"Add one control for each property",DuAEF.DuBinary.toFile(w14_individualcontrol_r));
	ui_wiggleIndividualSelector.setCurrentIndex(0);
	var ui_wiggleValidButton = DuAEF.DuScriptUI.addButton(ui_wiggleOptionsGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create wiggle",DuAEF.DuBinary.toFile(w25_check_r));

	//Random
	var ui_randomOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
	if (settings.data.uiMode < 2) DuAEF.DuScriptUI.addSeparator(ui_randomOptionsGroup,'Random');
	var ui_randomSelector = DuAEF.DuScriptUI.addSelector(ui_randomOptionsGroup);
	ui_randomSelector.addButton("Current values",DuAEF.DuBinary.toFile(w14_randomize_l),"Randomizes the selected values (adding a keyframe if necessary)",DuAEF.DuBinary.toFile(w14_randomize_r));
	ui_randomSelector.addButton("Layers",DuAEF.DuBinary.toFile(w14_aelayers_l),"Randomizes layer properties",DuAEF.DuBinary.toFile(w14_aelayers_r));
	ui_randomSelector.addButton("Keyframes",DuAEF.DuBinary.toFile(w14_klin_l),"Randomizes keyframe properties",DuAEF.DuBinary.toFile(w14_klin_l));

	var ui_randomSelectionGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup,'stack');
	var ui_randomLayersGroup = DuAEF.DuScriptUI.addGroup(ui_randomSelectionGroup,'row');
	ui_randomLayersGroup.alignment = ['fill','top'];
	ui_randomLayersGroup.alignChildren = ['fill','top'];
	var ui_randomLayersLeftGroup = DuAEF.DuScriptUI.addGroup(ui_randomLayersGroup,'column');
	var ui_randomLayersRightGroup = DuAEF.DuScriptUI.addGroup(ui_randomLayersGroup,'column');
	var ui_randomLayerTimesButton = DuAEF.DuScriptUI.addCheckBox(ui_randomLayersLeftGroup,"Times",DuAEF.DuBinary.toFile(w14_randomlayerstarttime_l),"Randomizes the start times of the layers (moving them in time)",DuAEF.DuBinary.toFile(w14_randomlayerstarttime_r));
	var ui_randomLayerIndicesButton = DuAEF.DuScriptUI.addCheckBox(ui_randomLayersRightGroup,"Indices",DuAEF.DuBinary.toFile(w14_randomlayerindex_l),"Randomizes the indices of the layers",DuAEF.DuBinary.toFile(w14_randomlayerindex_r));
	var ui_randomLayerInButton = DuAEF.DuScriptUI.addCheckBox(ui_randomLayersLeftGroup,"In points",DuAEF.DuBinary.toFile(w14_randomlayerin_l),"Randomizes the in points of the layers",DuAEF.DuBinary.toFile(w14_randomlayerin_r));
	var ui_randomLayerOutButton = DuAEF.DuScriptUI.addCheckBox(ui_randomLayersRightGroup,"Out points",DuAEF.DuBinary.toFile(w14_randomlayerout_l),"Randomizes the out points of the layers",DuAEF.DuBinary.toFile(w14_randomlayerout_r));
	ui_randomLayersGroup.visible = false;

	var ui_randomKeysGroup = DuAEF.DuScriptUI.addGroup(ui_randomSelectionGroup,'row');
	var ui_randomKeyTimesButton = DuAEF.DuScriptUI.addCheckBox(ui_randomKeysGroup,"Times",DuAEF.DuBinary.toFile(w14_randomkeytime_l),"Randomizes the times of the keyframes (moving them in time)",DuAEF.DuBinary.toFile(w14_randomkeytime_r));
	var ui_randomKeyValuesButton = DuAEF.DuScriptUI.addCheckBox(ui_randomKeysGroup,"Values",DuAEF.DuBinary.toFile(w14_randomize_l),"Randomizes the values of the keyframes",DuAEF.DuBinary.toFile(w14_randomize_r));
	ui_randomKeysGroup.visible = false;

	if (settings.data.uiMode == 0) DuAEF.DuScriptUI.addSeparator(ui_randomOptionsGroup,"Min and max");
	var ui_randomMinMaxGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup,'column');
	var ui_randomXGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
	ui_randomXGroup.add('statictext',undefined,"X ").alignment = ['fill','center'];
	var ui_randomXMinSlider = DuAEF.DuScriptUI.addEditText(ui_randomXGroup,'','','','Min');
	ui_randomXMinSlider.alignment = ['fill','top'];
	var ui_randomXMaxSlider = DuAEF.DuScriptUI.addEditText(ui_randomXGroup,'','','','Max');
	ui_randomXMaxSlider.alignment = ['fill','top'];
	var ui_randomYGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
	ui_randomYGroup.add('statictext',undefined,"Y ").alignment = ['fill','center'];
	var ui_randomYMinSlider = DuAEF.DuScriptUI.addEditText(ui_randomYGroup,'','','','Min');
	ui_randomYMinSlider.alignment = ['fill','top'];
	var ui_randomYMaxSlider = DuAEF.DuScriptUI.addEditText(ui_randomYGroup,'','','','Max');
	ui_randomYMaxSlider.alignment = ['fill','top'];
	var ui_randomZGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
	ui_randomZGroup.add('statictext',undefined,"Z ").alignment = ['fill','center'];
	var ui_randomZMinSlider = DuAEF.DuScriptUI.addEditText(ui_randomZGroup,'','','','Min');
	ui_randomZMinSlider.alignment = ['fill','top'];
	var ui_randomZMaxSlider = DuAEF.DuScriptUI.addEditText(ui_randomZGroup,'','','','Max');
	ui_randomZMaxSlider.alignment = ['fill','top'];

	var ui_randomSeparateSelector = DuAEF.DuScriptUI.addSelector(ui_randomMinMaxGroup);
	ui_randomSeparateSelector.addButton("Collapse dimensions",DuAEF.DuBinary.toFile(w14_collapsedimensions_l),"Randomize all dimensions together (uses the X value)",DuAEF.DuBinary.toFile(w14_collapsedimensions_r));
	ui_randomSeparateSelector.addButton("Separate dimensions",DuAEF.DuBinary.toFile(w14_separatedimensions_l),"Separate the dimension controls of the randomize",DuAEF.DuBinary.toFile(w14_separatedimensions_r));
	var ui_randomOffsetSelector = DuAEF.DuScriptUI.addSelector(ui_randomMinMaxGroup);
	ui_randomOffsetSelector.addButton("Offset current values",DuAEF.DuBinary.toFile(w14_moveaway_l),"Randomizes from the current values",DuAEF.DuBinary.toFile(w14_moveaway_r));
	ui_randomOffsetSelector.addButton("Absolute values",DuAEF.DuBinary.toFile(w14_absolute_l),"Randomizes with absolute values",DuAEF.DuBinary.toFile(w14_absolute_r));

	var ui_randomValidGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup);
	var ui_randomCancelButton = DuAEF.DuScriptUI.addButton(ui_randomValidGroup,'Cancel',DuAEF.DuBinary.toFile(w25_cancel_m),"Back to automations",DuAEF.DuBinary.toFile(w25_cancel_r));
	var ui_randomValidButton = DuAEF.DuScriptUI.addButton(ui_randomValidGroup,'Randomize',DuAEF.DuBinary.toFile(w25_check_g),"Randomize!",DuAEF.DuBinary.toFile(w25_check_r));

	//MAP EFFECTOR
	var ui_mapEffectorOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
	ui_mapEffectorOptionsGroup.alignChildren = [ 'center', 'top' ];
    if ( settings.data.uiMode < 2 ) DuAEF.DuScriptUI.addSeparator( ui_mapEffectorOptionsGroup, "1 - Select texture layer" );
	var ui_mapEffectorPickButton = DuAEF.DuScriptUI.addButton(ui_mapEffectorOptionsGroup,'Pick texture layer',DuAEF.DuBinary.toFile(w25_picktexture_l),"Pick texture layer",DuAEF.DuBinary.toFile(w25_picktexture_r));
	var ui_mapEffectorLabel = DuAEF.DuScriptUI.addStaticText(ui_mapEffectorOptionsGroup, 'Select layer...', DuAEF.DuJS.Color.Colors.DARK_GREY );
	ui_mapEffectorLabel.characters = 20;
    ui_mapEffectorLabel.justify = 'center';
	if ( settings.data.uiMode < 2 ) var ui_mapEffectorSeparator = DuAEF.DuScriptUI.addSeparator( ui_mapEffectorOptionsGroup, "2 - Select properties" );
	var ui_mapEffectorValidButton = DuAEF.DuScriptUI.addButton( ui_mapEffectorOptionsGroup,
		"Connect properties",
		DuAEF.DuBinary.toFile(w25_mapeffector_l),
		"Use a texture effector to drive properties",
		DuAEF.DuBinary.toFile(w25_mapeffector_r));
    DuAEF.DuScriptUI.addSeparator( ui_mapEffectorOptionsGroup, "" );
    var ui_mapEffectorCancelButton = DuAEF.DuScriptUI.addButton( ui_mapEffectorOptionsGroup, "Cancel", DuAEF.DuBinary.toFile( w25_back_m ), "Cancel", DuAEF.DuBinary.toFile( w25_back_r ) );

	//KLEANER
	var ui_kleanerWindow = DuAEF.DuScriptUI.createPopup( "Kleaner" );
	var ui_kleanerOptionsGroup = ui_kleanerWindow.contents;
	var ui_kleanerKeysButton =DuAEF.DuScriptUI.addCheckBox(ui_kleanerOptionsGroup,"Remove unnecessary keyframes",DuAEF.DuBinary.toFile(w25_broom_l),"Automatically removes unneeded keyframes",DuAEF.DuBinary.toFile(w25_broom_r));
	var ui_kleanerSeparateButton = DuAEF.DuScriptUI.addCheckBox(ui_kleanerOptionsGroup,'Separate dimensions',DuAEF.DuBinary.toFile( w18_separatedimensions_l ),"Separates the dimensions before cleaning the animation",DuAEF.DuBinary.toFile( w18_separatedimensions_r ));
	var ui_kleanerValidButton = DuAEF.DuScriptUI.addButton(ui_kleanerOptionsGroup,'Klean!',DuAEF.DuBinary.toFile(w25_check_g),"Klean the animation!",DuAEF.DuBinary.toFile(w25_check_r));

	//MOTION TRAIL
	var ui_motionTrailWindow = DuAEF.DuScriptUI.createPopup( "Motion Trail" );
	var ui_motionTrailOptionsGroup = ui_motionTrailWindow.contents;
	ui_motionTrailOptionsGroup.alignment = ['fill','top'];
	ui_motionTrailOptionsGroup.alignChildren = ['fill','top'];
	var ui_motionTrailUseExistingSelector = DuAEF.DuScriptUI.addSelector(ui_motionTrailOptionsGroup);
	ui_motionTrailUseExistingSelector.addButton("Use existing layer",DuAEF.DuBinary.toFile(w32_selectlayer_l),"Use an already existing layer for the motion trails, if any.",DuAEF.DuBinary.toFile(w32_selectlayer_r));
	ui_motionTrailUseExistingSelector.addButton("Create new layer",DuAEF.DuBinary.toFile(w32_addlayer_l),"Creates a new layer for the trails.",DuAEF.DuBinary.toFile(w32_addlayer_r));
	ui_motionTrailUseExistingSelector.setCurrentIndex(0);
	var ui_motionTrailColorBox = ui_motionTrailOptionsGroup.add('dropdownlist',undefined,["Random Color","Custom Color"]);
	var ui_motionTrailColorGroup = DuAEF.DuScriptUI.addGroup(ui_motionTrailOptionsGroup,'row');
	ui_motionTrailColorGroup.alignment = ['center','top'];
	var ui_motionTrailColorLabel = ui_motionTrailColorGroup.add('statictext',undefined,"Color #");
	var ui_motionTrailColorEdit = DuAEF.DuScriptUI.addEditText(ui_motionTrailColorGroup,'EC1818');
	var ui_motionTrailValidButton = DuAEF.DuScriptUI.addButton(ui_motionTrailOptionsGroup,"Create",DuAEF.DuBinary.toFile(w25_check_g),"Create motion trails",DuAEF.DuBinary.toFile(w25_check_r));

	// XSHEET
	var uiexposureOptionsWindow = DuAEF.DuScriptUI.createPopup( "X-Sheet" );
	var uiexposureOptionsGroup = uiexposureOptionsWindow.contents;
	uiexposureOptionsGroup.alignment = ['fill','top'];
	var ui_exposureDetectButton = DuAEF.DuScriptUI.addCheckBox(uiexposureOptionsGroup,"Auto-Detect",DuAEF.DuBinary.toFile(w32_detectexposure_l),"Try to set a nice animation exposure based on the property velocities.",DuAEF.DuBinary.toFile(w32_detectexposure_r));
	var ui_exposureValidButton = DuAEF.DuScriptUI.addButton(uiexposureOptionsGroup,"Create",DuAEF.DuBinary.toFile(w25_check_g),"Exposure controls",DuAEF.DuBinary.toFile(w25_check_r));


	//=========== INIT ==============
	ui_randomOffsetSelector.setCurrentIndex(0);
	ui_randomSelector.setCurrentIndex(0);
	ui_randomSeparateSelector.setCurrentIndex(1);
	ui_randomSelector_changed();
	var mapEffectorTexture = null;

	ui_kleanerKeysButton.setChecked(true);

	ui_motionTrailColorEdit.setText(settings.data.motionTrailColor);
	var color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);
	DuAEF.DuScriptUI.setTextColor(ui_motionTrailColorLabel,color);
	ui_motionTrailColorBox.selection = settings.data.motionTrailColorMode;
	ui_motionTrailColorGroup.enabled = settings.data.motionTrailColorMode == 1;

	ui_automationsMainGroup.tabActivated = setCurrentAutomationPanel;
	if (standAlone) setCurrentAutomationPanel();

	//====== CONNECT EVENTS ===========

	ui_listButton.onClick = ui_listButton_clicked;

	ui_wiggleButton.onClick = ui_wiggleValidButton.onClick = ui_wiggleButton_clicked;
	ui_wiggleWindow.tieTo(ui_wiggleOptionsButton);

	ui_swingButton.onClick = ui_swingButton_clicked;

	ui_wheelButton.onClick = ui_wheelButton_clicked;

	ui_randomButton.onClick = function(){setCurrentAutomationPanel(2);};
	ui_randomSelector.onChange = ui_randomSelector_changed;
	ui_randomLayerTimesButton.onClick = ui_randomLayerIndicesButton.onClick = ui_randomLayerInButton.onClick = ui_randomLayerOutButton.onClick = ui_randomLayerTimesButton_clicked;
	ui_randomKeyTimesButton.onClick = ui_randomKeyValuesButton.onClick = ui_randomKeyTimesButton_clicked;
	ui_randomCancelButton.onClick = function(){setCurrentAutomationPanel(0);};
	ui_randomValidButton.onClick = ui_randomValidButton_clicked;

	ui_effectorButton.onClick = ui_effectorButton_clicked;

	ui_mapEffectorButton.onClick = ui_mapEffectorButton_clicked;
	ui_mapEffectorCancelButton.onClick = function(){setCurrentAutomationPanel(0);};
	ui_mapEffectorPickButton.onClick = ui_mapEffectorPickButton_clicked;
	ui_mapEffectorValidButton.onClick = ui_mapEffectorValidButton_clicked;

	ui_springButton.onClick = ui_springButton_clicked;

	ui_blinkButton.onClick = ui_blinkButton_clicked;

	ui_moveAwayButton.onClick = ui_moveAwayButton_clicked;

	ui_paintRigButton.onClick = ui_paintRigButton_clicked;

	ui_looperButton.onClick = ui_looperButton_clicked;

	ui_proceduralWalkButton.onClick = ui_proceduralWalkButton_clicked;
	ui_walkCancelButton.onClick = function () {setCurrentAutomationPanel(0);};
	ui_walkValidButton.onClick = ui_walkValidButton_clicked;
	ui_walkOptionsButton.onClick = ui_walkOptionsButton_clicked;

	ui_kleanerButton.onClick = ui_kleanerValidButton.onClick = ui_kleanerButton_clicked;
	ui_kleanerWindow.tieTo(ui_kleanerOptionsButton)

	ui_motionTrailColorLabel.addEventListener("mousedown",ui_motionTrailColor_clicked,false);
	ui_motionTrailColorEdit.onChange = ui_motionTrailColorEdit_changed;
	ui_motionTrailColorBox.onChange = ui_motionTrailColorBox_changed;
	ui_motionTrailButton.onClick = ui_motionTrailValidButton.onClick = ui_motionTrailButton_clicked;
	ui_motionTrailWindow.tieTo(ui_motionTrailOptionsButton);

	ui_xSheetButton.onClick = ui_exposureValidButton.onClick = ui_exposureButton_clicked;
	uiexposureOptionsWindow.tieTo(ui_xSheetOptionsButton);
	
	ui_timeremapButton.onClick = ui_timeremapButton_clicked;

	ui_separateDimensionsButton.onClick = ui_separateDimensionsButton_clicked;

	debugLog.stopTimer("Automations ready.");
}
