//========== FUNCTIONS =============
function getStructures()
{
	var structures = [];
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return structures;

	var selectionMode = DuAEF.Duik.structureSelectionMode.STRUCTURE;
	if (ui_structuresEditSelectChildrenButton.checked) selectionMode = DuAEF.Duik.structureSelectionMode.CHILDREN;
	else if (ui_structuresEditSelectElementsButton.checked) selectionMode = DuAEF.Duik.structureSelectionMode.ELEMENT;
	else if (ui_structuresEditSelectAllButton.checked) selectionMode = DuAEF.Duik.structureSelectionMode.ALL;

	structures = DuAEF.Duik.Structure.getStructures(comp,selectionMode);

	return structures;
}

function structuresEditInit()
{
	if (settings.data.structureSizeHint == undefined) settings.data.structureSizeHint = 0;
	if (settings.data.structureSize == undefined) settings.data.structureSize = 100;

	DuAEF.Duik.structureSize = settings.data.structureSize;
	DuAEF.Duik.structureSizeHint = settings.data.structureSizeHint;

	ui_structuresEditSizeEdit.setText(settings.data.structureSize);
	ui_structuresEditSizeList[1].selection = settings.data.structureSizeHint;
	if (settings.data.structureSizeHint == 3)
	{
		ui_structuresEditSizeEdit.enabled = true;
	}
	else
	{
		ui_structuresEditSizeEdit.enabled = false;
	}

	if (settings.data.structureColor == undefined) settings.data.structureColor = "EC1818";
	ui_structuresEditColor.setText(settings.data.structureColor);
	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);
	DuAEF.DuScriptUI.setTextColor(ui_structuresEditColorLabel,color);


}

//========== EVENTS =================
function ui_structuresEditSelectAllButton_clicked()
{
	ui_structuresEditSelectAllButton.setChecked(true);
	ui_structuresEditSelectChainsButton.setChecked(false);
	ui_structuresEditSelectChildrenButton.setChecked(false);
	ui_structuresEditSelectElementsButton.setChecked(false);
}

function ui_structuresEditSelectChainsButton_clicked()
{
	ui_structuresEditSelectAllButton.setChecked(false);
	ui_structuresEditSelectChainsButton.setChecked(true);
	ui_structuresEditSelectChildrenButton.setChecked(false);
	ui_structuresEditSelectElementsButton.setChecked(false);
}

function ui_structuresEditSelectChildrenButton_clicked()
{
	ui_structuresEditSelectAllButton.setChecked(false);
	ui_structuresEditSelectChainsButton.setChecked(false);
	ui_structuresEditSelectChildrenButton.setChecked(true);
	ui_structuresEditSelectElementsButton.setChecked(false);
}

function ui_structuresEditSelectElementsButton_clicked()
{
	ui_structuresEditSelectAllButton.setChecked(false);
	ui_structuresEditSelectChainsButton.setChecked(false);
	ui_structuresEditSelectChildrenButton.setChecked(false);
	ui_structuresEditSelectElementsButton.setChecked(true);
}

function ui_structuresEditSizeList_changed()
{
	var index = ui_structuresEditSizeList[1].selection.index;
	if (index == 3)
	{
		ui_structuresEditSizeEdit.enabled = true;
	}
	else
	{
		ui_structuresEditSizeEdit.enabled = false;
	}
	DuAEF.Duik.structureSizeHint = index;
	settings.data.structureSizeHint = index;
	settings.save();

	ui_structuresEditSizeValidButton_clicked();
}

function ui_structuresEditSizeEdit_changed()
{
	DuAEF.Duik.structureSize = parseInt(ui_structuresEditSizeEdit.text);
	settings.data.structureSize = DuAEF.Duik.structureSize;
	settings.save();
	ui_structuresEditSizeValidButton_clicked();
}

function ui_structuresEditSizeValidButton_clicked()
{
	var structures = getStructures();
	if (structures.length == 0) return;

	app.beginUndoGroup('Duik - ' + "Set structure size");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].setSize();
	}
	app.endUndoGroup();
}

function ui_structuresEditColor_changed()
{
	settings.data.structureColor = ui_structuresEditColor.text;
	settings.save();

	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);
	DuAEF.DuScriptUI.setTextColor(ui_structuresEditColorLabel,color);

	ui_structuresEditColorValidButton_clicked();
}

function ui_structuresEditColor_clicked()
{
	var color = $.colorPicker();
	if (color == -1) return;
	color = DuAEF.DuJS.Color.hexToRGB(color,false);
	ui_structuresEditColor.setText(DuAEF.DuJS.Color.rgbToHex(color));
	ui_structuresEditColor_changed();
}

function ui_structuresEditColorValidButton_clicked()
{
	var structures = getStructures();
	if (structures.length == 0) return;

	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);

	app.beginUndoGroup('Duik - ' + "Set structure color");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].setColor(color);
	}
	app.endUndoGroup();
}

function ui_structuresEditSetButton_clicked()
{
	ui_structuresEditSizeValidButton_clicked();
	ui_structuresEditColorValidButton_clicked();
}

function ui_structuresEditGetButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;
	//get from first element
	var structures = DuAEF.Duik.Structure.getStructures(comp,DuAEF.Duik.structureSelectionMode.ELEMENT);

	if (structures[0].elements.length >= 0)
	{
		var effect = structures[0].elements[0].effect(DuAEF.Duik.pseudoEffectsMatchNames.STRUCTURE_ELEMENT);
		var color = effect(4).value;
		var size = effect(2).value;
		settings.data.structureSize = size;
		settings.data.structureSizeHint = DuAEF.Duik.sizes.CUSTOM;
		settings.data.structureColor = DuAEF.DuJS.Color.rgbToHex(color);
		structuresEditInit();
	}
}

function ui_structuresEditShowButton_clicked()
{
	var structures = getStructures();
	if (structures.length == 0) return;

	app.beginUndoGroup('Duik - ' + "Show/hide structures");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].showHide();
	}
	app.endUndoGroup();
}

function ui_structuresEditEditModeButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;
	//get from first element
	var structures = DuAEF.Duik.Structure.getStructures(comp,DuAEF.Duik.structureSelectionMode.ELEMENT);

	app.beginUndoGroup('Duik - ' + "Show/hide structures");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].toggleEditMode();
	}
	app.endUndoGroup();
}

//========== UI =============
var ui_structuresEditGroup = DuAEF.DuScriptUI.addGroup(ui_riggingMainGroup,'column');

var ui_structuresEditSelectionGroup = DuAEF.DuScriptUI.addGroup(ui_structuresEditGroup,'row');
ui_structuresEditSelectionGroup.alignment = ['center','top'];

var ui_structuresEditSelectAllButton = DuAEF.DuScriptUI.addImageCheckBox(ui_structuresEditSelectionGroup,'','E:/DEV SRC/RainboxUI/Icons/25w/allstructures_l.png',"All structures found in the current composition",'E:/DEV SRC/RainboxUI/Icons/25w/allstructures_r.png');
var ui_structuresEditSelectChainsButton = DuAEF.DuScriptUI.addImageCheckBox(ui_structuresEditSelectionGroup,'','E:/DEV SRC/RainboxUI/Icons/25w/selectedchain_l.png',"Selected structures",'E:/DEV SRC/RainboxUI/Icons/25w/selectedchain_r.png');
var ui_structuresEditSelectChildrenButton = DuAEF.DuScriptUI.addImageCheckBox(ui_structuresEditSelectionGroup,'','E:/DEV SRC/RainboxUI/Icons/25w/selectedchildren_l.png',"Selected elements and children",'E:/DEV SRC/RainboxUI/Icons/25w/selectedchildren_r.png');
var ui_structuresEditSelectElementsButton = DuAEF.DuScriptUI.addImageCheckBox(ui_structuresEditSelectionGroup,'','E:/DEV SRC/RainboxUI/Icons/25w/selectedelement_l.png',"Selected elements",'E:/DEV SRC/RainboxUI/Icons/25w/selectedelement_r.png');
ui_structuresEditSelectChainsButton.setChecked(true);

DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup);

var ui_structuresEditForm = DuAEF.DuScriptUI.addForm(ui_structuresEditGroup);
ui_structuresEditForm.alignment = ['center','top'];
//add a column for valid buttons
var ui_structuresEditValidButtons = ui_structuresEditForm.add('group');
ui_structuresEditValidButtons.alignment = ['right','top'];
ui_structuresEditValidButtons.orientation = 'column';
ui_structuresEditValidButtons.alignChildren = ['right','center'];
ui_structuresEditValidButtons.spacing = 2;

var ui_structuresEditSizeList = DuAEF.DuScriptUI.addFormField(ui_structuresEditForm,"Size",'dropdownlist',["Small","Medium","Large","Custom"],"Set the display size of the elements.");
var ui_structuresEditSizeValidButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditValidButtons,'','E:/DEV SRC/RainboxUI/Icons/18w/check_m.png',"Set size",'E:/DEV SRC/RainboxUI/Icons/18w/check_g.png',settings.data.debug);
ui_structuresEditSizeValidButton.group.minimumSize.height = ui_structuresEditSizeValidButton.group.maximumSize.height = ui_structuresEditSizeList[1].preferredSize[1];

var ui_structuresEditSizeEdit = DuAEF.DuScriptUI.addNiceEditText(ui_structuresEditForm.buttons,'100');
ui_structuresEditSizeEdit.helpTip = "Set the display size of the elements.";
var ui_structuresEditSpacer = ui_structuresEditValidButtons.add('statictext',undefined,'');
ui_structuresEditSpacer.minimumSize.height = ui_structuresEditSpacer.maximumSize.height = ui_structuresEditSizeEdit.edit.preferredSize[1];
ui_structuresEditSpacer = ui_structuresEditForm.labels.add('statictext',undefined,'');
ui_structuresEditSpacer.minimumSize.height = ui_structuresEditSpacer.maximumSize.height = ui_structuresEditSizeEdit.edit.preferredSize[1];

var ui_structuresEditColor = DuAEF.DuScriptUI.addNiceEditText(ui_structuresEditForm.buttons,'EC1818');
var ui_structuresEditColorLabel = ui_structuresEditForm.labels.add('statictext',undefined,"Color #");
ui_structuresEditColor.helpTip = "Set the display color of the elements.";
ui_structuresEditColorLabel.helpTip = "Set the display color of the elements.";
ui_structuresEditColorLabel.minimumSize.height = ui_structuresEditColorLabel.maximumSize.height = ui_structuresEditColor.edit.preferredSize[1];
var ui_structuresEditColorValidButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditValidButtons,'','E:/DEV SRC/RainboxUI/Icons/18w/check_m.png',"Set color",'E:/DEV SRC/RainboxUI/Icons/18w/check_g.png',settings.data.debug);
ui_structuresEditColorValidButton.group.minimumSize.height = ui_structuresEditColorValidButton.group.maximumSize.height = ui_structuresEditColor.edit.preferredSize[1];

var ui_structuresEditGetSetGroup = DuAEF.DuScriptUI.addGroup(ui_structuresEditGroup);
ui_structuresEditGetSetGroup.alignment = ['center','top'];
var ui_structuresEditGetButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGetSetGroup,'Get','E:/DEV SRC/RainboxUI/Icons/25w/structureget_l.png',"Get size and color",'E:/DEV SRC/RainboxUI/Icons/25w/structureget_r.png');
var ui_structuresEditSetButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGetSetGroup,'Set','E:/DEV SRC/RainboxUI/Icons/25w/check_g.png',"Set size and color",'E:/DEV SRC/RainboxUI/Icons/25w/check_r.png',settings.data.debug);

DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup);

var ui_structuresEditToolsGroup = DuAEF.DuScriptUI.addGroup(ui_structuresEditGroup,settings.data.expert ? 'row' : 'column');
ui_structuresEditToolsGroup.alignment = ['center','top'];
ui_structuresEditToolsGroup.alignChildren = ['left','top'];
var ui_structuresEditEditModeButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditToolsGroup,settings.data.expert ? "" : "Toggle edit mode",'E:/DEV SRC/RainboxUI/Icons/25w/structureedit_l.png',"Unlink elements' children to easily edit anchor points",'E:/DEV SRC/RainboxUI/Icons/25w/structureedit_r.png',settings.data.debug);
ui_structuresEditEditModeButton.alignment= ['center','top'];
var ui_structuresEditShowButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditToolsGroup,settings.data.expert ? "" : "Show/hide",'E:/DEV SRC/RainboxUI/Icons/25w/structureshow_l.png',"Show or hide structures",'E:/DEV SRC/RainboxUI/Icons/25w/structurehide_r.png',settings.data.debug);
ui_structuresEditShowButton.alignment= ['center','top'];

//============== INIT ========================
structuresEditInit();

//============== CONNECT EVENTS ===============

ui_structuresEditSelectAllButton.onClick = ui_structuresEditSelectAllButton_clicked;
ui_structuresEditSelectChainsButton.onClick = ui_structuresEditSelectChainsButton_clicked;
ui_structuresEditSelectChildrenButton.onClick = ui_structuresEditSelectChildrenButton_clicked;
ui_structuresEditSelectElementsButton.onClick = ui_structuresEditSelectElementsButton_clicked;

ui_structuresEditSizeList[1].onChange = ui_structuresEditSizeList_changed;
ui_structuresEditSizeEdit.onChange = ui_structuresEditSizeEdit_changed;
ui_structuresEditColor.onChange = ui_structuresEditColor_changed;
ui_structuresEditColorLabel.addEventListener("mousedown",ui_structuresEditColor_clicked,false);

ui_structuresEditSizeValidButton.onClick = ui_structuresEditSizeValidButton_clicked;
ui_structuresEditColorValidButton.onClick = ui_structuresEditColorValidButton_clicked;

ui_structuresEditSetButton.onClick = ui_structuresEditSetButton_clicked;
ui_structuresEditGetButton.onClick = ui_structuresEditGetButton_clicked;

ui_structuresEditEditModeButton.onClick = ui_structuresEditEditModeButton_clicked;
ui_structuresEditShowButton.onClick = ui_structuresEditShowButton_clicked;
