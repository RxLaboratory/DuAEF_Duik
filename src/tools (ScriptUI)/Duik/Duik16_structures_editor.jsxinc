

//========== FUNCTIONS =============
function structuresEditInit()
{
	if (settings.data.structureSizeHint == undefined) settings.data.structureSizeHint = 0;
	if (settings.data.structureSize == undefined) settings.data.structureSize = 100;

	DuAEF.Duik.Structure.size = settings.data.structureSize;
	DuAEF.Duik.Structure.sizeHint = settings.data.structureSizeHint;

	ui_structuresEditSizeEdit.setText(settings.data.structureSize);
	ui_structuresEditSizeList[1].selection = settings.data.structureSizeHint;
	if (settings.data.structureSizeHint == 3)
	{
		ui_structuresEditSizeEdit.enabled = true;
	}
	else
	{
		ui_structuresEditSizeEdit.enabled = false;
	}

	if (settings.data.structureColor == undefined) settings.data.structureColor = "EC1818";
	ui_structuresEditColor.setText(settings.data.structureColor);
	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);
	DuAEF.DuScriptUI.setTextColor(ui_structuresEditColorLabel,color);
	DuAEF.Duik.Structure.color = color;
}

//========== EVENTS =================
function ui_structuresEditSizeList_changed()
{
	var index = ui_structuresEditSizeList[1].selection.index;
	if (index == 3)
	{
		ui_structuresEditSizeEdit.enabled = true;
	}
	else
	{
		ui_structuresEditSizeEdit.enabled = false;
	}
	DuAEF.Duik.Structure.sizeHint = index;
	settings.data.structureSizeHint = index;
	settings.save();

	ui_structuresEditSizeValidButton_clicked();
}

function ui_structuresEditSizeEdit_changed()
{
	DuAEF.Duik.Structure.size = parseInt(ui_structuresEditSizeEdit.text);
	settings.data.structureSize = DuAEF.Duik.Structure.size;
	settings.save();
	ui_structuresEditSizeValidButton_clicked();
}

function ui_structuresEditSizeValidButton_clicked()
{
	var structures = DuAEF.Duik.Structure.getStructures(undefined,DuAEF.Duik.Structure.SelectionModes.ELEMENT);
	if (structures.length == 0) return;

	app.beginUndoGroup('Duik - ' + "Set structure size");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].setSize();
	}
	app.endUndoGroup();
}

function ui_structuresEditColor_changed()
{
	settings.data.structureColor = ui_structuresEditColor.text;
	settings.save();

	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);
	DuAEF.DuScriptUI.setTextColor(ui_structuresEditColorLabel,color);

	DuAEF.Duik.Structure.color = color;

	ui_structuresEditColorValidButton_clicked();
}

function ui_structuresEditRandomColorButton_clicked()
{
	var color = DuAEF.DuJS.Color.random();
	ui_structuresEditColor.setText(DuAEF.DuJS.Color.rgbToHex(color));
	ui_structuresEditColor_changed();
}

function ui_structuresEditColor_clicked()
{
	var color = $.colorPicker();
	if (color == -1) return;
	color = DuAEF.DuJS.Color.hexToRGB(color,false);
	ui_structuresEditColor.setText(DuAEF.DuJS.Color.rgbToHex(color));
	ui_structuresEditColor_changed();
}

function ui_structuresEditColorValidButton_clicked()
{
	var structures = DuAEF.Duik.Structure.getStructures(undefined,DuAEF.Duik.Structure.SelectionModes.ELEMENT);
	if (structures.length == 0) return;

	var color = DuAEF.DuJS.Color.hexToRGB(ui_structuresEditColor.text);

	app.beginUndoGroup('Duik - ' + "Set structure color");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].setColor(color);
	}
	app.endUndoGroup();
}

function ui_structuresEditSetButton_clicked()
{
	ui_structuresEditSizeValidButton_clicked();
	ui_structuresEditColorValidButton_clicked();
}

function ui_structuresEditGetButton_clicked()
{
	//get from first element
	var structures = DuAEF.Duik.Structure.getStructures(undefined,DuAEF.Duik.Structure.SelectionModes.ELEMENT);

	if (structures[0].elements.length >= 0)
	{
		var effect = structures[0].elements[0].effect(DuAEF.Duik.PseudoEffectsMatchNames.STRUCTURE);
		var color = effect(4).value;
		var size = effect(2).value;
		settings.data.structureSize = size;
		settings.data.structureSizeHint = DuAEF.Duik.Sizes.CUSTOM;
		settings.data.structureColor = DuAEF.DuJS.Color.rgbToHex(color);
		structuresEditInit();
	}
}

function ui_structuresEditBakeButton_clicked()
{
	//get from first element
	var structures = DuAEF.Duik.Structure.getStructures(undefined,DuAEF.Duik.Structure.SelectionModes.ELEMENT);

	app.beginUndoGroup('Duik - ' + "Bake structures appearance");
	for (var i = 0 ; i < structures.length ; i++)
	{
		structures[i].bakeAppearence();
	}
	app.endUndoGroup();
}

//========== UI =============
var ui_structuresEditGroup = DuAEF.DuScriptUI.addGroup(ui_riggingMainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup,'Edit structures');

DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup);

var ui_structuresEditForm = DuAEF.DuScriptUI.addForm(ui_structuresEditGroup);
DuAEF.DuScriptUI.setBackgroundColor(ui_structuresEditForm,DuAEF.DuJS.Color.Colors.VERY_DARK_GREY);
ui_structuresEditForm.alignment = ['fill','top'];
ui_structuresEditForm.alignChildren = ['center','top'];
//add a column for valid buttons
var ui_structuresEditValidButtons = ui_structuresEditForm.add('group');
ui_structuresEditValidButtons.alignment = ['right','top'];
ui_structuresEditValidButtons.orientation = 'column';
ui_structuresEditValidButtons.alignChildren = ['right','center'];
ui_structuresEditValidButtons.spacing = 2;

var ui_structuresEditSizeList = DuAEF.DuScriptUI.addFormField(ui_structuresEditForm,"Size",'dropdownlist',["Small","Medium","Large","Custom"],"Set the display size of the elements.");
var ui_structuresEditSizeValidButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditValidButtons,'',DuAEF.DuBinary.toFile(w18_check_m),"Set size",DuAEF.DuBinary.toFile(w18_check_g));
ui_structuresEditSizeValidButton.group.minimumSize.height = ui_structuresEditSizeValidButton.group.maximumSize.height = ui_structuresEditSizeList[1].preferredSize[1];

var ui_structuresEditSizeEdit = DuAEF.DuScriptUI.addNiceEditText(ui_structuresEditForm.buttons,'100');
ui_structuresEditSizeEdit.helpTip = "Set the display size of the elements.";
var ui_structuresEditSpacer = ui_structuresEditValidButtons.add('statictext',undefined,'');
ui_structuresEditSpacer.minimumSize.height = ui_structuresEditSpacer.maximumSize.height = ui_structuresEditSizeEdit.edit.preferredSize[1];
ui_structuresEditSpacer = ui_structuresEditForm.labels.add('statictext',undefined,'');
ui_structuresEditSpacer.minimumSize.height = ui_structuresEditSpacer.maximumSize.height = ui_structuresEditSizeEdit.edit.preferredSize[1];

var ui_structuresEditColor = DuAEF.DuScriptUI.addNiceEditText(ui_structuresEditForm.buttons,'EC1818');
var ui_structuresEditColorLabel = ui_structuresEditForm.labels.add('statictext',undefined,"Color #");
ui_structuresEditColor.helpTip = "Set the display color of the elements.";
ui_structuresEditColorLabel.helpTip = "Set the display color of the elements.";
ui_structuresEditColorLabel.minimumSize.height = ui_structuresEditColorLabel.maximumSize.height = ui_structuresEditColor.edit.preferredSize[1];
var ui_structuresEditColorValidButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditValidButtons,'',DuAEF.DuBinary.toFile(w18_check_m),"Set color",DuAEF.DuBinary.toFile(w18_check_g));
ui_structuresEditColorValidButton.group.minimumSize.height = ui_structuresEditColorValidButton.group.maximumSize.height = ui_structuresEditColor.edit.preferredSize[1];

var ui_structuresEditRandomColorButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditForm.buttons,"Random",DuAEF.DuBinary.toFile(w18_random_l),"Generates a random color",DuAEF.DuBinary.toFile(w18_random_r));

//DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup);

var ui_structuresEditGetSetGroup = DuAEF.DuScriptUI.addGroup(ui_structuresEditGroup);
ui_structuresEditGetSetGroup.alignment = ['fill','top'];
var ui_structuresEditGetButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGetSetGroup,'Get',DuAEF.DuBinary.toFile(w25_structureget_l),"Get size and color",DuAEF.DuBinary.toFile(w25_structureget_r));
var ui_structuresEditSetButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGetSetGroup,'Set',DuAEF.DuBinary.toFile(w25_check_g),"Set size and color",DuAEF.DuBinary.toFile(w25_check_r));

var ui_structuresEditBakeButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGroup,"Bake appearance",DuAEF.DuBinary.toFile(w25_oven_l),"Removes expressions and effect for controlling the appearance of the Structure.\nThis will improve performance a little bit.",DuAEF.DuBinary.toFile(w25_oven_r));
ui_structuresEditBakeButton.alignment = ['fill','top'];

DuAEF.DuScriptUI.addSeparator(ui_structuresEditGroup);

var ui_structuresEditBackButton = DuAEF.DuScriptUI.addImageButton(ui_structuresEditGroup,'Back',DuAEF.DuBinary.toFile(w25_back_m),"Back to structures",DuAEF.DuBinary.toFile(w25_back_r));

//============== INIT ========================
structuresEditInit();

//============== CONNECT EVENTS ===============

ui_structuresEditSizeList[1].onChange = ui_structuresEditSizeList_changed;
ui_structuresEditSizeEdit.onChange = ui_structuresEditSizeEdit_changed;
ui_structuresEditColor.onChange = ui_structuresEditColor_changed;
ui_structuresEditColorLabel.addEventListener("mousedown",ui_structuresEditColor_clicked,false);
ui_structuresEditRandomColorButton.onClick = ui_structuresEditRandomColorButton_clicked;

ui_structuresEditSizeValidButton.onClick = ui_structuresEditSizeValidButton_clicked;
ui_structuresEditColorValidButton.onClick = ui_structuresEditColorValidButton_clicked;

ui_structuresEditSetButton.onClick = ui_structuresEditSetButton_clicked;
ui_structuresEditGetButton.onClick = ui_structuresEditGetButton_clicked;

ui_structuresEditBakeButton.onClick = ui_structuresEditBakeButton_clicked;

ui_structuresEditBackButton.onClick = function() { setCurrentRiggingPanel(0);};
