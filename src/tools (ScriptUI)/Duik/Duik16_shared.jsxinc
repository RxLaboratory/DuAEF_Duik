var shared = {};

shared.addList = function()
{
	var props = DuAEF.DuAE.Comp.getSelectedProps();
	if (props.length == 0) return;

	app.beginUndoGroup('Duik | ' + "List");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0 ; i < props.length ; i++)
	{
		DuAEF.Duik.Automation.list(props[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);

	app.endUndoGroup();
}

shared.createController = function (type)
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Create controller");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	var ctrls = [];
	if (layers.length == 0) ctrls.push(DuAEF.Duik.Controller.create(comp,type));
	else
	{
		for (var  i = 0 ; i < layers.length ; i++)
		{
			var ctrl = DuAEF.Duik.Controller.create(comp,type,layers[i]);
			ctrls.push(ctrl.layer);
		}
	}

	DuAEF.DuAE.Comp.selectLayers(ctrls);

	app.endUndoGroup();
}

shared.createIK = function ()
{
	var layers = DuAEF.DuAE.Comp.unselectLayers();
	if (layers.length == 0) return;
	app.beginUndoGroup('Duik | ' + "IK");

	DuAEF.DuAE.Project.setProgressMode(true);

	var ctrl = DuAEF.Duik.Rigging.ik(layers,null,false,!settings.data.ik3Layer);
	if(ctrl.length > 1) ctrl = ctrl[1];
	else ctrl = ctrl[0];
	ctrl.layer.selected = true;

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();
}

shared.createBezierIK = function ()
{
	var layers = DuAEF.DuAE.Comp.unselectLayers();
	if (layers.length == 0) return;
	app.beginUndoGroup('Duik | ' + "IK");

	DuAEF.DuAE.Project.setProgressMode(true);

	var ctrl = DuAEF.Duik.Rigging.ik(layers,undefined,true);
	ctrl[1].layer.selected = true;

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();
}

shared.extractUsingMP = false;

shared.extractControllers = function ()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;
	var layers = comp.selectedLayers;
	if (layers.length == 0) return;
	var precomp = layers[0];

	var result = DuAEF.Duik.Animation.extractControllersFromComp(precomp,shared.extractUsingMP);
}

shared.checkForUpdate = function (version, showAlert)
{
	if (!DuAEF.DuAE.App.hasFilesAndNetworkAccess) return '';
	var reply = '';
	//socket
	conn = new Socket;
	// connect to rainboxprod.coop
	if (conn.open ('rainboxprod.net:80'))
	{
		// get current version
		var userAgent = 'User-Agent: Duik/' + version + ' (' + $.os + ')' + ' AE/' + DuAEF.DuAE.App.version;
		if (conn.writeln('GET /duik/version.txt  HTTP/1.0\n' + userAgent + '\nHost: rainboxprod.net\n'))
			reply = conn.read(10000);
		conn.close();
		// get version
		var rep = reply.lastIndexOf('version',reply.length);
		if(rep != -1)
		{
			newVersion = reply.slice(rep+8,reply.length+1);
			if (showAlert && version != newVersion) alert(tr("A new version of Duik is available,\ngo to http://rainboxprod.coop to download it"));
			return newVersion;
		}
	}
}
