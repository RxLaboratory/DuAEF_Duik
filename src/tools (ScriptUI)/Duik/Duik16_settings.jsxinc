//=========== EVENTS =============

function ui_settingsFileButton_clicked()
{
	var file = settings.file.saveDlg("Where do you want to store the settings?","Json:*.json");
	if (file == null) return;

	settings.file = file;
	if (settings.file.exists) settings.load();
	else settings.save();
	app.settings.saveSetting("Duik","settingsFile",file.absoluteURI);
}

function ui_expertModeSelector_changed()
{
	settings.data.expert = ui_expertModeSelector.index == 1;
	settings.save();
}

function ui_devModeSelector_changed()
{
	settings.data.debug = ui_devModeSelector.index == 1;
	DuAEF.debug = settings.data.debug;
	settings.save();
}

//============ UI ===============

var ui_settingsGroup = DuAEF.DuScriptUI.addGroup(ui_mainGroup,'column');
if (!settings.data.expert) DuAEF.DuScriptUI.addSeparator(ui_settingsGroup,"Settings");
var ui_settingsFileButton = DuAEF.DuScriptUI.addImageButton(ui_settingsGroup,"Settings file...",DuAEF.DuBinary.toFile(w32_settingsfile_l),"Set the settings file path.",DuAEF.DuBinary.toFile(w32_settingsfile_r));

var ui_uiSettingsGroup = DuAEF.DuScriptUI.addGroup(ui_settingsGroup,'column');
ui_uiSettingsGroup.alignment = ['fill','top'];

var ui_settingsLanguageGroup = DuAEF.DuScriptUI.addGroup(ui_uiSettingsGroup);
var ui_settingsLanguageLabel = ui_settingsLanguageGroup.add('image',undefined,DuAEF.DuBinary.toFile(w25_language_m));
var ui_settingsLanguageEdit = ui_settingsLanguageGroup.add('dropdownlist',undefined,["English","Fran√ßais"]);
ui_settingsLanguageEdit.alignment = ['fill','center'];
ui_settingsLanguageEdit.selection = 0;
ui_settingsLanguageEdit.enabled = false;

var ui_expertModeSelector = DuAEF.DuScriptUI.addSelector(ui_uiSettingsGroup);
ui_expertModeSelector.addButton("Standard mode",DuAEF.DuBinary.toFile(w25_cofee_l),"Change the mode to expert for a smaller UI.",DuAEF.DuBinary.toFile(w25_cofee_r));
ui_expertModeSelector.addButton("Expert mode",DuAEF.DuBinary.toFile(w25_beer_l),"Change the mode to expert for a smaller UI.",DuAEF.DuBinary.toFile(w25_beer_r));

var ui_devModeSelector = DuAEF.DuScriptUI.addSelector(ui_uiSettingsGroup);
ui_devModeSelector.addButton("Normal mode",DuAEF.DuBinary.toFile(w25_code_l),"This is safe.",DuAEF.DuBinary.toFile(w25_code_r));
ui_devModeSelector.addButton("Dev & Debug mode",DuAEF.DuBinary.toFile(w25_code_l),"Use at your own risk!",DuAEF.DuBinary.toFile(w25_code_r));

var ui_settingsApplyButton = DuAEF.DuScriptUI.addImageButton(ui_uiSettingsGroup,"Apply changes",DuAEF.DuBinary.toFile(w25_check_g),"Reloads Duik to apply settings changes.",DuAEF.DuBinary.toFile(w25_check_r));
ui_settingsApplyButton.onClick = function () { ui_palette.refreshUI( thisScriptFile ); };

//========== INIT ==============
if (settings.data.expert) ui_expertModeSelector.setCurrentIndex(1);
else ui_expertModeSelector.setCurrentIndex(0);

if (settings.data.debug) ui_devModeSelector.setCurrentIndex(1);
else ui_devModeSelector.setCurrentIndex(0);

//========== CONNECT EVENTS ========

ui_settingsFileButton.onClick = ui_settingsFileButton_clicked;
ui_expertModeSelector.onChange = ui_expertModeSelector_changed;
ui_devModeSelector.onChange = ui_devModeSelector_changed;
