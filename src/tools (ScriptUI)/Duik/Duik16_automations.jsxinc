
function setCurrentAutomationPanel(panel)
{
	if (panel == undefined) panel = 0;

	ui_automationsBaseGroup.visible = panel == 0;
	ui_wiggleOptionsGroup.visible = panel == 1;
	ui_randomOptionsGroup.visible = panel == 2;
	ui_walkCycleOptionsGroup.visible = panel == 3;
}

function initAutomationsUI()
{
	setCurrentAutomationPanel(0);
}

function randomCheckSelection()
{
	if (!ui_randomLayerTimesButton.checked && !ui_randomLayerIndicesButton.checked && !ui_randomLayerInButton.checked && !ui_randomLayerOutButton.checked)
	{
		ui_randomLayerTimesButton.setChecked(true);
		ui_randomKeyValuesButton.setChecked(true);
	}
	if (!ui_randomKeyTimesButton.checked && !ui_randomKeyValuesButton.checked)
	{
		ui_randomKeyValuesButton.setChecked(true);
	}
}

//=========== EVENTS ============
function ui_listButton_clicked()
{
	shared.addList();
}

function ui_wiggleButton_clicked()
{
	var props = DuAEF.DuAE.Comp.getSelectedProps();
	if (props.length == 0) return;

	app.beginUndoGroup('Duik | ' + "Wiggle");

	var effect = null;

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0 ; i < props.length ; i++)
	{
		if (ui_wiggleIndividualSelector.index == 1) DuAEF.Duik.Automation.wiggle(props[i],ui_wiggleSeparateSelector.index == 1);
		else effect = DuAEF.Duik.Automation.wiggle(props[i],ui_wiggleSeparateSelector.index == 1,effect);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);


	app.endUndoGroup();
}

function ui_swingButton_clicked()
{
	var props = DuAEF.DuAE.Comp.getSelectedProps();
	if (props.length == 0) return;

	app.beginUndoGroup('Duik | ' + "Swing");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0 ; i < props.length ; i++)
	{
		DuAEF.Duik.Automation.swing(props[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);

	app.endUndoGroup();
}

function ui_wheelButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Wheel");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0; i<layers.length ; i++)
	{
		DuAEF.Duik.Automation.wheel(layers[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);

	app.endUndoGroup();
}

function ui_randomSelector_changed()
{
	var index = ui_randomSelector.index;
	ui_randomLayersGroup.visible = index == 1;
	ui_randomKeysGroup.visible = index == 2;
}

function ui_randomLayerTimesButton_clicked()
{
	randomCheckSelection();
}

function ui_randomKeyTimesButton_clicked()
{
	randomCheckSelection();
}

function ui_randomValidButton_clicked()
{
	var fromCurrentVal = ui_randomOffsetSelector.index == 0;
	var xMin = parseFloat(ui_randomXMinSlider.text);
	var xMax = parseFloat(ui_randomXMaxSlider.text);
	var yMin = parseFloat(ui_randomYMinSlider.text);
	var yMax = parseFloat(ui_randomYMaxSlider.text);
	var zMin = parseFloat(ui_randomZMinSlider.text);
	var zMax = parseFloat(ui_randomZMaxSlider.text);

	if (ui_randomSelector.index == 0)
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Randomize selected properties");

		DuAEF.Duik.Automation.Randomize.properties(props,fromCurrentVal,xMin,xMax,yMin,yMax,zMin,zMax);

		app.endUndoGroup();
	}
	if (ui_randomSelector.index == 1)
	{
		if (ui_randomLayerTimesButton.checked)
		{
			var comp = DuAEF.DuAE.Project.getActiveComp();
			if (!comp) return;
			var layers = comp.selectedLayers;

			app.beginUndoGroup('Duik | ' + "Randomize layer times");

			DuAEF.Duik.Automation.Randomize.startTimes(layers,fromCurrentVal,xMin,xMax);

			app.endUndoGroup();
		}
		if (ui_randomLayerIndicesButton.checked)
		{
			var comp = DuAEF.DuAE.Project.getActiveComp();
			if (!comp) return;
			var layers = comp.selectedLayers;

			app.beginUndoGroup('Duik | ' + "Randomize layer indices");

			DuAEF.Duik.Automation.Randomize.indices(layers,fromCurrentVal,xMin,xMax);

			app.endUndoGroup();
		}
		if (ui_randomLayerInButton.checked)
		{
			var comp = DuAEF.DuAE.Project.getActiveComp();
			if (!comp) return;
			var layers = comp.selectedLayers;

			app.beginUndoGroup('Duik | ' + "Randomize layer in points");

			DuAEF.Duik.Automation.Randomize.inPoints(layers,fromCurrentVal,xMin,xMax);

			app.endUndoGroup();
		}
		if (ui_randomLayerOutButton.checked)
		{
			var comp = DuAEF.DuAE.Project.getActiveComp();
			if (!comp) return;
			var layers = comp.selectedLayers;

			app.beginUndoGroup('Duik | ' + "Randomize layer out points");

			DuAEF.Duik.Automation.Randomize.outPoints(layers,fromCurrentVal,xMin,xMax);

			app.endUndoGroup();
		}
	}
	else
	{
		if (ui_randomKeyTimesButton.checked)
		{
			var props = DuAEF.DuAE.Comp.getSelectedProps();
			if (props.length == 0) return;

			app.beginUndoGroup('Duik | ' + "Randomize selected key times");

			DuAEF.Duik.Automation.Randomize.selectedKeyTimes(props,fromCurrentVal,xMin,xMax);

			app.endUndoGroup();
		}
		if (ui_randomKeyValuesButton.checked)
		{
			var props = DuAEF.DuAE.Comp.getSelectedProps();
			if (props.length == 0) return;

			app.beginUndoGroup('Duik | ' + "Randomize selected key values");

			DuAEF.Duik.Automation.Randomize.selectedKeys(props,fromCurrentVal,xMin,xMax,yMin,yMax,zMin,zMax);

			app.endUndoGroup();
		}
	}
}

function ui_effectorButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Effector");

	var effector = {};

	//Check if there already is an effector in the selection
	effector.effectorLayer = DuAEF.Duik.getLayer(DuAEF.Duik.LayerTypes.EFFECTOR,true);

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	if (layers.length == 0) return;

	var it = new Iterator(layers);
	it.do(function (layer)
	{
		effector.effect = null;
		for ( var j = 0 ; j < layer.props.length ; j++)
		{
			effector = DuAEF.Duik.Automation.effector(layer.props[j],effector.effect,effector.effectorLayer);
		}
	});

	effector.effectorLayer.selected = true;

	app.endUndoGroup();
}

function ui_springButton_clicked()
{
	var props = DuAEF.DuAE.Comp.getSelectedProps();
	if (props.length == 0) return;

	app.beginUndoGroup('Duik | ' + "Spring");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0 ; i < props.length ; i++)
	{
		DuAEF.Duik.Automation.spring(props[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);


	app.endUndoGroup();
}

function ui_blinkButton_clicked()
{
	var props = DuAEF.DuAE.Comp.getSelectedProps();
	if (props.length == 0) return;

	app.beginUndoGroup('Duik | ' + "Blink");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0 ; i < props.length ; i++)
	{
		DuAEF.Duik.Automation.blink(props[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);


	app.endUndoGroup();
}

function ui_moveAwayButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Move Away");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0; i<layers.length ; i++)
	{
		DuAEF.Duik.Automation.moveAway(layers[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);

	app.endUndoGroup();
}

function ui_paintRigButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Paint Rig");

	var layers = DuAEF.DuAE.Comp.unselectLayers();
	for (var i = 0; i<layers.length ; i++)
	{
		DuAEF.Duik.Automation.paintRig(layers[i]);
	}
	DuAEF.DuAE.Comp.selectLayers(layers);

	app.endUndoGroup();
}

function ui_walkOptionsButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	app.beginUndoGroup('Duik | ' + "Load layers for walk cycle.");

	var ctrls = comp.selectedLayers;
	var selectedOnly = true;
	if(ctrls.length == 0)
	{
		ctrls = comp.layers;
		selectedOnly = false;
	}

	ui_walkHeadSelector.setCurrentIndex(0);
	ui_walkNeckSelector.setCurrentIndex(0);
	ui_walkBodySelector.setCurrentIndex(0);
	ui_walkHipsSelector.setCurrentIndex(0);
	ui_walkRHandSelector.setCurrentIndex(0);
	ui_walkLHandSelector.setCurrentIndex(0);
	ui_walkRFootSelector.setCurrentIndex(0);
	ui_walkLFootSelector.setCurrentIndex(0);
	ui_walkHeadSelector.selectedOnly = selectedOnly;
	ui_walkNeckSelector.selectedOnly = selectedOnly;
	ui_walkBodySelector.selectedOnly = selectedOnly;
	ui_walkHipsSelector.selectedOnly = selectedOnly;
	ui_walkRHandSelector.selectedOnly = selectedOnly;
	ui_walkLHandSelector.selectedOnly = selectedOnly;
	ui_walkRFootSelector.selectedOnly = selectedOnly;
	ui_walkLFootSelector.selectedOnly = selectedOnly;
	ui_walkHeadSelector.refresh();
	ui_walkNeckSelector.refresh();
	ui_walkBodySelector.refresh();
	ui_walkHipsSelector.refresh();
	ui_walkRHandSelector.refresh();
	ui_walkLHandSelector.refresh();
	ui_walkRFootSelector.refresh();
	ui_walkLFootSelector.refresh();

	//side
	DuAEF.Duik.Autorig.detectCharacterSide(ctrls);

	//populate selectors
	var it = new Iterator(ctrls);
	it.do(function(layer)
	{
		var params = DuAEF.Duik.getDuikMarkerParameters(layer);
		if(!params)return;
		var type = params[DuAEF.Duik.MarkerParameters.CONTROLLER_TYPE];
		if (type == DuAEF.Duik.Controller.Types.HEAD) ui_walkHeadSelector.setCurrentIndex(layer.index);
		else if (type == DuAEF.Duik.Controller.Types.SHOULDERS) ui_walkNeckSelector.setCurrentIndex(layer.index);
		else if (type == DuAEF.Duik.Controller.Types.BODY) ui_walkBodySelector.setCurrentIndex(layer.index);
		else if (type == DuAEF.Duik.Controller.Types.HIPS) ui_walkHipsSelector.setCurrentIndex(layer.index);
		else if (type == DuAEF.Duik.Controller.Types.HAND)
		{
			if (DuAEF.Duik.Autorig.isRight(layer)) ui_walkRHandSelector.setCurrentIndex(layer.index);
			else ui_walkLHandSelector.setCurrentIndex(layer.index);
		}
		else if (type == DuAEF.Duik.Controller.Types.FOOT)
		{
			if (DuAEF.Duik.Autorig.isRight(layer)) ui_walkRFootSelector.setCurrentIndex(layer.index);
			else ui_walkLFootSelector.setCurrentIndex(layer.index);
		}

	});

	app.endUndoGroup();

	setCurrentAutomationPanel(3);
}

function ui_walkValidButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;

	var numLayers = comp.numLayers;

	var headCtrl = null;
	var neckCtrl = null;
	var bodyCtrl = null;
	var hipsCtrl = null;
	var rHandCtrl = null;
	var lHandCtrl = null;
	var rFootCtrl = null;
	var lFootCtrl = null;

	if (ui_walkHeadSelector.index > 0 && ui_walkHeadSelector.index < numLayers) headCtrl = comp.layer(ui_walkHeadSelector.index);
	if (ui_walkNeckSelector.index > 0 && ui_walkHeadSelector.index < numLayers) neckCtrl = comp.layer(ui_walkNeckSelector.index);
	if (ui_walkBodySelector.index > 0 && ui_walkHeadSelector.index < numLayers) bodyCtrl = comp.layer(ui_walkBodySelector.index);
	if (ui_walkHipsSelector.index > 0 && ui_walkHeadSelector.index < numLayers) hipsCtrl = comp.layer(ui_walkHipsSelector.index);
	if (ui_walkRHandSelector.index > 0 && ui_walkHeadSelector.index < numLayers) rHandCtrl = comp.layer(ui_walkRHandSelector.index);
	if (ui_walkLHandSelector.index > 0 && ui_walkHeadSelector.index < numLayers) lHandCtrl = comp.layer(ui_walkLHandSelector.index);
	if (ui_walkRFootSelector.index > 0 && ui_walkHeadSelector.index < numLayers) rFootCtrl = comp.layer(ui_walkRFootSelector.index);
	if (ui_walkLFootSelector.index > 0 && ui_walkHeadSelector.index < numLayers) lFootCtrl = comp.layer(ui_walkLFootSelector.index);

	app.beginUndoGroup('Duik | ' + "Walk cycle");

	DuAEF.DuAE.Project.setProgressMode(true);

	DuAEF.Duik.Automation.walk(headCtrl,neckCtrl,bodyCtrl,hipsCtrl,rHandCtrl,lHandCtrl,rFootCtrl,lFootCtrl,comp);

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();

	setCurrentAutomationPanel(0);

}

function ui_proceduralWalkButton_clicked()
{
	var ctrls = DuAEF.Duik.Controller.getControllers(undefined,true);

	app.beginUndoGroup('Duik | ' + "Walk cycle");

	DuAEF.DuAE.Project.setProgressMode(true);

	DuAEF.Duik.Automation.autoWalk(ctrls);

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();
}

//========== UI =============
var ui_automationsMainGroup = DuAEF.DuScriptUI.addGroup(ui_riggingMainGroup,'stack');

var ui_automationsBaseGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_automationsBaseGroup,'Automations');
var ui_automationsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsBaseGroup,'row');
ui_automationsGroup.alignment = ['fill','top'];
ui_automationsGroup.alignChildren = ['fill','top'];

var ui_automationsLeftGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
ui_automationsLeftGroup.alignChildren = ['fill','top'];
var ui_listButton = DuAEF.DuScriptUI.addImageButton(ui_automationsLeftGroup,"List",DuAEF.DuBinary.toFile(w25_list_l),"Add a list to the property",DuAEF.DuBinary.toFile(w25_list_r));
var ui_wiggleGroup = DuAEF.DuScriptUI.addGroup(ui_automationsLeftGroup);
var ui_wiggleButton = DuAEF.DuScriptUI.addImageButton(ui_wiggleGroup,"Wiggle",DuAEF.DuBinary.toFile(w25_wiggle_l),"Make the property wiggle",DuAEF.DuBinary.toFile(w25_wiggle_r));
var ui_wiggleOptionsButton = DuAEF.DuScriptUI.addImageButton(ui_wiggleGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Wiggle options",DuAEF.DuBinary.toFile(w14_plus_r));
ui_wiggleOptionsButton.group.alignment = ['right','center'];
var ui_swingButton = DuAEF.DuScriptUI.addImageButton(ui_automationsLeftGroup,"Swing",DuAEF.DuBinary.toFile(w25_swing_l),"Make the property swing between two values",DuAEF.DuBinary.toFile(w25_swing_r));
var ui_wheelButton = DuAEF.DuScriptUI.addImageButton(ui_automationsLeftGroup,"Wheel",DuAEF.DuBinary.toFile(w25_wheel_l),"Automate the rotation of a wheel",DuAEF.DuBinary.toFile(w25_wheel_r));
var ui_randomButton = DuAEF.DuScriptUI.addImageButton(ui_automationsLeftGroup,"Random...",DuAEF.DuBinary.toFile(w25_randomize_l),"Randomizes all types of values and properties",DuAEF.DuBinary.toFile(w25_randomize_r));
var ui_walkGroup = DuAEF.DuScriptUI.addGroup(ui_automationsLeftGroup);
var ui_proceduralWalkButton = DuAEF.DuScriptUI.addImageButton(ui_walkGroup,"Walk cycle",DuAEF.DuBinary.toFile(w25_proceduralwalk_l),"Procedural walk cycle tool",DuAEF.DuBinary.toFile(w25_proceduralwalk_r));
var ui_walkOptionsButton = DuAEF.DuScriptUI.addImageButton(ui_walkGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Walk cycle options",DuAEF.DuBinary.toFile(w14_plus_r));
ui_walkOptionsButton.group.alignment = ['right','center'];

var ui_automationsRightGroup = DuAEF.DuScriptUI.addGroup(ui_automationsGroup,'column');
ui_automationsRightGroup.alignChildren = ['fill','top'];
var ui_effectorButton = DuAEF.DuScriptUI.addImageButton(ui_automationsRightGroup,"Effector",DuAEF.DuBinary.toFile(w25_effector_l),"Use an effector to drive properties",DuAEF.DuBinary.toFile(w25_effector_r));
var ui_springButton = DuAEF.DuScriptUI.addImageButton(ui_automationsRightGroup,"Spring",DuAEF.DuBinary.toFile(w25_spring_l),"Automate springs and bounces of a property",DuAEF.DuBinary.toFile(w25_spring_r));
var ui_blinkButton = DuAEF.DuScriptUI.addImageButton(ui_automationsRightGroup,"Blink",DuAEF.DuBinary.toFile(w25_blink_l),"Make a property blink",DuAEF.DuBinary.toFile(w25_blink_r));
var ui_moveAwayButton = DuAEF.DuScriptUI.addImageButton(ui_automationsRightGroup,"Move away",DuAEF.DuBinary.toFile(w25_moveaway_l),"Move a layer away from its parent",DuAEF.DuBinary.toFile(w25_moveaway_r));
var ui_paintRigButton = DuAEF.DuScriptUI.addImageButton(ui_automationsRightGroup,"Paint rig",DuAEF.DuBinary.toFile(w25_paintrig_l),"Rig brush strokes",DuAEF.DuBinary.toFile(w25_paintrig_r));


//WALK CYCLE
var ui_walkCycleOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_walkCycleOptionsGroup,'Walk cycle');
ui_walkCycleOptionsGroup.add('statictext',undefined,"Head controller:")
var ui_walkHeadSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Neck & shoulders controller:")
var ui_walkNeckSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Body controller:")
var ui_walkBodySelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Hips controller:")
var ui_walkHipsSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Right hand controller:")
var ui_walkRHandSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Left hand controller:")
var ui_walkLHandSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Right foot controller:")
var ui_walkRFootSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
ui_walkCycleOptionsGroup.add('statictext',undefined,"Left foot controller:")
var ui_walkLFootSelector = DuAEF.DuScriptUI.addLayerSelector(ui_walkCycleOptionsGroup);
var ui_walkValidGroup = DuAEF.DuScriptUI.addGroup(ui_walkCycleOptionsGroup);
ui_walkValidGroup.alignment = ['fill','top'];
var ui_walkCancelButton = DuAEF.DuScriptUI.addImageButton(ui_walkValidGroup,'Cancel',DuAEF.DuBinary.toFile(w25_back_m),"Cancel",DuAEF.DuBinary.toFile(w25_back_r));
var ui_walkValidButton = DuAEF.DuScriptUI.addImageButton(ui_walkValidGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Walk cycle",DuAEF.DuBinary.toFile(w25_check_r));


//WIGGLE
var ui_wiggleOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_wiggleOptionsGroup,'Wiggle');
var ui_wiggleSeparateSelector = DuAEF.DuScriptUI.addSelector(ui_wiggleOptionsGroup);
ui_wiggleSeparateSelector.addButton("Collapse dimensions",DuAEF.DuBinary.toFile(w32_collapsedimensions_l),"Control all dimensions together",DuAEF.DuBinary.toFile(w32_collapsedimensions_r));
ui_wiggleSeparateSelector.addButton("Separate dimensions",DuAEF.DuBinary.toFile(w32_separatedimensions_l),"Separate the dimension controls of the wiggle",DuAEF.DuBinary.toFile(w32_separatedimensions_r));
ui_wiggleSeparateSelector.setCurrentIndex(0);
var ui_wiggleIndividualSelector = DuAEF.DuScriptUI.addSelector(ui_wiggleOptionsGroup);
ui_wiggleIndividualSelector.addButton("Unique control",DuAEF.DuBinary.toFile(w32_batchcontrol_l),"Add one control for all properties",DuAEF.DuBinary.toFile(w32_batchcontrol_r));
ui_wiggleIndividualSelector.addButton("Individual controls",DuAEF.DuBinary.toFile(w32_individualcontrol_l),"Add one control for each property",DuAEF.DuBinary.toFile(w32_individualcontrol_r));
ui_wiggleIndividualSelector.setCurrentIndex(0);
var ui_wiggleValidGroup = DuAEF.DuScriptUI.addGroup(ui_wiggleOptionsGroup);
ui_wiggleValidGroup.alignment = ['fill','top'];
var ui_wiggleCancelButton = DuAEF.DuScriptUI.addImageButton(ui_wiggleValidGroup,'Back',DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
var ui_wiggleValidButton = DuAEF.DuScriptUI.addImageButton(ui_wiggleValidGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create wiggle",DuAEF.DuBinary.toFile(w25_check_r));

//Random
var ui_randomOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_automationsMainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_randomOptionsGroup,'Random');
var ui_randomSelector = DuAEF.DuScriptUI.addSelector(ui_randomOptionsGroup);
ui_randomSelector.addButton("Current values",DuAEF.DuBinary.toFile(w32_randomize_l),"Randomizes the selected values (adding a keyframe if necessary)",DuAEF.DuBinary.toFile(w32_randomize_r));
ui_randomSelector.addButton("Layers",DuAEF.DuBinary.toFile(w32_aelayers_l),"Randomizes layer properties",DuAEF.DuBinary.toFile(w32_aelayers_r));
ui_randomSelector.addButton("Keyframes",DuAEF.DuBinary.toFile(w32_klin_l),"Randomizes keyframe properties",DuAEF.DuBinary.toFile(w32_klin_l));

var ui_randomSelectionGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup,'stack');
var ui_randomLayersGroup = DuAEF.DuScriptUI.addGroup(ui_randomSelectionGroup,'row');
ui_randomLayersGroup.alignment = ['center','top'];
var ui_randomLayersLeftGroup = DuAEF.DuScriptUI.addGroup(ui_randomLayersGroup,'column');
ui_randomLayersLeftGroup.alignChildren = ['left','top'];
var ui_randomLayersRightGroup = DuAEF.DuScriptUI.addGroup(ui_randomLayersGroup,'column');
ui_randomLayersRightGroup.alignChildren = ['left','top'];
var ui_randomLayerTimesButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomLayersLeftGroup,"Times",DuAEF.DuBinary.toFile(w18_randomlayerstarttime_l),"Randomizes the start times of the layers (moving them in time)",DuAEF.DuBinary.toFile(w18_randomlayerstarttime_r));
var ui_randomLayerIndicesButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomLayersRightGroup,"Indices",DuAEF.DuBinary.toFile(w18_randomlayerindex_l),"Randomizes the indices of the layers",DuAEF.DuBinary.toFile(w18_randomlayerindex_r));
var ui_randomLayerInButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomLayersLeftGroup,"In points",DuAEF.DuBinary.toFile(w18_randomlayerin_l),"Randomizes the in points of the layers",DuAEF.DuBinary.toFile(w18_randomlayerin_r));
var ui_randomLayerOutButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomLayersRightGroup,"Out points",DuAEF.DuBinary.toFile(w18_randomlayerout_l),"Randomizes the out points of the layers",DuAEF.DuBinary.toFile(w18_randomlayerout_r));

var ui_randomKeysGroup = DuAEF.DuScriptUI.addGroup(ui_randomSelectionGroup,'row');
ui_randomKeysGroup.alignment = ['center','top'];
var ui_randomKeyTimesButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomKeysGroup,"Times",DuAEF.DuBinary.toFile(w18_randomkeytime_l),"Randomizes the times of the keyframes (moving them in time)",DuAEF.DuBinary.toFile(w18_randomkeytime_r));
var ui_randomKeyValuesButton = DuAEF.DuScriptUI.addImageCheckBox(ui_randomKeysGroup,"Values",DuAEF.DuBinary.toFile(w18_randomize_l),"Randomizes the values of the keyframes",DuAEF.DuBinary.toFile(w18_randomize_r));

DuAEF.DuScriptUI.addSeparator(ui_randomOptionsGroup,"Min and max");
var ui_randomMinMaxGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup,'column');
var ui_randomXGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
ui_randomXGroup.add('statictext',undefined,"X ").alignment = ['fill','center'];
var ui_randomXMinSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomXGroup,'','','','0.0');
ui_randomXMinSlider.alignment = ['fill','top'];
var ui_randomXMaxSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomXGroup,'','','','0.0');
ui_randomXMaxSlider.alignment = ['fill','top'];
var ui_randomYGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
ui_randomYGroup.add('statictext',undefined,"Y ").alignment = ['fill','center'];
var ui_randomYMinSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomYGroup,'','','','0.0');
ui_randomYMinSlider.alignment = ['fill','top'];
var ui_randomYMaxSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomYGroup,'','','','0.0');
ui_randomYMaxSlider.alignment = ['fill','top'];
var ui_randomZGroup = DuAEF.DuScriptUI.addGroup(ui_randomMinMaxGroup);
ui_randomZGroup.add('statictext',undefined,"Z ").alignment = ['fill','center'];
var ui_randomZMinSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomZGroup,'','','','0.0');
ui_randomZMinSlider.alignment = ['fill','top'];
var ui_randomZMaxSlider = DuAEF.DuScriptUI.addNiceEditText(ui_randomZGroup,'','','','0.0');
ui_randomZMaxSlider.alignment = ['fill','top'];
var ui_randomOffsetSelector = DuAEF.DuScriptUI.addSelector(ui_randomMinMaxGroup);
ui_randomOffsetSelector.addButton("Offset current values",DuAEF.DuBinary.toFile(w25_moveaway_l),"Randomizes from the current values",DuAEF.DuBinary.toFile(w25_moveaway_r));
ui_randomOffsetSelector.addButton("Absolute values",DuAEF.DuBinary.toFile(w25_absolute_l),"Randomizes with absolute values",DuAEF.DuBinary.toFile(w25_absolute_r));
var ui_randomValidGroup = DuAEF.DuScriptUI.addGroup(ui_randomOptionsGroup);
var ui_randomCancelButton = DuAEF.DuScriptUI.addImageButton(ui_randomValidGroup,'Cancel',DuAEF.DuBinary.toFile(w25_cancel_m),"Back to automations",DuAEF.DuBinary.toFile(w25_cancel_r));
var ui_randomValidButton = DuAEF.DuScriptUI.addImageButton(ui_randomValidGroup,'Randomize',DuAEF.DuBinary.toFile(w25_check_g),"Randomize!",DuAEF.DuBinary.toFile(w25_check_r));


//=========== INIT ==============
setCurrentAutomationPanel(0);
ui_randomOffsetSelector.setCurrentIndex(0);
ui_randomSelector.setCurrentIndex(0);
ui_randomSelector_changed();

//====== CONNECT EVENTS ===========

ui_listButton.onClick = ui_listButton_clicked;

ui_wiggleButton.onClick = ui_wiggleValidButton.onClick = ui_wiggleButton_clicked;
ui_wiggleOptionsButton.onClick = function(){setCurrentAutomationPanel(1);};
ui_wiggleCancelButton.onClick = function(){setCurrentAutomationPanel(0);};

ui_swingButton.onClick = ui_swingButton_clicked;

ui_wheelButton.onClick = ui_wheelButton_clicked;

ui_randomButton.onClick = function(){setCurrentAutomationPanel(2);};
ui_randomSelector.onChange = ui_randomSelector_changed;
ui_randomLayerTimesButton.onClick = ui_randomLayerIndicesButton.onClick = ui_randomLayerInButton.onClick = ui_randomLayerOutButton.onClick = ui_randomLayerTimesButton_clicked;
ui_randomKeyTimesButton.onClick = ui_randomKeyValuesButton.onClick = ui_randomKeyTimesButton_clicked;
ui_randomCancelButton.onClick = function(){setCurrentAutomationPanel(0);};
ui_randomValidButton.onClick = ui_randomValidButton_clicked;

ui_effectorButton.onClick = ui_effectorButton_clicked;

ui_springButton.onClick = ui_springButton_clicked;

ui_blinkButton.onClick = ui_blinkButton_clicked;

ui_moveAwayButton.onClick = ui_moveAwayButton_clicked;

ui_paintRigButton.onClick = ui_paintRigButton_clicked;

ui_proceduralWalkButton.onClick = ui_proceduralWalkButton_clicked;
ui_walkCancelButton.onClick = function () {setCurrentAutomationPanel(0);};
ui_walkValidButton.onClick = ui_walkValidButton_clicked;
ui_walkOptionsButton.onClick = ui_walkOptionsButton_clicked;
