function ui_buildExport(ui_exportTab)
{
    function setCurrentIOPanel(panel)
	{
		if (panel == undefined) panel = 1;

		ui_exportGroup.visible = panel == 1;

		ui_auditionGroup.visible = panel == 3;
	}

    //=========== EVENTS =============

    
	function ui_exportAnimButton_clicked()
	{
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		if (layers.length == 0) return;
		var comp = layers[0].containingComp;

		//Asks for a save file
		var saveFile = DuAEF.DuJS.Fs.saveFileDialog("Where do you want to export the animation?", "DuAEF JSON: *.duaef;*.json", "duaef");
		if (!saveFile) return;

		//wether to store only selected keys if there are any
		var selected = DuAEF.DuAE.Layer.haveSelectedKeys(layers);
		//start time of the animation to store
		var startTime = 86339;
		//end time of the animation to store
		var endTime = comp.workAreaDuration + comp.workAreaStart;

		// If there are selected keys, look for the time of the first one
		if (selected)
		{
			var testTime = DuAEF.DuAE.Layer.firstKeyFrameTime(layers,true);
			if (testTime < startTime) startTime = testTime;
		}
		//or the work area
		else
		{
			startTime = app.project.activeItem.workAreaStart;
		}

		DuAEF.Interchange.animation.exportAnimToJson(saveFile,layers,selected,[startTime,endTime]);
	}

	function ui_exportAuditionButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return null;

		//Asks for a save file
		var saveFile = DuAEF.DuJS.Fs.saveFileDialog("Where do you want to save the Audition session?", "Audition: *.sesx", "sesx");
		if (!saveFile) return;

		var audioActiveOnly = ui_auditionAudioActiveOnlyButton.checked;
		var sampling = parseInt(ui_auditionSamplingButton.selection.text);
		var bitrate = parseInt(ui_auditionBitrateButton.selection.text);
		var master = ui_auditionMasterButton.selection.text;
		var execute = ui_auditionExecuteButton.checked;
		var transcode = ui_auditionTranscodeButton.checked;

		if (master == '5.1') master = 'fivePointOne';

		DuAEF.Audition.exportComp(saveFile,comp,audioActiveOnly,sampling,bitrate,master,execute,transcode);
	}

	//============ UI ===============

    ui_exportTab.orientation = 'stack';
    var ui_exportGroup = DuAEF.DuScriptUI.addGroup(ui_exportTab,'column');
	var ui_exportAnimButton = DuAEF.DuScriptUI.addButton(ui_exportGroup,"Animation",DuAEF.DuBinary.toFile(w25_exportanim_l),"Export animation",DuAEF.DuBinary.toFile(w25_exportanim_r));
	ui_exportAnimButton.setHelp('Export Animation',exportHelp, exportLink);
	var ui_exportRigButton = DuAEF.DuScriptUI.addButton(ui_exportGroup,"Rig",DuAEF.DuBinary.toFile(w25_exportrig_l),"Export rig",DuAEF.DuBinary.toFile(w25_exportrig_r));
	ui_auditionButtonGroup = DuAEF.DuScriptUI.addGroup(ui_exportGroup);
	var ui_exportAuditionButton = DuAEF.DuScriptUI.addButton(ui_auditionButtonGroup,"Audition...",DuAEF.DuBinary.toFile(w25_audition_l),"Export to Audition",DuAEF.DuBinary.toFile(w25_audition_r));
	ui_exportAuditionButton.setHelp('Audition',exportHelp,exportLink);
	var ui_exportAuditionOptionsButton = DuAEF.DuScriptUI.addButton(ui_auditionButtonGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Audition export options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_exportAuditionOptionsButton.setHelp('Audition',exportHelp,exportLink);
	ui_exportAuditionOptionsButton.alignment = ['right','center'];
	ui_exportRigButton.enabled = false;

	
	//Audition
	var ui_auditionGroup = DuAEF.DuScriptUI.addGroup(ui_exportTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_auditionGroup,'Audition');
	var ui_auditionForm = DuAEF.DuScriptUI.addForm(ui_auditionGroup);
	var ui_auditionSamplingButton = ui_auditionForm.addField("Audio sampling rate:",'dropdownlist',['192000','176400','96000','88200','64000','48000','44100','32000','22050','16000','11025','8000','6000'],"Sets the sampling rate of the exported audio files.")[1];
	var ui_auditionBitrateButton = ui_auditionForm.addField("Audio bitrate:",'dropdownlist',['32','24','16'],"Sets the bitrate of the exported audio files.")[1];
	var ui_auditionMasterButton = ui_auditionForm.addField("Master:",'dropdownlist',['mono','stereo','5.1'],"Sets the channels of the master track.")[1];
	var ui_auditionAudioActiveOnlyButton = DuAEF.DuScriptUI.addCheckBox(ui_auditionGroup,"Audio active only",undefined,"Exports only the layers with active audio.",undefined);
	var ui_auditionTranscodeButton = DuAEF.DuScriptUI.addCheckBox(ui_auditionGroup,"Transcode and conform media",undefined,"Will transcode audio to ensure Audition compatibility.",undefined);
	var ui_auditionExecuteButton = DuAEF.DuScriptUI.addCheckBox(ui_auditionGroup,"Open session in Audtion",undefined,"Opens the session in Audition as soon as it is exported.",undefined);
	var ui_auditionValidGroup = DuAEF.DuScriptUI.addGroup(ui_auditionGroup);
	ui_auditionValidGroup.alignment = ['fill','top'];
	var ui_auditionCancelButton = DuAEF.DuScriptUI.addButton(ui_auditionValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_auditionValidButton = DuAEF.DuScriptUI.addButton(ui_auditionValidGroup,"Export",DuAEF.DuBinary.toFile(w25_check_g),"Exports a composition as an Audition session",DuAEF.DuBinary.toFile(w25_check_r));
	ui_auditionValidButton.setHelp('Audition',exportHelp,exportLink);

    //========== INIT =================
	ui_auditionSamplingButton.selection = 5;
	ui_auditionBitrateButton.selection = 0;
	ui_auditionMasterButton.selection = 1;
    setCurrentIOPanel();

    //========== CONNECT EVENTS ========

	ui_exportAnimButton.onClick = ui_exportAnimButton_clicked;

	ui_exportAuditionButton.onClick = ui_auditionValidButton.onClick = ui_exportAuditionButton_clicked;
	ui_auditionCancelButton.onClick = function(){setCurrentIOPanel(1);};
	ui_exportAuditionOptionsButton.onClick = function(){setCurrentIOPanel(3);};


}