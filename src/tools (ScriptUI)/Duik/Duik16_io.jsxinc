
function setCurrentIOPanel(panel)
{
	if (panel == undefined) panel = 0;

	ui_importGroup.visible = panel == 0;
	ui_exportGroup.visible = panel == 1;
	ui_storyboarderGroup.visible = panel == 2;
	ui_auditionGroup.visible = panel == 3;
	ui_importAnimationGroup.visible = panel == 4;

	if (panel == 0 || panel == 2 || panel == 4 || panel == 5)
	{
		ui_ioImportButton.setChecked(true);
		ui_ioExportButton.setChecked(false);
	}
	else
	{
		ui_ioImportButton.setChecked(false);
		ui_ioExportButton.setChecked(true);
	}
}

function initIOUI()
{
	setCurrentIOPanel(0);
}

function importAnims(anims, layers, whiteList)
{
	for (var i = 0, num  = anims.length; i < num; i++)
	{
		var layer = layers[i];
		if (layer) DuAEF.DuAE.Layer.setAnim(layer, anims[i], undefined, undefined, undefined, ui_keyframesSelector.index == 0, ui_importAnimationReplaceButton.checked, whiteList, ui_importAnimationOffsetSelector.index == 0);
	}
}

//=========== EVENTS =============

function ui_ioImportButton_clicked()
{
	setCurrentIOPanel(0);
}

function ui_ioExportButton_clicked()
{
	setCurrentIOPanel(1);
}

function ui_importAnimButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return;
	var layers = DuAEF.DuAE.Comp.getSelectedLayers();
	if (layers.length == 0) layers = comp.layers;
	if (layers.length == 0) return;

	//Ask for the file
	var openFile = File.openDialog("Please select the animation file.","JSON: *.duaef;*.json,All: *.*");
	if (!openFile) return;

	//white lists
	var whiteList;
	if (!ui_importAnimationKeysAllButton.checked)
	{
		whiteList = [];
		if (ui_importAnimationKeysPosButton.checked)
		{
			whiteList.push('ADBE Position');
			whiteList.push('ADBE Position_0');
			whiteList.push('ADBE Position_1');
			whiteList.push('ADBE Position_2');
		}
		if (ui_importAnimationKeysRotButton.checked)
		{
			whiteList.push('ADBE Orientation');
			whiteList.push('ADBE Rotate X');
			whiteList.push('ADBE Rotate Y');
			whiteList.push('ADBE Rotate Z');
		}
		if (ui_importAnimationKeysScaleButton.checked)
		{
			whiteList.push('ADBE Scale');
		}
		if (ui_importAnimationKeysOpacityButton.checked)
		{
			whiteList.push('ADBE Opacity');
		}
		if (ui_importAnimationKeysMaskButton.checked)
		{
			whiteList.push('ADBE Mask Shape');
			whiteList.push('ADBE Vector Shape');
		}
		if (ui_importAnimationKeysFXButton.checked)
		{
			whiteList.push('ADBE Effect Parade');
		}
	}

	app.beginUndoGroup('Duik | ' + "Import Animation");

	var data = DuAEF.Interchange.animation.loadAnimFromJson(openFile);
	var remaining = DuAEF.DuAE.Layer.setAnims(layers, data, undefined, undefined, undefined, ui_keyframesSelector.index == 0, ui_importAnimationReplaceButton.checked, whiteList, ui_importAnimationOffsetSelector.index == 0);

	if (remaining.length > 0)
	{
		var ui_importLayerPicker = DuAEF.DuScriptUI.createLayerPickerDialog("Missing layers");
		for (var i = 0, num = remaining.length; i < num; i++)
		{
			ui_importLayerPicker.addSelector(remaining[i]._index + ' | ' + remaining[i]._name);
			//try to preselect by name
			var ok = false;
			for (var j = 1, numLayers = comp.numLayers; j <= numLayers; j++)
			{
				var l = comp.layer(j);
				if (l.name == remaining[i]._name)
				{
					ui_importLayerPicker.layerPicker.selectors[i].setCurrentIndex(j);
					ok = true;
					break;
				}
			}
			if (!ok && remaining[i]._index > 0 && remaining[i]._index <= comp.numLayers) ui_importLayerPicker.layerPicker.selectors[i].setCurrentIndex(remaining[i]._index);
		}

		ui_importLayerPicker.onAccept = function () {importAnims(remaining, ui_importLayerPicker.getLayers(), whiteList); };

		DuAEF.DuScriptUI.showUI(ui_importLayerPicker);
	}

	app.endUndoGroup();
}

function ui_importAnimationKeysAllButton_clicked()
{
	var checked = ui_importAnimationKeysAllButton.checked;
	ui_importAnimationKeysPosButton.setChecked(checked);
	ui_importAnimationKeysRotButton.setChecked(checked);
	ui_importAnimationKeysScaleButton.setChecked(checked);
	ui_importAnimationKeysOpacityButton.setChecked(checked);
	ui_importAnimationKeysMaskButton.setChecked(checked);
	ui_importAnimationKeysFXButton.setChecked(checked);
}

function ui_importKritaButton_clicked()
{
	//select file
	var file = File.openDialog("Select the .csv Krita file.",'Krita CSV:*.csv,All files:*.*',false);
	if (!file) return;

	app.beginUndoGroup("Duik | Import Krita animation");

	DuAEF.Krita.importCSV(file);

	app.endUndoGroup();
}

function ui_importStoryboardOptionsButton_clicked()
{
	setCurrentIOPanel(2);
}

function ui_storyboarderValidButton_clicked()
{
	//select file
	var file = File.openDialog("Select the .storyboarder file.",'Storyboarder:*.storyboarder,JSON:*.json,All files:*.*',false);
	if (!file) return;

	app.beginUndoGroup("Duik | Import Storyboarder file");

	DuAEF.WUStoryboarder.import(file,ui_storyboarderTextSelector.index == 0,ui_storyboarderPrecompSelector.index == 0);

	app.endUndoGroup();
}

function ui_exportAnimButton_clicked()
{
	var layers = DuAEF.DuAE.Comp.getSelectedLayers();
	if (layers.length == 0) return;
	var comp = layers[0].containingComp;

	//Asks for a save file
	var saveFile = File.saveDialog(tr("Where do you want to export the animation?"),"DuAEF JSON: *.duaef;*.json");
	if (!saveFile) return;

	//wether to store only selected keys if there are any
	var selected = DuAEF.DuAE.Layer.haveSelectedKeys(layers);
	//start time of the animation to store
	var startTime = 86339;
	//end time of the animation to store
	var endTime = comp.workAreaDuration + comp.workAreaStart;

	// If there are selected keys, look for the time of the first one
	if (selected)
	{
		var testTime = DuAEF.DuAE.Layer.firstKeyFrameTime(layers,true);
		if (testTime < startTime) startTime = testTime;
	}
	//or the work area
	else
	{
		startTime = app.project.activeItem.workAreaStart;
	}

	DuAEF.Interchange.animation.exportAnimToJson(saveFile,layers,selected,[startTime,endTime]);
}

function ui_exportAuditionButton_clicked()
{
	var comp = DuAEF.DuAE.Project.getActiveComp();
	if (!comp) return null;

	var saveFile = File.saveDialog("Where do you want to save the Audition session?","Audition: *.sesx");
	if (!saveFile) return;

	var audioActiveOnly = ui_auditionAudioActiveOnlyButton.checked;
	var sampling = parseInt(ui_auditionSamplingButton.selection.text);
	var bitrate = parseInt(ui_auditionBitrateButton.selection.text);
	var master = ui_auditionMasterButton.selection.text;
	var execute = ui_auditionExecuteButton.checked;
	var transcode = ui_auditionTranscodeButton.checked;

	if (master == '5.1') master = 'fivePointOne';

	DuAEF.Audition.exportComp(saveFile,comp,audioActiveOnly,sampling,bitrate,master,execute,transcode);
}

//============ UI ===============

var ui_ioGroup = DuAEF.DuScriptUI.addGroup(ui_mainGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_ioGroup,"I/O Tools");

var ui_ioSelectTabs = DuAEF.DuScriptUI.addGroup(ui_ioGroup,'row');
ui_ioSelectTabs.alignment = ['fill','top'];
var ui_ioImportButton = DuAEF.DuScriptUI.addImageCheckBox(ui_ioSelectTabs,"Import",DuAEF.DuBinary.toFile(w25_import_l),"Import tools",DuAEF.DuBinary.toFile(w25_import_r));
ui_ioImportButton.setHelp('Audition',ioHelp,ioLink);
var ui_ioExportButton = DuAEF.DuScriptUI.addImageCheckBox(ui_ioSelectTabs,"Export",DuAEF.DuBinary.toFile(w25_exportfile_l),"Import tools",DuAEF.DuBinary.toFile(w25_exportfile_r));
ui_ioExportButton.setHelp('Audition',ioHelp,ioLink);

var ui_ioTabsGroup = DuAEF.DuScriptUI.addGroup(ui_ioGroup,'stack');

var ui_importGroup = DuAEF.DuScriptUI.addGroup(ui_ioTabsGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_importGroup,"Import");
var ui_importAnimButtonGroup = DuAEF.DuScriptUI.addGroup(ui_importGroup);
var ui_importAnimButton = DuAEF.DuScriptUI.addImageButton(ui_importAnimButtonGroup,"Animation",DuAEF.DuBinary.toFile(w25_importanim_l),"Import animation",DuAEF.DuBinary.toFile(w25_importanim_r));
var ui_importAnimOptionsButton = DuAEF.DuScriptUI.addImageButton(ui_importAnimButtonGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Animation import options",DuAEF.DuBinary.toFile(w14_plus_r));
ui_importAnimOptionsButton.alignment = ['right','center'];
var ui_importRigButton = DuAEF.DuScriptUI.addImageButton(ui_importGroup,"Rig",DuAEF.DuBinary.toFile(w25_importrig_l),"Import rig",DuAEF.DuBinary.toFile(w25_importrig_r));
var ui_importTVPClipButton = DuAEF.DuScriptUI.addImageButton(ui_importGroup,"TVP Clip",DuAEF.DuBinary.toFile(w25_tvpclip_l),"Import TVPaint clip",DuAEF.DuBinary.toFile(w25_tvpclip_r));
var ui_importKritaButton = DuAEF.DuScriptUI.addImageButton(ui_importGroup,"Krita Animation",DuAEF.DuBinary.toFile(w25_krita_l),"Import an animation previously exported as a CSV file from Krita.",DuAEF.DuBinary.toFile(w25_krita_r));
var ui_importStoryboardButtonGroup = DuAEF.DuScriptUI.addGroup(ui_importGroup);
var ui_importStoryboardButton = DuAEF.DuScriptUI.addImageButton(ui_importStoryboardButtonGroup,"Storyboarder",DuAEF.DuBinary.toFile(w25_storyboard_l),"Import Storyboarder",DuAEF.DuBinary.toFile(w25_storyboard_r));
var ui_importStoryboardOptionsButton = DuAEF.DuScriptUI.addImageButton(ui_importStoryboardButtonGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Storyboarder import options",DuAEF.DuBinary.toFile(w14_plus_r));
ui_importStoryboardOptionsButton.alignment = ['right','center'];

ui_importRigButton.enabled = false;
ui_importTVPClipButton.enabled = false;

var ui_exportGroup = DuAEF.DuScriptUI.addGroup(ui_ioTabsGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_importGroup,"Export");
var ui_exportAnimButton = DuAEF.DuScriptUI.addImageButton(ui_exportGroup,"Animation",DuAEF.DuBinary.toFile(w25_exportanim_l),"Export animation",DuAEF.DuBinary.toFile(w25_exportanim_r));
ui_exportAnimButton.setHelp('Export Animation',exportanimationHelp, exportanimationLink);
var ui_exportRigButton = DuAEF.DuScriptUI.addImageButton(ui_exportGroup,"Rig",DuAEF.DuBinary.toFile(w25_exportrig_l),"Export rig",DuAEF.DuBinary.toFile(w25_exportrig_r));
ui_auditionButtonGroup = DuAEF.DuScriptUI.addGroup(ui_exportGroup);
var ui_exportAuditionButton = DuAEF.DuScriptUI.addImageButton(ui_auditionButtonGroup,"Audition...",DuAEF.DuBinary.toFile(w25_audition_l),"Export to Audition",DuAEF.DuBinary.toFile(w25_audition_r));
ui_exportAuditionButton.setHelp('Audition',auditionHelp,auditionLink);
var ui_exportAuditionOptionsButton = DuAEF.DuScriptUI.addImageButton(ui_auditionButtonGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Audition export options",DuAEF.DuBinary.toFile(w14_plus_r));
ui_exportAuditionOptionsButton.setHelp('Audition',auditionHelp,auditionLink);
ui_exportAuditionOptionsButton.alignment = ['right','center'];
ui_exportRigButton.enabled = false;

//Import Animation
var ui_importAnimationGroup = DuAEF.DuScriptUI.addGroup(ui_ioTabsGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_importAnimationGroup,"Import animation");
var ui_keyframesSelector = DuAEF.DuScriptUI.addSelector(ui_importAnimationGroup);
ui_keyframesSelector.addButton("Only keyframes",DuAEF.DuBinary.toFile(w14_keyframesonly_l),"Imports only the keyframes.",DuAEF.DuBinary.toFile(w14_keyframesonly_r));
ui_keyframesSelector.addButton("All properties",DuAEF.DuBinary.toFile(w14_allproperties_l),"Sets values on all properties.",DuAEF.DuBinary.toFile(w14_allproperties_r));
ui_keyframesSelector.setCurrentIndex(0);
var ui_importAnimationKeysTypeGroup = DuAEF.DuScriptUI.addGroup(ui_importAnimationGroup,'row');
ui_importAnimationKeysTypeGroup.alignment = ['center','top'];
var ui_importAnimationKeysPosButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_pos_l),"Position",DuAEF.DuBinary.toFile(w18_pos_r));
var ui_importAnimationKeysRotButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_rotation_l),"Rotation",DuAEF.DuBinary.toFile(w18_rotation_r));
var ui_importAnimationKeysScaleButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_scale_l),"Scale",DuAEF.DuBinary.toFile(w18_scale_r));
var ui_importAnimationKeysOpacityButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_opacity_l),"Opacity",DuAEF.DuBinary.toFile(w18_opacity_r));
var ui_importAnimationKeysMaskButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_mask_l),"Masks",DuAEF.DuBinary.toFile(w18_mask_r));
var ui_importAnimationKeysFXButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_fx_l),"FX",DuAEF.DuBinary.toFile(w18_fx_r));
var ui_importAnimationKeysAllButton = DuAEF.DuScriptUI.addImageCheckBox( ui_importAnimationKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_allproperties_l),"All",DuAEF.DuBinary.toFile(w18_allproperties_r));
var ui_importAnimationOffsetSelector = DuAEF.DuScriptUI.addSelector(ui_importAnimationGroup);
ui_importAnimationOffsetSelector.addButton("Offset",DuAEF.DuBinary.toFile(w14_moveaway_l),"Offset current values",DuAEF.DuBinary.toFile(w14_moveaway_r));
ui_importAnimationOffsetSelector.addButton("Absolute",DuAEF.DuBinary.toFile(w14_absolute_l),"Replaces current values",DuAEF.DuBinary.toFile(w14_absolute_r));
var ui_importAnimationReplaceButton = DuAEF.DuScriptUI.addImageCheckBox(ui_importAnimationGroup,'Replace existing keyframes',undefined,"Replaces any existing keyframe on the properties before loading the new animation",undefined);
var ui_importAnimationValidGroup = DuAEF.DuScriptUI.addGroup(ui_importAnimationGroup);
ui_importAnimationValidGroup.alignment = ['fill','top'];
var ui_importAnimationCancelButton = DuAEF.DuScriptUI.addImageButton(ui_importAnimationValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
var ui_importAnimationValidButton = DuAEF.DuScriptUI.addImageButton(ui_importAnimationValidGroup,"Import",DuAEF.DuBinary.toFile(w25_check_g),"Imports an animation",DuAEF.DuBinary.toFile(w25_check_r));

//Storyboarder
var ui_storyboarderGroup = DuAEF.DuScriptUI.addGroup(ui_ioTabsGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_storyboarderGroup,'Storyboarder');
var ui_storyboarderTextSelector = DuAEF.DuScriptUI.addSelector(ui_storyboarderGroup);
ui_storyboarderTextSelector.addButton("Overlay text",DuAEF.DuBinary.toFile(w32_overlaytext_l),"Overlays the text information.",DuAEF.DuBinary.toFile(w32_overlaytext_r));
ui_storyboarderTextSelector.addButton("Text below",DuAEF.DuBinary.toFile(w32_textbelow_l),"Displays the text below the image.",DuAEF.DuBinary.toFile(w32_textbelow_r));
ui_storyboarderTextSelector.setCurrentIndex(1);
var ui_storyboarderPrecompSelector = DuAEF.DuScriptUI.addSelector(ui_storyboarderGroup);
ui_storyboarderPrecompSelector.addButton("Precompose shots",DuAEF.DuBinary.toFile(w32_precompshots_l),"Precomposes the shots.",DuAEF.DuBinary.toFile(w32_precompshots_r));
ui_storyboarderPrecompSelector.addButton("No precomp.",DuAEF.DuBinary.toFile(w32_noprecomp_l),"Does not precompose the shots.",DuAEF.DuBinary.toFile(w32_noprecomp_r));
ui_storyboarderPrecompSelector.setCurrentIndex(0);
var ui_storyboarderValidGroup = DuAEF.DuScriptUI.addGroup(ui_storyboarderGroup);
ui_storyboarderValidGroup.alignment = ['fill','top'];
var ui_storyboarderCancelButton = DuAEF.DuScriptUI.addImageButton(ui_storyboarderValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
var ui_storyboarderValidButton = DuAEF.DuScriptUI.addImageButton(ui_storyboarderValidGroup,"Import",DuAEF.DuBinary.toFile(w25_check_g),"Imports a storyboarder project",DuAEF.DuBinary.toFile(w25_check_r));

//Audition
var ui_auditionGroup = DuAEF.DuScriptUI.addGroup(ui_ioTabsGroup,'column');
if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_auditionGroup,'Audition');
var ui_auditionForm = DuAEF.DuScriptUI.addForm(ui_auditionGroup);
var ui_auditionSamplingButton = DuAEF.DuScriptUI.addFormField(ui_auditionForm,"Audio sampling rate:",'dropdownlist',['192000','176400','96000','88200','64000','48000','44100','32000','22050','16000','11025','8000','6000'],"Sets the sampling rate of the exported audio files.")[1];
var ui_auditionBitrateButton = DuAEF.DuScriptUI.addFormField(ui_auditionForm,"Audio bitrate:",'dropdownlist',['32','24','16'],"Sets the bitrate of the exported audio files.")[1];
var ui_auditionMasterButton = DuAEF.DuScriptUI.addFormField(ui_auditionForm,"Master:",'dropdownlist',['mono','stereo','5.1'],"Sets the channels of the master track.")[1];
var ui_auditionAudioActiveOnlyButton = DuAEF.DuScriptUI.addImageCheckBox(ui_auditionGroup,"Audio active only",undefined,"Exports only the layers with active audio.",undefined);
var ui_auditionTranscodeButton = DuAEF.DuScriptUI.addImageCheckBox(ui_auditionGroup,"Transcode and conform media",undefined,"Will transcode audio to ensure Audition compatibility.",undefined);
var ui_auditionExecuteButton = DuAEF.DuScriptUI.addImageCheckBox(ui_auditionGroup,"Open session in Audtion",undefined,"Opens the session in Audition as soon as it is exported.",undefined);
var ui_auditionValidGroup = DuAEF.DuScriptUI.addGroup(ui_auditionGroup);
ui_storyboarderValidGroup.alignment = ['fill','top'];
var ui_auditionCancelButton = DuAEF.DuScriptUI.addImageButton(ui_auditionValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
var ui_auditionValidButton = DuAEF.DuScriptUI.addImageButton(ui_auditionValidGroup,"Export",DuAEF.DuBinary.toFile(w25_check_g),"Exports a composition as an Audition session",DuAEF.DuBinary.toFile(w25_check_r));
ui_auditionValidButton.setHelp('Audition',auditionHelp,auditionLink);


//========== INIT =================
ui_auditionSamplingButton.selection = 5;
ui_auditionBitrateButton.selection = 0;
ui_auditionMasterButton.selection = 1;
ui_keyframesSelector.setCurrentIndex(0);
ui_importAnimationOffsetSelector.setCurrentIndex(1);
ui_importAnimationKeysAllButton.setChecked(true);
ui_importAnimationKeysAllButton_clicked();
setCurrentIOPanel(0);


//========== CONNECT EVENTS ========
ui_ioImportButton.onClick = ui_ioImportButton_clicked;
ui_ioExportButton.onClick = ui_ioExportButton_clicked;

ui_importAnimButton.onClick = ui_importAnimationValidButton.onClick = ui_importAnimButton_clicked;
ui_importAnimOptionsButton.onClick = function(){setCurrentIOPanel(4);};
ui_importAnimationCancelButton.onClick = function(){setCurrentIOPanel(0);};
ui_importAnimationKeysAllButton.onClick = ui_importAnimationKeysAllButton_clicked;

ui_importKritaButton.onClick = ui_importKritaButton_clicked;

ui_importStoryboardOptionsButton.onClick = ui_importStoryboardOptionsButton_clicked;
ui_storyboarderCancelButton.onClick = function(){setCurrentIOPanel(0);};
ui_storyboarderValidButton.onClick = ui_importStoryboardButton.onClick = ui_storyboarderValidButton_clicked;

ui_exportAnimButton.onClick = ui_exportAnimButton_clicked;

ui_exportAuditionButton.onClick = ui_auditionValidButton.onClick = ui_exportAuditionButton_clicked;
ui_auditionCancelButton.onClick = function(){setCurrentIOPanel(1);};
ui_exportAuditionOptionsButton.onClick = function(){setCurrentIOPanel(3);};
