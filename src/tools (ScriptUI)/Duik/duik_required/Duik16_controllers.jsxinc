function ui_buildControllers(ui_controllersMainGroup)
{
	debugLog.startTimer("Loading controllers.");

	//========== FUNCTIONS ============

	function setCurrentControllersPanel(panel)
	{
		if (typeof panel === 'undefined') panel = 0;

		ui_controllersGroup.visible = panel == 0;
		ui_extractControllersCtrlOptionsGroup.visible = panel == 1;
		ui_controllersEditGroup.visible = panel == 2;
		ui_pseudoEffectsOptionsGroup.visible = panel == 3;
	}

	function createCtrlrButton(group,icon,iconOver,type)
	{
		var btn = DuAEF.DuScriptUI.addButton(group,'',DuAEF.DuBinary.toFile(icon),'',DuAEF.DuBinary.toFile(iconOver));
		btn.onClick = function () {shared.createController(type);};
		btn.onAltClick = function () {shared.createControllerAlt(type);};
		btn.onCtrlClick = function () {shared.createController(type, true);};
		btn.onCtrlAltClick = function () {shared.createControllerAlt(type, true);};
		return btn;
	}

	//=========== EVENTS ===============

	function ui_controllersSelectButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var ctrls = DuAEF.Duik.Controller.getControllers(comp,false);
		if (ctrls.length == 0) return;

		app.beginUndoGroup('Duik - ' + "Select controllers");
		DuAEF.DuAE.Comp.unselectLayers(comp);
		for (var i = 0 ; i < ctrls.length ; i++)
		{
			ctrls[i].layer.selected = true;
		}
		app.endUndoGroup();
	}

	function ui_controllersShowButton_clicked(invert)
	{
		if (typeof invert === 'undefined') invert = false;
		var ctrls = DuAEF.Duik.Controller.getControllers();

		if (ctrls.length == 0) return;

		app.beginUndoGroup('Duik - ' + "Show/hide controllers");
		var visible = !ctrls[0].layer.enabled;
		for (var i = 0 ; i < ctrls.length ; i++)
		{
			if (invert) ctrls[i].layer.enabled = !ctrls[i].layer.enabled;
			else ctrls[i].layer.enabled = visible;
		}
		app.endUndoGroup();
	}

	function ui_extractControllersMPCtrlSelector_changed()
	{
		shared.extractUsingMP = ui_extractControllersMPCtrlSelector.index == 1;
	}

	function ui_extractControllersCtrlOptionsButton_clicked()
	{
		if (shared.extractUsingMP) ui_extractControllersMPCtrlSelector.setCurrentIndex(1);
		else ui_extractControllersMPCtrlSelector.setCurrentIndex(0);
		setCurrentControllersPanel(1);
	}

	function ui_tagControllersButton_clicked()
	{
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		app.beginUndoGroup('Duik | ' + "Tag controllers");
		for (var i = 0, num = layers.length; i < num; i++)
		{
			DuAEF.Duik.setDuikMarker(layers[i], "Controller", DuAEF.Duik.LayerTypes.CONTROLLER);
		}
		app.endUndoGroup();
	}

	function ui_pseudoEffectsValidButton_clicked()
	{
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		var pseudoEffect;
		if (ui_pseudoEffectsSelector.index == 0) pseudoEffect = DuAEF.Duik.PseudoEffects.EYES;
		else if (ui_pseudoEffectsSelector.index == 1) pseudoEffect = DuAEF.Duik.PseudoEffects.FINGERS;
		else if (ui_pseudoEffectsSelector.index == 2) pseudoEffect = DuAEF.Duik.PseudoEffects.HAND;
		else if (ui_pseudoEffectsSelector.index == 3) pseudoEffect = DuAEF.Duik.PseudoEffects.HEAD;
		else return;

		app.beginUndoGroup('Duik - ' + "Add Pseudo-Effect");

		for (var i = 0, num = layers.length; i < num; i++)
		{
			//add effect
			DuAEF.DuAE.Layer.applyPreset(layers[i],pseudoEffect);
		}
		app.endUndoGroup();
	}
	

	//================= UI ========================

	ui_controllersMainGroup.orientation = 'stack';

	var ui_controllersGroup = DuAEF.DuScriptUI.addGroup(ui_controllersMainGroup,'column');

	DuAEF.DuScriptUI.addSeparator(ui_controllersGroup,settings.data.uiMode == 2 ? '' : "Controllers");
	ui_controllersGroup.alignment = ['fill','top'];
	ui_controllersGroup.alignChildren = ['center','top'];

	var ui_ctrl1Group = DuAEF.DuScriptUI.addGroup(ui_controllersGroup,'row');
	createCtrlrButton(ui_ctrl1Group, w25_rotation_l, w25_rotation_r, DuAEF.Duik.Controller.Types.ROTATION);
	createCtrlrButton(ui_ctrl1Group, w25_xpos_l, w25_xpos_r, DuAEF.Duik.Controller.Types.X_POSITION);
	createCtrlrButton(ui_ctrl1Group, w25_ypos_l, w25_ypos_r, DuAEF.Duik.Controller.Types.Y_POSITION);
	createCtrlrButton(ui_ctrl1Group, w25_pos_l, w25_pos_r, DuAEF.Duik.Controller.Types.POSITION);
	createCtrlrButton(ui_ctrl1Group, w25_transform_l, w25_transform_r, DuAEF.Duik.Controller.Types.TRANSFORM);

	var ui_ctrl2Group = DuAEF.DuScriptUI.addGroup(ui_controllersGroup,'row');
	createCtrlrButton(ui_ctrl2Group, w25_eye_l, w25_eye_r, DuAEF.Duik.Controller.Types.EYE);
	createCtrlrButton(ui_ctrl2Group, w25_filmcam_l, w25_filmcam_r, DuAEF.Duik.Controller.Types.CAMERA);
	createCtrlrButton(ui_ctrl2Group, w25_slider_l, w25_slider_r, DuAEF.Duik.Controller.Types.SLIDER);
	createCtrlrButton(ui_ctrl2Group, w25_doubleslider_l, w25_doubleslider_r, DuAEF.Duik.Controller.Types.DOUBLE_SLIDER);
	createCtrlrButton(ui_ctrl2Group, w25_angle_l, w25_angle_r, DuAEF.Duik.Controller.Types.ANGLE);

	var ui_ctrl3Group = DuAEF.DuScriptUI.addGroup(ui_controllersGroup,'row');
	createCtrlrButton(ui_ctrl3Group, w25_head_l, w25_head_r, DuAEF.Duik.Controller.Types.HEAD);
	createCtrlrButton(ui_ctrl3Group, w25_plantigrade_l, w25_plantigrade_r, DuAEF.Duik.Controller.Types.FOOT);
	createCtrlrButton(ui_ctrl3Group, w25_digitigrade_l, w25_digitigrade_r, DuAEF.Duik.Controller.Types.CLAWS);
	createCtrlrButton(ui_ctrl3Group, w25_ungulate_l, w25_ungulate_r, DuAEF.Duik.Controller.Types.HOOF);
	createCtrlrButton(ui_ctrl3Group, w25_filledhand_l, w25_filledhand_r, DuAEF.Duik.Controller.Types.HAND);

	var ui_ctrl4Group = DuAEF.DuScriptUI.addGroup(ui_controllersGroup,'row');
	createCtrlrButton(ui_ctrl4Group, w25_hips_l, w25_hips_r, DuAEF.Duik.Controller.Types.HIPS);
	createCtrlrButton(ui_ctrl4Group, w25_body_l, w25_body_r, DuAEF.Duik.Controller.Types.BODY);
	createCtrlrButton(ui_ctrl4Group, w25_shoulders_l, w25_shoulders_r, DuAEF.Duik.Controller.Types.SHOULDERS);
	createCtrlrButton(ui_ctrl4Group, w25_foxtail_l, w25_foxtail_r, DuAEF.Duik.Controller.Types.TAIL);
	createCtrlrButton(ui_ctrl4Group, w25_nullobject_l, w25_nullobject_r, DuAEF.Duik.Controller.Types.NULL);

	if (settings.data.uiMode == 2) DuAEF.DuScriptUI.addSeparator(ui_controllersGroup);
	var ui_ctrlTGroup = DuAEF.DuScriptUI.addGroup(ui_controllersGroup,settings.data.uiMode == 2 ? 'row' : 'column');
	ui_ctrlTGroup.alignment = ['fill','top'];
	var ui_controllersPseudoEffectsButton = DuAEF.DuScriptUI.addButton(ui_ctrlTGroup,settings.data.uiMode == 2 ? '' : "Pseudo-Effects...",DuAEF.DuBinary.toFile(w25_fx_l),"Creates useful pseudo-effects on controllers",DuAEF.DuBinary.toFile(w25_fx_r));
	ui_controllersPseudoEffectsButton.setHelp("Pseudo-Effects", controllertoolsHelp, controllertoolsLink);
	if (settings.data.uiMode == 2) ui_controllersPseudoEffectsButton.alignment = ['center','top'];
	var ui_controllersSelectButton = DuAEF.DuScriptUI.addButton(ui_ctrlTGroup,settings.data.uiMode == 2 ? '' : "Select",DuAEF.DuBinary.toFile(w25_selectcontroller_l),"Select all controllers",DuAEF.DuBinary.toFile(w25_selectcontroller_r));
	ui_controllersSelectButton.setHelp("Select Controllers", controllertoolsHelp, controllertoolsLink);
	if (settings.data.uiMode == 2) ui_controllersSelectButton.alignment = ['center','top'];
	var ui_controllersShowButton = DuAEF.DuScriptUI.addButton(ui_ctrlTGroup,settings.data.uiMode == 2 ? '' : "Show/hide",DuAEF.DuBinary.toFile(w25_showhand_l),"Show or hide controllers",DuAEF.DuBinary.toFile(w25_hidehand_r));
	ui_controllersShowButton.setHelp("Show / Hide Controllers", controllertoolsHelp, controllertoolsLink);
	if (settings.data.uiMode == 2) ui_controllersShowButton.alignment = ['center','top'];
	var ui_extractControllersCtrlGroup = DuAEF.DuScriptUI.addGroup(ui_ctrlTGroup,settings.data.uiMode == 2 ? 'column' : 'row');
	if (settings.data.uiMode == 2) ui_extractControllersCtrlGroup.alignment = ['center','top'];
	var ui_extractControllersCtrlButton = DuAEF.DuScriptUI.addButton(ui_extractControllersCtrlGroup,settings.data.uiMode == 2 ? '' : "Extract",DuAEF.DuBinary.toFile(w25_extractcontrollers_l),"Extract all the controllers from the precomposition",DuAEF.DuBinary.toFile(w25_extractcontrollers_r));
	ui_extractControllersCtrlButton.setHelp("Extract Controllers", controllertoolsHelp, controllertoolsLink);
	if (DuAEF.DuAE.App.version >= 15.1)
	{
		var ui_extractControllersCtrlOptionsButton = DuAEF.DuScriptUI.addButton(ui_extractControllersCtrlGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Extract controllers options",DuAEF.DuBinary.toFile(w14_plus_r));
		ui_extractControllersCtrlOptionsButton.group.alignment = [settings.data.uiMode == 2 ? 'center' : 'right','center'];
	}
	var ui_tagControllersButton = DuAEF.DuScriptUI.addButton(ui_ctrlTGroup,settings.data.uiMode == 2 ? '' : "Tag",DuAEF.DuBinary.toFile(w25_taghand_l),"Tag the selected layers as controllers",DuAEF.DuBinary.toFile(w25_taghand_r));
	ui_tagControllersButton.setHelp("Show / Hide Controllers", controllertoolsHelp, controllertoolsLink);
	if (settings.data.uiMode == 2) ui_tagControllersButton.alignment = ['center','top'];

	if (settings.data.uiMode != 0)
	{
		DuAEF.DuScriptUI.addSeparator(ui_controllersGroup);
		var ui_editControllersButton = DuAEF.DuScriptUI.addButton(ui_controllersGroup,"Edit...",DuAEF.DuBinary.toFile(w18_settings_l),"Edit existing controllers",DuAEF.DuBinary.toFile(w18_settings_r));
		ui_editControllersButton.setHelp("Edit Controllers", controllertoolsHelp, controllertoolsLink);
	}

	// Pseudo Effects
	var ui_pseudoEffectsOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_controllersMainGroup,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_pseudoEffectsOptionsGroup,"Pseudo-Effects");
	var ui_pseudoEffectsSelector = DuAEF.DuScriptUI.addSelector(ui_pseudoEffectsOptionsGroup);
	ui_pseudoEffectsSelector.addButton("Eyes",'',"Eyes pseudo-effect",'');
	ui_pseudoEffectsSelector.addButton("Fingers",'',"Fingers pseudo-effect",'');
	ui_pseudoEffectsSelector.addButton("Hand",'',"Hand pseudo-effect",'');
	ui_pseudoEffectsSelector.addButton("Head",'',"Hand pseudo-effect",'');
	//ui_extractControllersMPCtrlSelector.addButton("Use master properties",DuAEF.DuBinary.toFile(w25_masterprops_l),"Use master properties to link the controllers to the precomp",DuAEF.DuBinary.toFile(w25_masterprops_r));
	var ui_pseudoEffectsValidGroup = DuAEF.DuScriptUI.addGroup(ui_pseudoEffectsOptionsGroup);
	ui_pseudoEffectsValidGroup.alignment = ['fill','top'];
	var ui_pseudoEffectsCancelButton = DuAEF.DuScriptUI.addButton(ui_pseudoEffectsValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_pseudoEffectsValidButton = DuAEF.DuScriptUI.addButton(ui_pseudoEffectsValidGroup,"Add!",DuAEF.DuBinary.toFile(w25_check_g),"Extract controllers from the precomposition",DuAEF.DuBinary.toFile(w25_check_r));

	// Extract Controllers
	var ui_extractControllersCtrlOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_controllersMainGroup,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_extractControllersCtrlOptionsGroup,"Extract Controllers");
	var ui_extractControllersMPCtrlSelector = DuAEF.DuScriptUI.addSelector(ui_extractControllersCtrlOptionsGroup);
	ui_extractControllersMPCtrlSelector.addButton("Use expressions",DuAEF.DuBinary.toFile(w25_js_l),"Use expressions to link the controllers to the precomp",DuAEF.DuBinary.toFile(w25_js_r));
	ui_extractControllersMPCtrlSelector.addButton("Use master properties",DuAEF.DuBinary.toFile(w25_masterprops_l),"Use master properties to link the controllers to the precomp",DuAEF.DuBinary.toFile(w25_masterprops_r));
	var ui_extractControllersCtrlValidGroup = DuAEF.DuScriptUI.addGroup(ui_extractControllersCtrlOptionsGroup);
	ui_extractControllersCtrlValidGroup.alignment = ['fill','top'];
	var ui_extractControllersCtrlCancelButton = DuAEF.DuScriptUI.addButton(ui_extractControllersCtrlValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_extractControllersCtrlValidButton = DuAEF.DuScriptUI.addButton(ui_extractControllersCtrlValidGroup,"Extract!",DuAEF.DuBinary.toFile(w25_check_g),"Extract controllers from the precomposition",DuAEF.DuBinary.toFile(w25_check_r));

	//Editor
	#include 'Duik16_controllers_editor.jsxinc'

	// ============ INITIALIZE ==============

	ui_extractControllersMPCtrlSelector.setCurrentIndex(0);
	ui_pseudoEffectsSelector.setCurrentIndex(0);

	ui_controllersMainGroup.tabActivated = setCurrentControllersPanel;

	// ============ CONNECT EVENTS ==========

	ui_controllersSelectButton.onClick = ui_controllersSelectButton_clicked;
	ui_controllersShowButton.onClick = function () { ui_controllersShowButton_clicked(false); };
	ui_controllersShowButton.onAltClick = function () { ui_controllersShowButton_clicked(true); };

	ui_controllersPseudoEffectsButton.onClick = function () { setCurrentControllersPanel(3); };
	ui_pseudoEffectsCancelButton.onClick = function () { setCurrentControllersPanel(0); };
	ui_pseudoEffectsValidButton.onClick = function () { ui_pseudoEffectsValidButton_clicked(); setCurrentControllersPanel(0); };

	ui_extractControllersCtrlValidButton.onClick = function () { shared.extractControllers(); setCurrentControllersPanel(0); };
	ui_extractControllersCtrlButton.onClick = shared.extractControllers;
	if (DuAEF.DuAE.App.version >= 15.1)
	{
		ui_extractControllersCtrlOptionsButton.onClick = ui_extractControllersCtrlOptionsButton_clicked;
	}
	ui_extractControllersCtrlCancelButton.onClick = function () {setCurrentControllersPanel(0);};
	ui_extractControllersMPCtrlSelector.onChange = ui_extractControllersMPCtrlSelector_changed;

	ui_tagControllersButton.onClick = ui_tagControllersButton_clicked;

	if (settings.data.uiMode != 0) ui_editControllersButton.onClick = function() { setCurrentControllersPanel(2);};

	debugLog.stopTimer("Controllers ready.");
}
