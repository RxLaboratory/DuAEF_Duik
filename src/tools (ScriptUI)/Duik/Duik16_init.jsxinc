//=========== GLOBAL VARIABLES =============
var settingsFile, settings, settingsPath, debugLog;

//=========== FILE AND NETWORK ACCESS ===========

if (!DuAEF.DuAE.App.hasFilesAndNetworkAccess)
{
	var ui_accessFileAndNetworkGroup = DuAEF.DuScriptUI.addGroup(ui_mainPalette.contents,'column');

	var accessExplanation = "Duik needs to be allowed to write files in order to:\n\n" +
		"- Display icons\n" +
		"- Run ffmpeg to transcode medias\n" +
		"- Export animations and other formats\n" +
		"- Save your settings.\n\n" +
		"It also needs network access to check for updates.\n\n" +
		"Please, check the box called 'Allow Scripts to write files...' in the general preferences of After Effects.";

	ui_accessFileAndNetworkGroup.add('statictext',undefined,accessExplanation,{multiline:true});
	var ui_fileAndNetworkPrefButton = ui_accessFileAndNetworkGroup.add('button',undefined,'Open preferences');
	var ui_fileAndNetworkIgnoreButton = ui_accessFileAndNetworkGroup.add('button',undefined,'Ignore');

	ui_fileAndNetworkPrefButton.onClick = function ()
	{
		var ok = DuAEF.DuAE.App.askFilesAndNetworkAccess(false);
		if (ok)
		{
			ui_accessFileAndNetworkGroup.visible = false;
			loadSettings();
		}
	}

	ui_fileAndNetworkIgnoreButton.onClick = function ()
	{
		ui_accessFileAndNetworkGroup.visible = false;
		loadSettings();
	}

	DuAEF.DuScriptUI.showUI(ui_mainPalette);
}
else
{
	loadSettings();
}

//=========== SETTINGS ===========
function loadSettings ()
{
	if (app.settings.haveSetting("Duik","settingsFile")) settingsFile = new File(app.settings.getSetting("Duik","settingsFile"));
	settings = new DuSettings("Duik",settingsFile);
	//TODO get the version of Duik, update settings if changed
	settings.data.duikVersion = version;
	//set settings if new
	if (settings.data.uiMode == undefined) settings.data.uiMode = 0;
	if (settings.data.debug == undefined) settings.data.debug = false;
	DuAEF.debug = settings.data.debug;

	//create Debug log
	var settingsPath = settings.file.path;
	debugLog = new DebugLog(settingsPath + '/Duik_debug_log.txt');
	debugLog.startTimer("Loading Duik");

	//settings folder
	var settingsPath = settings.file.parent.absoluteURI + '/';

	//============= Translations ==============

	#include "translation/Duik Bassel_fr.json.jsxinc"
	DuAEF.DuBinary.toFile(Duik_Bassel_fr,settingsPath + 'Duik Bassel_fr.json');

	DuAEF.Dutranslator.Settings.folder = settingsPath;
	DuAEF.Dutranslator.Settings.prefix = 'Duik Bassel_';
	DuAEF.Dutranslator.getAvailable();

	//if language has never been set
	if (settings.data.language == undefined)
	{
		var ui_languageSetGroup = DuAEF.DuScriptUI.addGroup(ui_mainPalette.contents,'column');

		ui_languageSetGroup.add('statictext', undefined, "Choose a language among these available languages to launch Duik Bassel.",{multiline:true});
		ui_languageSetGroup.add('statictext', undefined, "You can also change the language at any time in the settings tab of Duik",{multiline:true});
		var lDdd = ui_languageSetGroup.add('dropdownlist', undefined, DuAEF.Dutranslator.getPrettyNames());
		lDdd.selection = 0;
		var lDok = ui_languageSetGroup.add('button', undefined, "Ok");
		lDok.onClick = function ()
		{
			if (lDdd.selection != null)
			{
				var languageChoosed = lDdd.selection.text;
				DuAEF.Dutranslator.setPrettyLanguage(languageChoosed);
				settings.data.language = DuAEF.Dutranslator.current;
				settings.save();
			}
			ui_languageSetGroup.visible = false;
			checkUpdates();
		}

		DuAEF.DuScriptUI.showUI(ui_mainPalette);

	}
	else
	{
		DuAEF.Dutranslator.setLanguage(settings.data.language);
		checkUpdates();
	}
}

//================== UPDATES ===================

function checkUpdates()
{
	//TODO Do not use dialogs
	//TODO check for update
	//TODO display latest news (date, extract, link) ; use RSS from wordpress?
	//TODO dev RSS display for Ae? First only for rainbox, then use setting to choose any feed (tabs, one for all, and separated feeds. always add rainbox feed)

	if (!DuAEF.Debug) shared.checkForUpdate(version, true);
	createUI();
}
