function ui_buildKeyframes(ui_animationTab)
{
	debugLog.startTimer("Loading Keyframe tools.");

	function setCurrentAnimationPanel(panel)
	{
		if (typeof panel === 'undefined') panel = 0;

		ui_animationGroup.visible = panel == 0;
		ui_selectKeysGroup.visible = panel == 1;
		ui_kleanerOptionsGroup.visible = panel == 2;
		ui_copyPasteOptionsGroup.visible = panel == 3;
		ui_interpolationOptionsGroup.visible = panel == 4;
	}

	//=========== FUNCTIONS ==========

	function selectorGetProperties(prop)
	{
		var mn = prop.matchName;
		if (ui_selectKeysAllButton.checked) return true;
		if (ui_selectKeysPosButton.checked && (mn == 'ADBE Position' || mn == 'ADBE Vector Position' || mn == 'ADBE Position_0' || mn == 'ADBE Position_1' || mn == 'ADBE Position_2')) return true;
		if (ui_selectKeysRotButton.checked && (mn == 'ADBE Rotate Z' || mn == 'ADBE Rotate Y'  || mn == 'ADBE Rotate X'  || mn == 'ADBE Orientation'  || mn == 'ADBE Vector Rotation')) return true;
		if (ui_selectKeysScaleButton.checked && (mn == 'ADBE Scale' || mn == 'ADBE Vector Scale')) return true;
		if (ui_selectKeysOpacityButton.checked && (mn == 'ADBE Opacity' || mn == 'ADBE Vector Group Opacity')) return true;
		if (ui_selectKeysMaskButton.checked && mn == 'ADBE Mask Parade') return true;
		if (ui_selectKeysFXButton.checked && mn == 'ADBE Effect Parade') return true;
		return false;
	}

	//=========== EVENTS =============

	function ui_kleanerButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Kleaner");


		for (var i = 0 ; i < props.length ; i++)
		{
			//SPATIAL AUTO
			if (ui_spatialAutoButton.checked) DuAEF.DuAE.Property.fixSpatialInterpolation(props[i]);
			//SMART SMOOTH
			if (ui_smartSmoothButton.checked) DuAEF.Duik.Animation.smartInterpolation(props[i],ui_smartEaseStartButton.checked,ui_smartEaseEndButton.checked);
			//CLEAN
			if (ui_kleanerKeysButton.checked) DuAEF.DuAE.Property.cleanKeyframes(props[i]);
		}

		app.endUndoGroup();
	}

	if (settings.data.uiMode == 1)
	{
		function ui_easePresetsList_changed()
		{
			if (ui_easePresetsList.selection == null) return;
			if (ui_easePresetsList.selection.index == 0) return;
			var preset = ui_easePresetsList.selection.text;
			var rePreset = /(\d+)\/(\d+) \| (-?\d+)\/(-?\d+)/i;
			var vals = preset.match(rePreset);
			if (vals == null) return;
			if (vals.length != 5) return;
			ui_easeInSlider.setValue( parseInt(vals[1]) );
			ui_easeOutSlider.setValue( parseInt(vals[2]) );
			ui_velocityInEdit.setText( vals[3] );
			ui_velocityOutEdit.setText( vals[4] );
			ui_lockEaseButton.setChecked(vals[1] != vals[2]);
			ui_lockVelocityButton.setChecked(vals[3] != vals[4]);
			ui_easeSetBothButton_clicked();
		}

		function ui_easePresetAddButton_clicked()
		{
			var presets = [];
			for (var i = 1 ; i < ui_easePresetsList.items.length ; i++)
			{
				presets.push(ui_easePresetsList.items[i].text);
			}
			presets.push(ui_easeInSlider.value + '/' + ui_easeOutSlider.value + ' | ' + ui_velocityInEdit.text + '/' + ui_velocityOutEdit.text);
			presets.sort();
			presets.unshift('Presets');
			ui_easePresetsList.removeAll();
			for (var i=0;i<presets.length;i++)
			{
				ui_easePresetsList.add('item',presets[i]);
			}
			settings.data.easePresets = presets;
			settings.save();
			ui_easePresetsList.selection = 0;
		}

		function ui_easePresetRemoveButton_clicked()
		{
			if (ui_easePresetsList.selection == null) return;
			if (ui_easePresetsList.selection.index == 0) return;
			ui_easePresetsList.remove(ui_easePresetsList.selection);
			var presets = [];
			for (var i = 0 ; i < ui_easePresetsList.items.length ; i++)
			{
				presets.push(ui_easePresetsList.items[i].text);
			}
			settings.data.easePresets = presets;
			settings.save();
			ui_easePresetsList.selection = 0;
		}
	}

	function ui_interpolationOptionsPropsSelector_changed()
	{
		ui_interpolationOptionsLayersSelector.visible = ui_interpolationOptionsPropsSelector.index != 0;
	}

	function ui_kRovingButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Roving");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,"roving");
		}
		else
		{
			DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,"roving");
		}

		app.endUndoGroup();
	}

	function ui_kLinearButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Linear Interpolation");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,KeyframeInterpolationType.LINEAR);
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,KeyframeInterpolationType.LINEAR);

		app.endUndoGroup();
	}

	function ui_kEaseInButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Ease In");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.LINEAR,ui_easeInSlider.value,ui_easeOutSlider.value);
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.LINEAR,ui_easeInSlider.value,ui_easeOutSlider.value);

		app.endUndoGroup();
	}

	function ui_kEaseOutButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Ease Out");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,KeyframeInterpolationType.LINEAR,KeyframeInterpolationType.BEZIER,ui_easeInSlider.value,ui_easeOutSlider.value);
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,KeyframeInterpolationType.LINEAR,KeyframeInterpolationType.BEZIER,ui_easeInSlider.value,ui_easeOutSlider.value);

		app.endUndoGroup();
	}

	function ui_kAutoButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Auto Bezier");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,"continuous");
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,"continuous");

		app.endUndoGroup();
	}

	function ui_kEaseButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Ease");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,ui_easeInSlider.value,ui_easeOutSlider.value);
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,ui_easeInSlider.value,ui_easeOutSlider.value);

		app.endUndoGroup();
	}

	function ui_kHoldButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();

		app.beginUndoGroup('Duik | ' + "Hold");

		if (ui_addEditKeyButton.checked)
		{
			if (ui_interpolationOptionsPropsSelector.index == 1)
			{
				if (ui_interpolationOptionsLayersSelector.index == 0) props = DuAEF.DuAE.Comp.getAnimatedProps();
				else props = DuAEF.DuAE.Comp.getAnimatedProps(undefined, undefined, undefined, false);
			}
			DuAEF.DuAE.Property.addKey(props,KeyframeInterpolationType.HOLD);
		}
		else DuAEF.DuAE.Property.setInterpolationType(comp.selectedLayers,props,KeyframeInterpolationType.HOLD);

		app.endUndoGroup();
	}

	function ui_easeInSlider_changed()
	{
		ui_easeInSlider.lastModified = true;
		ui_easeOutSlider.lastModified = false;

		ui_easeSetButton_clicked();
	}

	function ui_easeInSlider_changing()
	{
		if (!ui_lockEaseButton.checked) ui_easeOutSlider.setValue(ui_easeInSlider.value);
	}

	function ui_easeOutSlider_changed()
	{
		if (!ui_lockEaseButton.checked) ui_easeInSlider.setValue(ui_easeOutSlider.value);

		ui_easeInSlider.lastModified = false;
		ui_easeOutSlider.lastModified = true;

		ui_easeSetButton_clicked();
	}

	function ui_easeOutSlider_changing()
	{
		if (!ui_lockEaseButton.checked) ui_easeInSlider.setValue(ui_easeOutSlider.value);
	}

	function ui_velocityInEdit_changing()
	{
		if (!ui_lockVelocityButton.checked) ui_velocityOutEdit.setText(ui_velocityInEdit.text);
	}

	function ui_velocityInEdit_changed()
	{
		ui_velocitySetButton_clicked();
	}

	function ui_velocityOutEdit_changed()
	{
		ui_velocitySetButton_clicked();
	}

	function ui_velocityOutEdit_changing()
	{
		if (!ui_lockVelocityButton.checked) ui_velocityInEdit.setText(ui_velocityOutEdit.text);
	}

	function ui_lockEaseButton_clicked()
	{
		if (ui_easeInSlider.lastModified)
		{
			ui_easeOutSlider.setValue(ui_easeInSlider.value);
		}
		else
		{
			ui_easeInSlider.setValue(ui_easeOutSlider.value);
		}
	}

	function ui_easeSwitchButton_clicked()
	{
		var inVal = ui_easeInSlider.value;
		ui_easeInSlider.setValue(ui_easeOutSlider.value);
		ui_easeOutSlider.setValue(inVal);
		ui_easeSetButton_clicked();
	}

	function ui_velocitySwitchButton_clicked()
	{
		var inVal = ui_velocityInEdit.text;
		ui_velocityInEdit.setText(ui_velocityOutEdit.text);
		ui_velocityOutEdit.setText(inVal);
		ui_velocitySetButton_clicked();
	}

	function ui_easePickButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		for (var i=0;i<props.length;i++)
		{
			var prop = props[i].getProperty();
			if (prop.selectedKeys.length == 0) continue;
			var speedIn = prop.keyInTemporalEase(prop.selectedKeys[0])[0].speed;
			var speedOut = prop.keyOutTemporalEase(prop.selectedKeys[0])[0].speed;
			var easeIn = prop.keyInTemporalEase(prop.selectedKeys[0])[0].influence;
			var easeOut = prop.keyOutTemporalEase(prop.selectedKeys[0])[0].influence;
			ui_easeInSlider.setValue(easeIn);
			ui_easeOutSlider.setValue(easeOut);
			ui_velocityInEdit.setText(speedIn);
			ui_velocityOutEdit.setText(speedOut);
			ui_lockEaseButton.setChecked(easeIn != easeOut);
			ui_lockVelocityButton.setChecked(speedIn != speedOut);
			break;
		}
	}

	function ui_velocitySetButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Set velocity");

		DuAEF.DuAE.Property.setEase(props,undefined,undefined,parseInt(ui_velocityInEdit.text),parseInt(ui_velocityOutEdit.text));

		app.endUndoGroup();
	}

	function ui_easeSetButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Set Ease");

		DuAEF.DuAE.Property.setEase(props,ui_easeInSlider.value,ui_easeOutSlider.value);

		app.endUndoGroup();
	}

	function ui_easeSetBothButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Set Interpolation");

		DuAEF.DuAE.Property.setEase(props,ui_easeInSlider.value,ui_easeOutSlider.value,parseInt(ui_velocityInEdit.text),parseInt(ui_velocityOutEdit.text));

		app.endUndoGroup();
	}

	function ui_spatialLinButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Spatial Linear");

		for (var i = 0 ; i < props.length ; i++)
		{
			DuAEF.DuAE.Property.setSpatialInterpolation(props[i],KeyframeInterpolationType.LINEAR);
		}

		app.endUndoGroup();
	}

	function ui_spatialBezButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Spatial Bezier");

		for (var i = 0 ; i < props.length ; i++)
		{
			DuAEF.DuAE.Property.setSpatialInterpolation(props[i],KeyframeInterpolationType.BEZIER);
		}

		app.endUndoGroup();
	}

	function ui_spatialLinBezButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Spatial Linear|Bezier");

		for (var i = 0 ; i < props.length ; i++)
		{
			DuAEF.DuAE.Property.setSpatialInterpolation(props[i],KeyframeInterpolationType.LINEAR,KeyframeInterpolationType.BEZIER);
		}

		app.endUndoGroup();
	}

	function ui_spatialBezLinButton_clicked()
	{
		var props = DuAEF.DuAE.Comp.getSelectedProps();
		if (props.length == 0) return;

		app.beginUndoGroup('Duik | ' + "Spatial Bezier|Linear");

		for (var i = 0 ; i < props.length ; i++)
		{
			DuAEF.DuAE.Property.setSpatialInterpolation(props[i],KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.LINEAR);
		}

		app.endUndoGroup();
	}

	function ui_copyAnimButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var layers = comp.selectedLayers;
		if (layers.length == 0) return;

		copiedAnim = [];

		for (var i = 0 ; i < layers.length ; i++)
		{
			copiedAnim.push(DuAEF.DuAE.Layer.getAnim(layers[i],true));
		}
		//get the first keyframe time to offset when pasting
		copiedAnim.firstKeyFrameTime = DuAEF.DuAE.Layer.firstKeyFrameTime(layers,true);
	}

	function ui_pasteAnimButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		if (layers.length == 0) layers = comp.layers;
		if (layers.length == 0) return;

		//options
		var time = comp.time-copiedAnim.firstKeyFrameTime;
		var replace = ui_pasteAnimationReplaceButton.checked;
		var offset =  ui_pasteAnimationOffsetSelector.index == 0;
		var reverse = ui_pasteAnimationReverseButton.checked;

		app.beginUndoGroup('Duik | ' + "Paste animation");

		var remaining = DuAEF.DuAE.Layer.setAnims(layers, copiedAnim, time, undefined, undefined, undefined, replace, undefined, offset, reverse);

		if (remaining.length > 0)
		{
			var ui_pasteLayerPicker = DuAEF.DuScriptUI.createLayerPickerDialog("Missing layers");

			for (var i = 0, num = remaining.length; i < num; i++)
			{
				ui_pasteLayerPicker.addSelector(remaining[i]._index + ' | ' + remaining[i]._name);
				//try to preselect by name
				var ok = false;
				for (var j = 1, numLayers = comp.numLayers; j <= numLayers; j++)
				{
					var l = comp.layer(j);
					if (l.name == remaining[i]._name)
					{
						ui_pasteLayerPicker.layerPicker.selectors[i].setCurrentIndex(j);
						ok = true;
						break;
					}
				}
				if (!ok && remaining[i]._index > 0 && remaining[i]._index <= comp.numLayers) ui_pasteLayerPicker.layerPicker.selectors[i].setCurrentIndex(remaining[i]._index);
			}

			ui_pasteLayerPicker.onAccept = function () {app.beginUndoGroup('Duik | ' + "Paste animation"); DuAEF.DuAE.Layer.setAllAnims(ui_pasteLayerPicker.getLayers(), copiedAnim, time, undefined, undefined, undefined, replace, undefined, offset, false); app.endUndoGroup();};

			DuAEF.DuScriptUI.showUI(ui_pasteLayerPicker);
		}

		app.endUndoGroup();
		setCurrentAnimationPanel(0);
	}

	function ui_selectKeysMethodSelector_changed()
	{
		ui_selectKeysOutEdit.enabled = ui_selectKeysMethodSelector.index == 1;
	}

	function ui_selectKeysCurrentButton_clicked()
	{
		ui_selectKeysRangeGroup.visible = !ui_selectKeysCurrentButton.checked;
	}

	function ui_selectKeysAllButton_clicked()
	{
		var checked = ui_selectKeysAllButton.checked;
		ui_selectKeysPosButton.setChecked(checked);
		ui_selectKeysRotButton.setChecked(checked);
		ui_selectKeysScaleButton.setChecked(checked);
		ui_selectKeysOpacityButton.setChecked(checked);
		ui_selectKeysMaskButton.setChecked(checked);
		ui_selectKeysFXButton.setChecked(checked);
	}

	function ui_selectKeysPickButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		if (ui_selectKeysMethodSelector.index == 0)
		{
			ui_selectKeysInEdit.setText(timeToCurrentFormat(comp.time+comp.displayStartTime,1/comp.frameDuration));
		}
		else
		{
			ui_selectKeysInEdit.setText(timeToCurrentFormat(comp.workAreaStart+comp.displayStartTime,1/comp.frameDuration));
			ui_selectKeysOutEdit.setText(timeToCurrentFormat(comp.workAreaStart + comp.workAreaDuration+comp.displayStartTime,1/comp.frameDuration));
		}

	}

	function ui_selectKeysValidButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		app.beginUndoGroup('Duik | ' + "Select Keyframes");

		//get layers
		var layers = [];
		if (ui_selectKeysLayersSelector.index == 1)
		{
			if (ui_selectKeysLayerTypeSelector.index == 1) layers = comp.layers;
			else layers = DuAEF.Duik.Controller.getControllers(comp,false);
		}
		else
		{
			if (ui_selectKeysLayerTypeSelector.index == 1) layers = comp.selectedLayers;
			else layers = DuAEF.Duik.Controller.getControllers(comp,true);
		}

		if (layers.length == 0) return;

		var inTime = comp.time;
		var outTime = comp.time;
		if (ui_selectKeysCurrentButton.checked)
		{
			if (ui_selectKeysMethodSelector.index == 1)
			{
				inTime = comp.workAreaStart;
				outTime = comp.workAreaStart + comp.workAreaDuration;
			}
		}
		else
		{
			inTime = currentFormatToTime(ui_selectKeysInEdit.text,1/comp.frameDuration)-comp.displayStartTime;
			if (ui_selectKeysMethodSelector.index == 1) outTime = currentFormatToTime(ui_selectKeysOutEdit.text,1/comp.frameDuration)-comp.displayStartTime;
			else outTime = inTime;
		}

		//unselect all previously selected keyframes
		DuAEF.DuAE.Comp.unselectProperties();

		//get all properties
		var it = new Iterator(layers);
		it.do(function (layer)
		{
			if (layer instanceof Controller) layer = layer.layer;
			var props = DuAEF.DuAE.Property.getProps(layer,selectorGetProperties);
			var itProp = new Iterator(props);
			itProp.do(function(prop)
			{
				DuAEF.DuAE.Property.selectKeyFrames(prop,inTime,outTime);
			});
		});

		app.endUndoGroup();
	}

	//============ UI ===============

	ui_animationTab.orientation = 'stack';

	var ui_animationGroup = DuAEF.DuScriptUI.addGroup(ui_animationTab,'column');

	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_animationGroup,"Keyframes");

	if (settings.data.uiMode != 0)
	{
		var ui_selectKeysGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup,'row');
		var ui_selectKeysButton = DuAEF.DuScriptUI.addButton(ui_selectKeysGroup,"Select keyframes",DuAEF.DuBinary.toFile(w25_selectkey_l),"Keyframe selector",DuAEF.DuBinary.toFile(w25_selectkey_r));
		ui_selectKeysButton.setHelp("Select Keyframes", keyframetoolsHelp, keyframetoolsLink);
		var ui_selectKeysOptionsButton = DuAEF.DuScriptUI.addButton(ui_selectKeysGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Key selector options",DuAEF.DuBinary.toFile(w14_plus_r));
		ui_selectKeysOptionsButton.setHelp("Select Keyframes", keyframetoolsHelp, keyframetoolsLink);
		ui_selectKeysOptionsButton.group.alignment = ['right','center'];
	}

	var ui_setKeyGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup);
	ui_setKeyGroup.alignment = ['center','top'];
	ui_setKeyGroup.spacing = 0;
	var ui_addEditKeyButton = DuAEF.DuScriptUI.addCheckBox(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_editkey_l),"Add keyframes or edit selected keyframes",DuAEF.DuBinary.toFile(w18_addkey_r),DuAEF.DuBinary.toFile(w18_editkey_r));
	var ui_kRovingButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_kroving_l),"Roving",DuAEF.DuBinary.toFile(w18_kroving_r));
	var ui_kLinearButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_klin_l),"Linear Interpolation",DuAEF.DuBinary.toFile(w18_klin_r));
	var ui_kEaseInButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_kinbez_l),"Ease In",DuAEF.DuBinary.toFile(w18_kinbez_r));
	var ui_kEaseOutButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_koutbez_l),"Ease Out",DuAEF.DuBinary.toFile(w18_koutbez_r));
	var ui_kEaseButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_kbez_l),"Easy Ease",DuAEF.DuBinary.toFile(w18_kbez_r));
	var ui_kAutoButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_kauto_l),"Auto Bezier",DuAEF.DuBinary.toFile(w18_kauto_r));
	var ui_kHoldButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w18_khold_l),"Hold",DuAEF.DuBinary.toFile(w18_khold_r));
	var ui_kOptionsButton = DuAEF.DuScriptUI.addButton(ui_setKeyGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Set key options",DuAEF.DuBinary.toFile(w14_plus_r));

	if (settings.data.uiMode == 1)
	{
		var ui_easePresetsGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup);
		ui_easePresetsGroup.alignment = ['center','top'];
		var ui_easePresetAddButton = DuAEF.DuScriptUI.addButton(ui_easePresetsGroup,'',DuAEF.DuBinary.toFile(w18_simpleplus_l),"Add preset",DuAEF.DuBinary.toFile(w18_simpleplus_r));
		ui_easePresetAddButton.alignment = ['left','fill'];
		var ui_easePresetRemoveButton = DuAEF.DuScriptUI.addButton(ui_easePresetsGroup,'',DuAEF.DuBinary.toFile(w18_simpleminus_l),"Remove preset",DuAEF.DuBinary.toFile(w18_simpleminus_r));
		ui_easePresetRemoveButton.alignment = ['left','fill'];
		var ui_easePresetsList = ui_easePresetsGroup.add('dropdownlist',undefined,settings.data.easePresets);
		ui_easePresetsList.alignment = ['fill','fill'];
		ui_easePresetsList.selection = 0;
	}

	DuAEF.DuScriptUI.addSeparator(ui_animationGroup);
	var ui_easeGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup);
	ui_easeGroup.alignChildren = ['fill','fill'];
	ui_easeGroup.alignment = ['fill','top'];

	var ui_easeInGroup = DuAEF.DuScriptUI.addGroup(ui_easeGroup,'column');
	var ui_easeInSlider = DuAEF.DuScriptUI.addSlider(ui_easeInGroup,33,1,100,'column',true,'','%');
	ui_easeInSlider.helpTip = "Ease In influence";
	var ui_velocityInEdit = DuAEF.DuScriptUI.addEditText(ui_easeInGroup,'0');
	ui_velocityInEdit.helpTip = "Velocity In";
	ui_velocityInEdit.minimumSize.width = 35;
	ui_velocityInEdit.alignment = ['center','top'];

	var ui_easeButtonsGroup = DuAEF.DuScriptUI.addGroup(ui_easeGroup,'column');
	ui_easeButtonsGroup.maximumSize.width = ui_easeButtonsGroup.minimumSize.width = 18;
	ui_easeButtonsGroup.alignment = ['center','center'];
	ui_easeButtonsGroup.alignChildren = ['center','center'];
	var ui_easeSwitchButton = DuAEF.DuScriptUI.addButton(ui_easeButtonsGroup,'',DuAEF.DuBinary.toFile(w14_switch_l),"Switch ease",DuAEF.DuBinary.toFile(w14_switch_r));
	var ui_lockEaseButton = DuAEF.DuScriptUI.addCheckBox(ui_easeButtonsGroup,'',DuAEF.DuBinary.toFile(w14_chain_l),"Lock tangents",DuAEF.DuBinary.toFile(w14_unchained_l),DuAEF.DuBinary.toFile(w14_chain_r));
	var ui_velocitySwitchButton = DuAEF.DuScriptUI.addButton(ui_easeButtonsGroup,'',DuAEF.DuBinary.toFile(w14_switch_l),"Switch velocities",DuAEF.DuBinary.toFile(w14_switch_r));
	var ui_lockVelocityButton = DuAEF.DuScriptUI.addCheckBox(ui_easeButtonsGroup,'',DuAEF.DuBinary.toFile(w14_chain_l),"Lock velocities",DuAEF.DuBinary.toFile(w14_unchained_l),DuAEF.DuBinary.toFile(w14_chain_r));

	var ui_easeOutGroup = DuAEF.DuScriptUI.addGroup(ui_easeGroup,'column');
	var ui_easeOutSlider = DuAEF.DuScriptUI.addSlider(ui_easeOutGroup,33,1,100,'column',false,'','%');
	ui_easeOutSlider.helpTip = "Ease Out influence";
	var ui_velocityOutEdit = DuAEF.DuScriptUI.addEditText(ui_easeOutGroup,'0');
	ui_velocityOutEdit.helpTip = "Velocity Out";
	ui_velocityOutEdit.minimumSize.width = 35;
	ui_velocityOutEdit.alignment = ['center','top'];

	var ui_easeSetButtonsGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup,'row');
	ui_easeSetButtonsGroup.alignment = ['fill','top'];
	ui_easeSetButtonsGroup.alignChildren = ['fill','fill'];
	var ui_easePickButton = DuAEF.DuScriptUI.addButton(ui_easeSetButtonsGroup,'',DuAEF.DuBinary.toFile(w18_keyeyedropper_l),"Pick ease and velocity from key",DuAEF.DuBinary.toFile(w18_keyeyedropper_r));
	ui_easePickButton.alignment = ['left','center'];
	var ui_velocitySetButton = DuAEF.DuScriptUI.addButton(ui_easeSetButtonsGroup,'Velocity',DuAEF.DuBinary.toFile(w14_check_l),"Set velocity on selected keys",DuAEF.DuBinary.toFile(w14_check_g));
	ui_velocitySetButton.alignment = ['fill','fill'];
	var ui_easeSetButton = DuAEF.DuScriptUI.addButton(ui_easeSetButtonsGroup,'Ease',DuAEF.DuBinary.toFile(w14_check_l),"Set ease on selected keys",DuAEF.DuBinary.toFile(w14_check_g));
	ui_easeSetButton.alignment = ['fill','fill'];
	var ui_easeSetBothButton = DuAEF.DuScriptUI.addButton(ui_easeSetButtonsGroup,'',DuAEF.DuBinary.toFile(w18_check_g),"Set ease and velocity on selected keys",DuAEF.DuBinary.toFile(w18_check_r));
	ui_easeSetBothButton.alignment = ['right','center'];

	DuAEF.DuScriptUI.addSeparator(ui_animationGroup);
	var ui_animationBottomGroup = DuAEF.DuScriptUI.addGroup(ui_animationGroup,'column');
	var ui_kleanerGroup = DuAEF.DuScriptUI.addGroup(ui_animationBottomGroup,'row');
	var ui_kleanerButton = DuAEF.DuScriptUI.addButton(ui_kleanerGroup,"Kleaner",DuAEF.DuBinary.toFile(w25_broom_l),"Cleans keyframes",DuAEF.DuBinary.toFile(w25_broom_r));
	ui_kleanerButton.setHelp("Kleaner", keyframetoolsHelp, keyframetoolsLink);
	var ui_kleanerOptionsButton = DuAEF.DuScriptUI.addButton(ui_kleanerGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Kleaner options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_kleanerOptionsButton.group.alignment = ['right','center'];
	var ui_copyAnimButton;
	if (settings.data.uiMode != 2) ui_copyAnimButton = DuAEF.DuScriptUI.addButton(ui_animationBottomGroup,"Copy Anim",DuAEF.DuBinary.toFile(w25_copy_l),"Copy selected keyframes",DuAEF.DuBinary.toFile(w25_copy_r));
	var ui_pasteAnimGroup = DuAEF.DuScriptUI.addGroup(ui_animationBottomGroup,'row');
	if (settings.data.uiMode == 2) ui_pasteAnimGroup.alignChildren = ['center','top'];
	if (settings.data.uiMode == 2) ui_copyAnimButton = DuAEF.DuScriptUI.addButton(ui_pasteAnimGroup,'',DuAEF.DuBinary.toFile(w25_copy_l),"Copy selected keyframes",DuAEF.DuBinary.toFile(w25_copy_r));
	ui_copyAnimButton.setHelp("Copy and Paste Animation", keyframetoolsHelp, keyframetoolsLink);
	var ui_pasteAnimButton = DuAEF.DuScriptUI.addButton(ui_pasteAnimGroup,settings.data.uiMode == 2 ? '' : "Paste anim",DuAEF.DuBinary.toFile(w25_paste_l),"Paste keyframes",DuAEF.DuBinary.toFile(w25_paste_r));
	ui_pasteAnimButton.setHelp("Copy and Paste Animation", keyframetoolsHelp, keyframetoolsLink);
	var ui_copyPasteAnimOptionsButton = DuAEF.DuScriptUI.addButton(ui_pasteAnimGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Copy/paste options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_copyPasteAnimOptionsButton.group.alignment = ['right','center'];

	//Select keys
	var ui_selectKeysGroup = DuAEF.DuScriptUI.addGroup(ui_animationTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_selectKeysGroup,"Select keyframes");
	var ui_selectKeysMethodSelector = DuAEF.DuScriptUI.addSelector(ui_selectKeysGroup);
	ui_selectKeysMethodSelector.addButton("Time",DuAEF.DuBinary.toFile(w25_time_l),"Select at a precise time.",DuAEF.DuBinary.toFile(w25_time_r));
	ui_selectKeysMethodSelector.addButton("Range",DuAEF.DuBinary.toFile(w25_timerange_l),"Select using a time range.",DuAEF.DuBinary.toFile(w25_timerange_r));
	var ui_selectKeysCurrentButton = DuAEF.DuScriptUI.addCheckBox(ui_selectKeysGroup,"Current time",DuAEF.DuBinary.toFile(w25_update_l),"Use current time/work area.",DuAEF.DuBinary.toFile(w25_update_r));
	ui_selectKeysRangeGroup = DuAEF.DuScriptUI.addGroup(ui_selectKeysGroup,'row');
	ui_selectKeysRangeGroup.alignment = ['center','top'];
	var ui_selectKeysInEdit = DuAEF.DuScriptUI.addEditText(ui_selectKeysRangeGroup,'',settings.data.uiMode == 2 ? '' : 'In ','','00:00:00:00');
	DuAEF.DuScriptUI.addStaticText(ui_selectKeysRangeGroup,' - ',undefined,undefined,false);
	var ui_selectKeysOutEdit = DuAEF.DuScriptUI.addEditText(ui_selectKeysRangeGroup,'',settings.data.uiMode == 2 ? '' : 'Out ','','00:00:00:00');
	var ui_selectKeysPickButton = DuAEF.DuScriptUI.addButton(ui_selectKeysRangeGroup,'',DuAEF.DuBinary.toFile(w18_eyedropper_l),"Pick current time/work area.",DuAEF.DuBinary.toFile(w18_eyedropper_r));

	var ui_selectKeysLayersSelector = DuAEF.DuScriptUI.addSelector(ui_selectKeysGroup);
	ui_selectKeysLayersSelector.addButton("Selected layers",DuAEF.DuBinary.toFile(w25_selectedlayers_l),"Use selected layers only",DuAEF.DuBinary.toFile(w25_selectedlayers_r));
	ui_selectKeysLayersSelector.addButton("All layers",DuAEF.DuBinary.toFile(w25_alllayers_l),"Use all layers",DuAEF.DuBinary.toFile(w25_alllayers_r));
	ui_selectKeysLayersSelector.setCurrentIndex(0);
	var ui_selectKeysLayerTypeSelector = DuAEF.DuScriptUI.addSelector(ui_selectKeysGroup);
	ui_selectKeysLayerTypeSelector.addButton("Controllers",DuAEF.DuBinary.toFile(w25_filledhand_l),"Use controllers only",DuAEF.DuBinary.toFile(w25_filledhand_r));
	ui_selectKeysLayerTypeSelector.addButton("All layers",DuAEF.DuBinary.toFile(w25_aelayers_l),"Use all layer types",DuAEF.DuBinary.toFile(w25_aelayers_r));
	ui_selectKeysLayerTypeSelector.setCurrentIndex(0);

	var ui_selectKeysTypeGroup = DuAEF.DuScriptUI.addGroup(ui_selectKeysGroup,'row');
	ui_selectKeysTypeGroup.alignment = ['center','top'];
	var ui_selectKeysPosButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_pos_l),"Position",DuAEF.DuBinary.toFile(w18_pos_r));
	var ui_selectKeysRotButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_rotation_l),"Rotation",DuAEF.DuBinary.toFile(w18_rotation_r));
	var ui_selectKeysScaleButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_scale_l),"Scale",DuAEF.DuBinary.toFile(w18_scale_r));
	var ui_selectKeysOpacityButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_opacity_l),"Opacity",DuAEF.DuBinary.toFile(w18_opacity_r));
	var ui_selectKeysMaskButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_mask_l),"Masks",DuAEF.DuBinary.toFile(w18_mask_r));
	var ui_selectKeysFXButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_fx_l),"FX",DuAEF.DuBinary.toFile(w18_fx_r));
	var ui_selectKeysAllButton = DuAEF.DuScriptUI.addCheckBox( ui_selectKeysTypeGroup,'' ,DuAEF.DuBinary.toFile(w18_allproperties_l),"All",DuAEF.DuBinary.toFile(w18_allproperties_r));

	var ui_selectKeysValidGroup = DuAEF.DuScriptUI.addGroup(ui_selectKeysGroup);
	ui_selectKeysValidGroup.alignment = ['fill','top'];
	var ui_selectKeysCancelButton = DuAEF.DuScriptUI.addButton(ui_selectKeysValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_selectKeysCopyAnimButton = DuAEF.DuScriptUI.addButton(ui_selectKeysValidGroup,settings.data.uiMode == 2 ? '' : "Copy",DuAEF.DuBinary.toFile(w25_copy_l),"Copy keyframes",DuAEF.DuBinary.toFile(w25_copy_r));
	var ui_selectKeysValidButton = DuAEF.DuScriptUI.addButton(ui_selectKeysValidGroup,"Select",DuAEF.DuBinary.toFile(w25_check_g),"Select keyframes",DuAEF.DuBinary.toFile(w25_check_r));

	// Kleaner
	var ui_kleanerOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animationTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_kleanerOptionsGroup,"Kleaner");
	DuAEF.DuScriptUI.addSeparator(ui_kleanerOptionsGroup,settings.data.uiMode == 2 ? '' : "Spatial interpolation");
	var ui_spatialInterpolationGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerOptionsGroup);
	ui_spatialInterpolationGroup.alignment = ['center','top'];
	var ui_spatialLinButton = DuAEF.DuScriptUI.addButton(ui_spatialInterpolationGroup,'',DuAEF.DuBinary.toFile(w18_curvelin_l),"Set linear spatial interpolation",DuAEF.DuBinary.toFile(w18_curvelin_r));
	var ui_spatialBezButton = DuAEF.DuScriptUI.addButton(ui_spatialInterpolationGroup,'',DuAEF.DuBinary.toFile(w18_curvebez_l),"Set bezier spatial interpolation",DuAEF.DuBinary.toFile(w18_curvebez_r));
	var ui_spatialLinBezButton = DuAEF.DuScriptUI.addButton(ui_spatialInterpolationGroup,'',DuAEF.DuBinary.toFile(w18_curvelinbez_l),"Set linear in / bezier out spatial interpolation",DuAEF.DuBinary.toFile(w18_curvelinbez_r));
	var ui_spatialBezLinButton = DuAEF.DuScriptUI.addButton(ui_spatialInterpolationGroup,'',DuAEF.DuBinary.toFile(w18_curvebezlin_l),"Set bezier in / linear out spatial interpolation",DuAEF.DuBinary.toFile(w18_curvebezlin_r));
	var ui_spatialAutoButton = DuAEF.DuScriptUI.addCheckBox(ui_spatialInterpolationGroup,"Auto fix",DuAEF.DuBinary.toFile(w25_magic_l),"Auto-fix spatial interpolations",DuAEF.DuBinary.toFile(w25_magic_r));
	DuAEF.DuScriptUI.addSeparator(ui_kleanerOptionsGroup,settings.data.uiMode == 2 ? '' : "Smart interpolation");
	var ui_smartEaseGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerOptionsGroup);
	ui_smartEaseGroup.alignment = ['center','top'];
	var ui_smartEaseStartButton = DuAEF.DuScriptUI.addCheckBox(ui_smartEaseGroup,'',DuAEF.DuBinary.toFile(w25_linstart_l),"Ease start",DuAEF.DuBinary.toFile(w25_easestart_l),DuAEF.DuBinary.toFile(w25_easestart_r));
	var ui_smartEaseEndButton = DuAEF.DuScriptUI.addCheckBox(ui_smartEaseGroup,'',DuAEF.DuBinary.toFile(w25_linend_l),"Ease end",DuAEF.DuBinary.toFile(w25_easeend_l),DuAEF.DuBinary.toFile(w25_easeend_r));
	var ui_smartSmoothButton = DuAEF.DuScriptUI.addCheckBox(ui_smartEaseGroup,"Smooth!",DuAEF.DuBinary.toFile(w25_magic_l),"Automatically make your animations smoother",DuAEF.DuBinary.toFile(w25_magic_r));
	DuAEF.DuScriptUI.addSeparator(ui_kleanerOptionsGroup,settings.data.uiMode == 2 ? '' : "Clean keyframes");
	var ui_kleanerKeysButton =DuAEF.DuScriptUI.addCheckBox(ui_kleanerOptionsGroup,"Clean",DuAEF.DuBinary.toFile(w25_broom_l),"Automatically removes unneeded keyframes",DuAEF.DuBinary.toFile(w25_broom_r));
	DuAEF.DuScriptUI.addSeparator(ui_kleanerOptionsGroup);
	var ui_kleanerValidGroup = DuAEF.DuScriptUI.addGroup(ui_kleanerOptionsGroup);
	ui_kleanerValidGroup.alignment = ['fill','top'];
	var ui_kleanerCancelButton = DuAEF.DuScriptUI.addButton(ui_kleanerValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_kleanerValidButton = DuAEF.DuScriptUI.addButton(ui_kleanerValidGroup,"Klean!",DuAEF.DuBinary.toFile(w25_check_g),"Cleans the animation",DuAEF.DuBinary.toFile(w25_check_r));

	// Copy/paste options
	var ui_copyPasteOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animationTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_copyPasteOptionsGroup,"Paste animation");
	ui_copyPasteOptionsGroup.alignment = ['fill','top'];
	ui_copyPasteOptionsGroup.alignChildren = ['center','top'];
	var ui_pasteAnimationOffsetSelector = DuAEF.DuScriptUI.addSelector(ui_copyPasteOptionsGroup);
	ui_pasteAnimationOffsetSelector.addButton("Offset",DuAEF.DuBinary.toFile(w14_moveaway_l),"Offset current values",DuAEF.DuBinary.toFile(w14_moveaway_r));
	ui_pasteAnimationOffsetSelector.addButton("Absolute",DuAEF.DuBinary.toFile(w14_absolute_l),"Replaces current values",DuAEF.DuBinary.toFile(w14_absolute_r));
	var ui_pasteAnimationReverseButton = DuAEF.DuScriptUI.addCheckBox(ui_copyPasteOptionsGroup,'Reverse keyframes',undefined,"Reverts the animation in time",undefined);
	var ui_pasteAnimationReplaceButton = DuAEF.DuScriptUI.addCheckBox(ui_copyPasteOptionsGroup,'Replace existing keyframes',undefined,"Replaces any existing keyframe on the properties before loading the new animation",undefined);
	var ui_copyPasteValidGroup = DuAEF.DuScriptUI.addGroup(ui_copyPasteOptionsGroup);
	ui_copyPasteValidGroup.alignment = ['fill','top'];
	var ui_copyPasteCancelButton = DuAEF.DuScriptUI.addButton(ui_copyPasteValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_copyPasteValidButton = DuAEF.DuScriptUI.addButton(ui_copyPasteValidGroup,"Paste",DuAEF.DuBinary.toFile(w25_check_g),"Paste keyframes",DuAEF.DuBinary.toFile(w25_check_r));

	// Interpolation options
	var ui_interpolationOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animationTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_interpolationOptionsGroup,"Interpolation options");
	DuAEF.DuScriptUI.addStaticText(ui_interpolationOptionsGroup,"When adding keyframes, add on:",undefined,undefined,true);
	var ui_interpolationOptionsPropsSelector = DuAEF.DuScriptUI.addSelector(ui_interpolationOptionsGroup);
	ui_interpolationOptionsPropsSelector.addButton("Selected properties",DuAEF.DuBinary.toFile(w25_allproperties_l),"Use selected properties only",DuAEF.DuBinary.toFile(w25_allproperties_r));
	ui_interpolationOptionsPropsSelector.addButton("Animated properties",DuAEF.DuBinary.toFile(w25_animatedproperties_l),"Use all animated properties",DuAEF.DuBinary.toFile(w25_animatedproperties_r));
	var ui_interpolationOptionsLayersSelector = DuAEF.DuScriptUI.addSelector(ui_interpolationOptionsGroup);
	ui_interpolationOptionsLayersSelector.addButton("Selected layers",DuAEF.DuBinary.toFile(w25_selectedlayers_l),"Use selected layers only",DuAEF.DuBinary.toFile(w25_selectedlayers_r));
	ui_interpolationOptionsLayersSelector.addButton("All layers",DuAEF.DuBinary.toFile(w25_alllayers_l),"Use all layers",DuAEF.DuBinary.toFile(w25_alllayers_r));
	var ui_interpolationOptionsValidGroup = DuAEF.DuScriptUI.addGroup(ui_interpolationOptionsGroup);
	ui_interpolationOptionsValidGroup.alignment = ['fill','top'];
	var ui_interpolationOptionsCancelButton = DuAEF.DuScriptUI.addButton(ui_interpolationOptionsValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));

	//========= INIT ===================

	var copiedAnim = [];
	copiedAnim.firstKeyFrameTime = 0;
	ui_pasteAnimationOffsetSelector.setCurrentIndex(1);
	ui_selectKeysMethodSelector.setCurrentIndex(0);
	ui_selectKeysCurrentButton.setChecked(true);
	ui_selectKeysPosButton.setChecked(true);
	ui_selectKeysRotButton.setChecked(true);
	ui_selectKeysScaleButton.setChecked(true);
	ui_selectKeysOpacityButton.setChecked(true);
	ui_selectKeysMaskButton.setChecked(true);
	ui_selectKeysFXButton.setChecked(true);
	ui_selectKeysOutEdit.enabled = false;
	ui_selectKeysRangeGroup.visible = false;
	ui_spatialAutoButton.setChecked(true);
	ui_smartSmoothButton.setChecked(true);
	ui_kleanerKeysButton.setChecked(true);
	ui_smartEaseStartButton.setChecked(true);
	ui_smartEaseEndButton.setChecked(true);
	ui_interpolationOptionsLayersSelector.setCurrentIndex(0);
	ui_interpolationOptionsPropsSelector.setCurrentIndex(1);

	ui_animationTab.tabActivated = setCurrentAnimationPanel;

	//========== CONNECT EVENTS ========

	if (settings.data.uiMode != 0) ui_selectKeysOptionsButton.onClick = function() {setCurrentAnimationPanel(1);};
	ui_selectKeysCancelButton.onClick = function() {setCurrentAnimationPanel(0);};

	ui_selectKeysMethodSelector.onChange = ui_selectKeysMethodSelector_changed;
	ui_selectKeysCurrentButton.onClick = ui_selectKeysCurrentButton_clicked;
	ui_selectKeysAllButton.onClick = ui_selectKeysAllButton_clicked;
	if (settings.data.uiMode != 0) ui_selectKeysValidButton.onClick = ui_selectKeysButton.onClick = ui_selectKeysValidButton_clicked;
	ui_selectKeysPickButton.onClick = ui_selectKeysPickButton_clicked;
	ui_selectKeysCopyAnimButton.onClick = function() { ui_selectKeysValidButton_clicked(); ui_copyAnimButton_clicked(); }

	if (settings.data.uiMode == 1)
	{
		ui_easePresetAddButton.onClick = ui_easePresetAddButton_clicked;
		ui_easePresetRemoveButton.onClick = ui_easePresetRemoveButton_clicked;
		ui_easePresetsList.onChange = ui_easePresetsList_changed;
	}

	ui_kRovingButton.onClick = ui_kRovingButton_clicked;
	ui_kLinearButton.onClick = ui_kLinearButton_clicked;
	ui_kEaseInButton.onClick = ui_kEaseInButton_clicked;
	ui_kEaseOutButton.onClick = ui_kEaseOutButton_clicked;
	ui_kEaseButton.onClick = ui_kEaseButton_clicked;
	ui_kAutoButton.onClick = ui_kAutoButton_clicked;
	ui_kHoldButton.onClick = ui_kHoldButton_clicked;
	ui_kOptionsButton.onClick = function () { setCurrentAnimationPanel(4); };
	ui_interpolationOptionsCancelButton.onClick = function () { setCurrentAnimationPanel(0); };
	ui_interpolationOptionsPropsSelector.onChange = ui_interpolationOptionsPropsSelector_changed;

	ui_easeInSlider.onChange = ui_easeInSlider_changed;
	ui_easeInSlider.onChanging = ui_easeInSlider_changing;
	ui_easeOutSlider.onChange = ui_easeOutSlider_changed;
	ui_easeOutSlider.onChanging = ui_easeOutSlider_changing;

	ui_velocityInEdit.onChanging = ui_velocityInEdit_changing;
	ui_velocityOutEdit.onChanging = ui_velocityOutEdit_changing;
	ui_velocityInEdit.onChange = ui_velocityInEdit_changed;
	ui_velocityOutEdit.onChange = ui_velocityOutEdit_changed;

	ui_lockEaseButton.onClick = ui_lockEaseButton_clicked;

	ui_easeSwitchButton.onClick = ui_easeSwitchButton_clicked;
	ui_velocitySwitchButton.onClick = ui_velocitySwitchButton_clicked;

	ui_easePickButton.onClick = ui_easePickButton_clicked;
	ui_velocitySetButton.onClick = ui_velocitySetButton_clicked;
	ui_easeSetButton.onClick = ui_easeSetButton_clicked;
	ui_easeSetBothButton.onClick = ui_easeSetBothButton_clicked;

	ui_spatialLinButton.onClick = ui_spatialLinButton_clicked;
	ui_spatialBezButton.onClick = ui_spatialBezButton_clicked;
	ui_spatialLinBezButton.onClick = ui_spatialLinBezButton_clicked;
	ui_spatialBezLinButton.onClick = ui_spatialBezLinButton_clicked;

	ui_kleanerOptionsButton.onClick = function() {setCurrentAnimationPanel(2);};
	ui_kleanerCancelButton.onClick = function() {setCurrentAnimationPanel(0);};
	ui_kleanerButton.onClick = ui_kleanerValidButton.onClick = ui_kleanerButton_clicked;

	ui_copyAnimButton.onClick = ui_copyAnimButton_clicked;
	ui_pasteAnimButton.onClick = ui_copyPasteValidButton.onClick = ui_pasteAnimButton_clicked;
	ui_copyPasteAnimOptionsButton.onClick = function() {setCurrentAnimationPanel(3);};
	ui_copyPasteCancelButton.onClick = function() {setCurrentAnimationPanel(0);};

	debugLog.stopTimer("Keyframe tools ready.");
}
