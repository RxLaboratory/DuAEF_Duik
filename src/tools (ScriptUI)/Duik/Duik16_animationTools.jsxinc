function ui_buildAnimationTools(ui_animToolsTab)
{
	debugLog.startTimer("Loading Animation tools.");

	function setCurrentAnimToolsPanel(panel)
	{
		if (typeof panel === 'undefined') panel = 0;

		ui_animToolsGroup.visible = panel == 0;
		ui_blenderGroup.visible = panel == 1;
		ui_extractControllersOptionsGroup.visible = panel == 2;
		ui_motionTrailOptionsGroup.visible = panel == 5;
		uiexposureOptionsGroup.visible = panel == 7;
		ui_timeRemapOptionsGroup.visible = panel == 8;
		ui_celAnimGroup.visible = panel == 9;
		ui_ikFkOptionsGroup.visible = panel == 10;
	}

	//=========== EVENTS =============

	if (DuAEF.DuAE.App.version >= 15)
	{
		function ui_motionTrailColorBox_changed()
		{
			var mode = ui_motionTrailColorBox.selection.index;
			settings.data.motionTrailColorMode = mode;
			settings.save();
			ui_motionTrailColorGroup.enabled = mode == 1;
		}

		function ui_motionTrailColor_clicked()
		{
			var color = $.colorPicker();
			if (color == -1) return;
			color = DuAEF.DuJS.Color.hexToRGB(color,false);
			ui_motionTrailColorEdit.setText(DuAEF.DuJS.Color.rgbToHex(color));
			ui_motionTrailColorEdit_changed();
		}

		function ui_motionTrailColorEdit_changed()
		{
			settings.data.motionTrailColor = ui_motionTrailColorEdit.text;
			settings.save();

			var color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);
			DuAEF.DuScriptUI.setTextColor(ui_motionTrailColorLabel,color);
		}

		function ui_motionTrailButton_clicked()
		{
			var comp = DuAEF.DuAE.Project.getActiveComp();
			if (!comp) return;

			app.beginUndoGroup('Duik | ' + "Motion trail");

			//color
			var color = null;
			if (ui_motionTrailColorBox.selection.index == 1) color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);

			//trail layer
			var trailLayer = null;
			if (ui_motionTrailUseExistingSelector.index == 0)
			{
				for (var i = 1 ; i <= comp.numLayers ; i++)
				{
					var layer = comp.layer(i);
					if (layer instanceof ShapeLayer && layer.effect(DuAEF.Duik.PseudoEffectsMatchNames.MOTION_TRAIL))
					{
						trailLayer = layer;
						break;
					}
				}
			}

			var layers = DuAEF.DuAE.Comp.unselectLayers();

			if (layers.length > 0)
			{
				for (var i = 0 ; i < layers.length ; i++)
				{
					trailLayer = DuAEF.Duik.Animation.motionTrail(comp,layers[i],trailLayer,color);
				}
			}
			else
			{
				DuAEF.Duik.Animation.motionTrail(comp,undefined,trailLayer);
			}

			app.endUndoGroup();
		}
	}

	function ui_exposureButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var props = DuAEF.DuAE.Comp.getSelectedProps();
		app.beginUndoGroup('Duik | ' + "X-Sheet");

		var ok = false;
		if (props.length > 0)
		{
			var effect = null;
			for (var i = 0 ; i < props.length ; i++)
			{
				effect = DuAEF.Duik.Animation.xSheet(comp,props[i],effect);
				if (effect != null) ok = true;
			}
		}
		if (!ok)
		{
			effect = DuAEF.Duik.Animation.xSheet(comp);
		}

		if (ui_exposureDetectButton.checked && props.length > 0)
		{
			//detect limit
			var averageSpeed = DuAEF.DuAE.Property.getAverageSpeed(props);
			if (averageSpeed > 0)
			{
				var precision = averageSpeed*2.5;
				var frames = comp.duration / comp.frameDuration;
				//set Keyframes
				var step = 0;
				effect(19).addKey(0);
				for (var frame = 0 ; frame < frames ; frame++)
				{
					var time = frame*comp.frameDuration;

					var maxSpeed = 0;
					for (var j = 0 ; j < props.length ; j++)
					{
						var prop = props[j].getProperty();
						var speedTest = DuAEF.DuAE.Property.getSpeed(prop,time);
						if (speedTest > maxSpeed) maxSpeed = speedTest;
					}

					step += maxSpeed;

					if (step >= precision && averageSpeed > 0)
					{
						step = 0;
						effect(19).addKey(time);
					}
				}
				effect(7).setValue(2);
			}

		}

		app.endUndoGroup();
		setCurrentAnimToolsPanel(0);
	}

	function ui_timeremapButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var layers = comp.selectedLayers;
		var loopType = '';
		if (ui_timeRemapLoopInButton.checked) loopType = 'in';
		else if (ui_timeRemapLoopOutButton.checked) loopType = 'out';
		app.beginUndoGroup('Duik | ' + "Time Remap");
		DuAEF.Duik.Animation.timeRemap(layers,loopType);
		app.endUndoGroup();

		setCurrentAnimToolsPanel(0);
	}

	function ui_timeRemapLoopInButton_clicked()
	{
		if (ui_timeRemapLoopInButton.checked) ui_timeRemapLoopOutButton.setChecked(false);
	}

	function ui_timeRemapLoopOutButton_clicked()
	{
		if (ui_timeRemapLoopOutButton.checked) ui_timeRemapLoopInButton.setChecked(false);
	}

	function ui_onionSkinInButton_clicked()
	{
		ui_onionSkinInSlider.enabled = ui_onionSkinInButton.checked;
		if (!ui_onionSkinInButton.checked)
		{
			ui_onionSkinOutButton.setChecked(true);
			ui_onionSkinOutButton_clicked();
		}
		ui_onionSkinButton_clicked();
	}

	function ui_onionSkinOutButton_clicked()
	{
		ui_onionSkinOutSlider.enabled = ui_onionSkinOutButton.checked;
		if (!ui_onionSkinOutButton.checked)
		{
			ui_onionSkinInButton.setChecked(true);
			ui_onionSkinInButton_clicked();
		}
		ui_onionSkinButton_clicked();
	}

	function ui_onionSkinButton_clicked()
	{
		ui_onionSkinEdit.enabled = ui_onionSkinInGroup.enabled = ui_onionSkinOutGroup.enabled = ui_onionSkinButton.checked;

		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var layers = comp.selectedLayers;
		if (layers.length == 0) layers = comp.layers;

		var it = new Iterator(layers);
		app.beginUndoGroup('Duik | ' + "Update Onion Skin");

		var os = {};
		os.activated = ui_onionSkinButton.checked;
		os.duration = parseInt(ui_onionSkinEdit.text);
		os.exposure = parseInt(ui_celExpoEdit.text);
		if (ui_onionSkinOutButton.checked )os.outOpacity = ui_onionSkinOutSlider.value;
		else os.outOpacity = 0;
		if (ui_onionSkinInButton.checked )os.inOpacity = ui_onionSkinInSlider.value;
		else os.inOpacity = 0;

		while (!it.atEnd)
		{
			it.next();
			DuAEF.Duik.CelAnimation.onionSkin(layers[it.current],os);
		}

		app.endUndoGroup();
	}

	function ui_celCreateCelButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		var layer = null;

		if (ui_celSingleLayerSelector.index == 1)
		{
			//look for a layer with cels
			if (comp.selectedLayers.length == 0)
			{
				layer = DuAEF.Duik.getLayer(DuAEF.Duik.LayerTypes.CEL);
			}
			else
			{
				layer = DuAEF.Duik.getLayer(DuAEF.Duik.LayerTypes.CEL,true);
			}
		}

		app.beginUndoGroup('Duik | ' + "New celluloid");
		DuAEF.Duik.CelAnimation.createCel(comp,layer);
		app.endUndoGroup();

	}

	function ui_celPrevFrameButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;
		comp.time = comp.time - comp.frameDuration*parseInt(ui_celExpoEdit.text);
		ui_onionSkinButton_clicked();
	}

	function ui_celNextFrameButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;
		comp.time = comp.time + comp.frameDuration*parseInt(ui_celExpoEdit.text);
		ui_onionSkinButton_clicked();
	}

	function ui_ikToFkButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		app.beginUndoGroup('Duik | ' + "Snap IK to FK");

		var it = new Iterator(comp.selectedLayers);
		it.do(function (layer) {
			DuAEF.Duik.Animation.ik2fk(layer);
		});

		app.endUndoGroup();
	}

	function ui_fkToIkButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		app.beginUndoGroup('Duik | ' + "Snap FK to IK");

		var it = new Iterator(comp.selectedLayers);
		it.do(function (layer) {
			DuAEF.Duik.Animation.fk2ik(layer);
		});

		app.endUndoGroup();
	}

	function ui_ikFkButton_clicked()
	{
		var comp = DuAEF.DuAE.Project.getActiveComp();
		if (!comp) return;

		app.beginUndoGroup('Duik | ' + "FK/IK Switch");

		var it = new Iterator(comp.selectedLayers);
		it.do(function (layer) {
			DuAEF.Duik.Animation.switchIkFk(layer);
		});

		app.endUndoGroup();
	}

	function ui_extractControllersMPSelector_changed()
	{
		shared.extractUsingMP = ui_extractControllersMPSelector.index == 1;
	}

	function ui_extractControllersOptionsButton_clicked()
	{
		if (shared.extractUsingMP) ui_extractControllersMPSelector.setCurrentIndex(1);
		else ui_extractControllersMPSelector.setCurrentIndex(0);
		setCurrentAnimToolsPanel(2);
	}

	function ui_blenderAnimRefreshSelector_clicked()
	{
		ui_blenderAnimSelector.removeAll();
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		if (layers.length == 0) return;
		var layer = layers[0];
		var params = DuAEF.Duik.getDuikMarkerParameters(layer);
		if (!params) return;
		if (!params.animationBlenderComp) return;
		var blenderComp = DuAEF.DuAE.Project.getItemById(params.animationBlenderComp);
		if (!blenderComp) return;

		//get all markers of the comp
		var markers = DuAEF.Duik.AnimationBlender.getAnimMarkers(blenderComp);

		for (var i = 1, num = markers.numKeys; i <= num; i++)
		{
			var name = markers.keyValue(i).comment;
			ui_blenderAnimSelector.add('item',name);
		}
	}

	function ui_blenderAnimValidButton_clicked()
	{
		if (ui_blenderAnimSelector.selection < 0) return;
		var layers = DuAEF.DuAE.Comp.getSelectedLayers();
		if (layers.length == 0) return;
		var layer = layers[0];
		var marker = new MarkerValue(ui_blenderAnimSelector.selection.text);
		layer.property('ADBE Marker').setValueAtTime(layer.containingComp.time,marker);

	}

	//============ UI ===============

	ui_animToolsTab.orientation = 'stack';

	var ui_animToolsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');

	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_animToolsGroup,"Animation tools");
	var ui_ikFkGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsGroup,'row');
	var ui_ikFkButton = DuAEF.DuScriptUI.addButton(ui_ikFkGroup,"IK/FK Switch",DuAEF.DuBinary.toFile(w25_ikfk_l),"IK/FK Switch",DuAEF.DuBinary.toFile(w25_ikfk_r));
	ui_ikFkButton.setHelp("IK/FK Switch", ikfkswitchHelp, ikfkswitchLink);
	var ui_ikFkOptionsButton = DuAEF.DuScriptUI.addButton(ui_ikFkGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"IK/FK Options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_ikFkOptionsButton.setHelp("IK/FK Switch", ikfkswitchHelp, ikfkswitchLink);
	ui_ikFkOptionsButton.group.alignment = ['right','center'];
	var ui_blenderButton = DuAEF.DuScriptUI.addButton(ui_animToolsGroup,"Animation blender...",DuAEF.DuBinary.toFile(w25_blender_l),"Blends different animations together,\nin an event-driven way.",DuAEF.DuBinary.toFile(w25_blender_r));
	ui_blenderButton.setHelp("Animation Blender",animationblenderHelp, animationblenderLink);
	var ui_motionTrailGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsGroup,'row');
	var ui_motionTrailButton = DuAEF.DuScriptUI.addButton(ui_motionTrailGroup,"Motion trail",DuAEF.DuBinary.toFile(w25_anim_l),"Add a motion trail for the selected layer",DuAEF.DuBinary.toFile(w25_anim_r));
	ui_motionTrailButton.setHelp("Motion Trail", motiontrailHelp, motiontrailLink);
	var ui_motionTrailOptionsButton = DuAEF.DuScriptUI.addButton(ui_motionTrailGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Motion trail options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_motionTrailOptionsButton.setHelp("Motion Trail", motiontrailHelp, motiontrailLink);
	ui_motionTrailOptionsButton.group.alignment = ['right','center'];
	if (DuAEF.DuAE.App.version < 15)
	{
		ui_motionTrailGroup.enabled = false;
		if (settings.data.uiMode != 2) ui_motionTrailButton.label.text = 'CC2018';
	}
	var ui_exposureGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsGroup,'row');
	var ui_exposureButton = DuAEF.DuScriptUI.addButton(ui_exposureGroup,"X-Sheet",DuAEF.DuBinary.toFile(w25_exposure_l),"Change the exposure of the animation",DuAEF.DuBinary.toFile(w25_exposure_r));
	ui_exposureButton.setHelp("X-Sheet", xsheetHelp, xsheetLink);
	var ui_exposureOptionsButton = DuAEF.DuScriptUI.addButton(ui_exposureGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Exposure options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_exposureOptionsButton.setHelp("X-Sheet", xsheetHelp, xsheetLink);
	ui_exposureOptionsButton.group.alignment = ['right','center'];
	var ui_timeRemapGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsGroup,'row');
	var ui_timeremapButton = DuAEF.DuScriptUI.addButton(ui_timeRemapGroup,"Time remap",DuAEF.DuBinary.toFile(w25_timeremap_l),"Enable time remapping",DuAEF.DuBinary.toFile(w25_timeremap_r));
	ui_timeremapButton.setHelp("Time Remap",timeremapHelp, timeremapLink);
	var ui_timeremapOptionsButton = DuAEF.DuScriptUI.addButton(ui_timeRemapGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Time remap options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_timeremapOptionsButton.setHelp("Time Remap",timeremapHelp, timeremapLink);
	ui_timeremapOptionsButton.group.alignment = ['right','center'];
	var ui_extractControllersGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsGroup,'row');
	var ui_extractControllersButton = DuAEF.DuScriptUI.addButton(ui_extractControllersGroup,"Extract controllers",DuAEF.DuBinary.toFile(w25_extractcontrollers_l),"Extract all the controllers from the precomposition",DuAEF.DuBinary.toFile(w25_extractcontrollers_r));
	ui_extractControllersButton.setHelp("Extract Controllers", controllertoolsHelp, controllertoolsLink);
	if (DuAEF.DuAE.App.version >= 15.1)
	{
		var ui_extractControllersOptionsButton = DuAEF.DuScriptUI.addButton(ui_extractControllersGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Extract controllers options",DuAEF.DuBinary.toFile(w14_plus_r));
		ui_extractControllersOptionsButton.group.alignment = ['right','center'];
	}
	var ui_celAnimButton = DuAEF.DuScriptUI.addButton(ui_animToolsGroup,"Cel animation...",DuAEF.DuBinary.toFile(w25_cel_l),"Cel animation",DuAEF.DuBinary.toFile(w25_cel_r));
	ui_celAnimButton.setHelp("Cel Animation", celanimationHelp, celanimationLink);

	// Animation Blender
	var ui_blenderGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_blenderGroup,"Animation blender");
	//animate
	var ui_blenderAnimateGroup = DuAEF.DuScriptUI.addGroup(ui_blenderGroup,'column');
	var ui_blenderAnimSelectorGroup = DuAEF.DuScriptUI.addGroup(ui_blenderAnimateGroup);
	var ui_blenderAnimSelector = ui_blenderAnimSelectorGroup.add("dropdownlist");
	ui_blenderAnimSelector.alignment = ['fill','fill'];
	var ui_blenderAnimRefreshSelector = DuAEF.DuScriptUI.addButton(ui_blenderAnimSelectorGroup,'',DuAEF.DuBinary.toFile(w14_update_m),"Refresh the list of animations",DuAEF.DuBinary.toFile(w14_update_l));
	ui_blenderAnimRefreshSelector.alignment = ['right','top'];
	var ui_blenderAnimValidGroup = DuAEF.DuScriptUI.addGroup(ui_blenderAnimateGroup);
	ui_blenderAnimValidGroup.alignment = ['fill','center'];
	var ui_blenderAnimCancelButton = DuAEF.DuScriptUI.addButton(ui_blenderAnimValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_blenderAnimValidButton = DuAEF.DuScriptUI.addButton(ui_blenderAnimValidGroup,"Set Anim",DuAEF.DuBinary.toFile(w25_check_g),"Sets the animation to the blender layer.",DuAEF.DuBinary.toFile(w25_check_r));
	ui_blenderAnimValidButton.setHelp("Animation Blender",animationblenderHelp,animationblenderLink);

	// Extract Controllers
	var ui_extractControllersOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	DuAEF.DuScriptUI.addSeparator(ui_extractControllersOptionsGroup,settings.data.uiMode != 2 ? "Extract Controllers" : "");
	var ui_extractControllersMPSelector = DuAEF.DuScriptUI.addSelector(ui_extractControllersOptionsGroup);
	ui_extractControllersMPSelector.addButton("Use expressions",DuAEF.DuBinary.toFile(w25_js_l),"Use expressions to link the controllers to the precomp",DuAEF.DuBinary.toFile(w25_js_r));
	ui_extractControllersMPSelector.addButton("Use master properties",DuAEF.DuBinary.toFile(w25_masterprops_l),"Use master properties to link the controllers to the precomp",DuAEF.DuBinary.toFile(w25_masterprops_r));
	var ui_extractControllersValidGroup = DuAEF.DuScriptUI.addGroup(ui_extractControllersOptionsGroup);
	ui_extractControllersValidGroup.alignment = ['fill','top'];
	var ui_extractControllersCancelButton = DuAEF.DuScriptUI.addButton(ui_extractControllersValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_extractControllersValidButton = DuAEF.DuScriptUI.addButton(ui_extractControllersValidGroup,"Extract!",DuAEF.DuBinary.toFile(w25_check_g),"Extract controllers from the precomposition",DuAEF.DuBinary.toFile(w25_check_r));

	// Motion Trails option
	var ui_motionTrailOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_motionTrailOptionsGroup,"Motion trails");
	ui_motionTrailOptionsGroup.alignment = ['fill','top'];
	ui_motionTrailOptionsGroup.alignChildren = ['fill','top'];
	var ui_motionTrailUseExistingSelector = DuAEF.DuScriptUI.addSelector(ui_motionTrailOptionsGroup);
	ui_motionTrailUseExistingSelector.addButton("Use existing layer",DuAEF.DuBinary.toFile(w32_selectlayer_l),"Use an already existing layer for the motion trails, if any.",DuAEF.DuBinary.toFile(w32_selectlayer_r));
	ui_motionTrailUseExistingSelector.addButton("Create new layer",DuAEF.DuBinary.toFile(w32_addlayer_l),"Creates a new layer for the trails.",DuAEF.DuBinary.toFile(w32_addlayer_r));
	ui_motionTrailUseExistingSelector.setCurrentIndex(0);
	var ui_motionTrailColorBox = ui_motionTrailOptionsGroup.add('dropdownlist',undefined,["Random Color","Custom Color"]);
	var ui_motionTrailColorGroup = DuAEF.DuScriptUI.addGroup(ui_motionTrailOptionsGroup,'row');
	ui_motionTrailColorGroup.alignment = ['center','top'];
	var ui_motionTrailColorLabel = ui_motionTrailColorGroup.add('statictext',undefined,"Color #");
	var ui_motionTrailColorEdit = DuAEF.DuScriptUI.addEditText(ui_motionTrailColorGroup,'EC1818');
	var ui_motionTrailValidGroup = DuAEF.DuScriptUI.addGroup(ui_motionTrailOptionsGroup);
	var ui_motionTrailCancelButton = DuAEF.DuScriptUI.addButton(ui_motionTrailValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_motionTrailValidButton = DuAEF.DuScriptUI.addButton(ui_motionTrailValidGroup,"Create",DuAEF.DuBinary.toFile(w25_check_g),"Create motion trails",DuAEF.DuBinary.toFile(w25_check_r));

	// Exposure options
	var uiexposureOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(uiexposureOptionsGroup,"X-Sheet");
	uiexposureOptionsGroup.alignment = ['fill','top'];
	var ui_exposureDetectButton = DuAEF.DuScriptUI.addCheckBox(uiexposureOptionsGroup,"Auto-Detect",DuAEF.DuBinary.toFile(w32_detectexposure_l),"Try to set a nice animation exposure based on the property velocities.",DuAEF.DuBinary.toFile(w32_detectexposure_r));
	var ui_exposureValidGroup = DuAEF.DuScriptUI.addGroup(uiexposureOptionsGroup);
	var ui_exposureCancelButton = DuAEF.DuScriptUI.addButton(ui_exposureValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_exposureValidButton = DuAEF.DuScriptUI.addButton(ui_exposureValidGroup,"Create",DuAEF.DuBinary.toFile(w25_check_g),"Exposure controls",DuAEF.DuBinary.toFile(w25_check_r));

	// Time remap options
	var ui_timeRemapOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_timeRemapOptionsGroup,"Time remap");
	ui_timeRemapOptionsGroup.alignment = ['fill','top'];
	var ui_timeRemapLoopInButton = DuAEF.DuScriptUI.addCheckBox(ui_timeRemapOptionsGroup,"Loop in",DuAEF.DuBinary.toFile(w32_loopin_l),"Add a loop in expression.",DuAEF.DuBinary.toFile(w32_loopin_r));
	var ui_timeRemapLoopOutButton = DuAEF.DuScriptUI.addCheckBox(ui_timeRemapOptionsGroup,"Loop out",DuAEF.DuBinary.toFile(w32_loopout_l),"Add a loop out expression.",DuAEF.DuBinary.toFile(w32_loopout_r));
	var ui_timeRemapValidGroup = DuAEF.DuScriptUI.addGroup(ui_timeRemapOptionsGroup);
	ui_timeRemapValidGroup.alignment = ['fill','top'];
	var ui_timeRemapCancelButton = DuAEF.DuScriptUI.addButton(ui_timeRemapValidGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	var ui_timeRemapValidButton = DuAEF.DuScriptUI.addButton(ui_timeRemapValidGroup,"Create",DuAEF.DuBinary.toFile(w25_check_g),"Exposure controls",DuAEF.DuBinary.toFile(w25_check_r));

	// Cel anim
	var ui_celAnimGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_celAnimGroup,"Cel animation");
	var ui_celAnimCelsGroup = DuAEF.DuScriptUI.addGroup(ui_celAnimGroup,'column');
	ui_celAnimCelsGroup.alignment = ['fill','top'];
	ui_celAnimCelsGroup.alignChildren = ['fill','top'];
	var ui_celSingleLayerSelector = DuAEF.DuScriptUI.addSelector(ui_celAnimCelsGroup);
	ui_celSingleLayerSelector.addButton("Multiple layers",DuAEF.DuBinary.toFile(w25_layers_l),"Creates cels as new layers",DuAEF.DuBinary.toFile(w25_layers_r));
	ui_celSingleLayerSelector.addButton("Single layer",DuAEF.DuBinary.toFile(w25_singlelayer_l),"Creates cels as new paint effects on a single layer",DuAEF.DuBinary.toFile(w25_singlelayer_r));
	ui_celSingleLayerSelector.setCurrentIndex(0);
	var ui_celCreateCelButton = DuAEF.DuScriptUI.addButton(ui_celAnimCelsGroup,"New Cel.",DuAEF.DuBinary.toFile(w25_newcel_l),"Creates a new animation cel.",DuAEF.DuBinary.toFile(w25_newcel_r));
	DuAEF.DuScriptUI.addSeparator(ui_celAnimGroup);
	var ui_onionSkinGroup = DuAEF.DuScriptUI.addGroup(ui_celAnimGroup,'column');
	ui_onionSkinGroup.alignment = ['fill','top'];
	ui_onionSkinGroup.alignChildren = ['fill','top'];
	var ui_activateOnionSkinGroup = DuAEF.DuScriptUI.addGroup(ui_onionSkinGroup,'row');
	ui_activateOnionSkinGroup.alignment = ['center','top'];
	var ui_onionSkinButton = DuAEF.DuScriptUI.addCheckBox(ui_activateOnionSkinGroup,settings.data.uiMode == 2 ? '' : "Onion skin: ",DuAEF.DuBinary.toFile(w25_onion_l),"Activates onion skin",DuAEF.DuBinary.toFile(w25_onion_r),DuAEF.DuBinary.toFile(w25_onion_r));
	var ui_onionSkinEdit = DuAEF.DuScriptUI.addEditText(ui_activateOnionSkinGroup,'5',''," frames");
	var ui_onionSkinInGroup = DuAEF.DuScriptUI.addGroup(ui_onionSkinGroup,'row');
	var ui_onionSkinInButton = DuAEF.DuScriptUI.addCheckBox(ui_onionSkinInGroup,"In: ",DuAEF.DuBinary.toFile(w14_cancel_l),"In Opacity",DuAEF.DuBinary.toFile(w14_check_g),DuAEF.DuBinary.toFile(w14_check_r));
	var ui_onionSkinInSlider = DuAEF.DuScriptUI.addSlider(ui_onionSkinInGroup,50,0,100,'row',false,'','%');
	ui_onionSkinInSlider.alignment = ['fill','center'];
	var ui_onionSkinOutGroup = DuAEF.DuScriptUI.addGroup(ui_onionSkinGroup,'row');
	var ui_onionSkinOutButton = DuAEF.DuScriptUI.addCheckBox(ui_onionSkinOutGroup,"Out: ",DuAEF.DuBinary.toFile(w14_cancel_l),"Out Opacity",DuAEF.DuBinary.toFile(w14_check_g),DuAEF.DuBinary.toFile(w14_check_r));
	var ui_onionSkinOutSlider = DuAEF.DuScriptUI.addSlider(ui_onionSkinOutGroup,50,0,100,'row',false,'','%');
	ui_onionSkinOutSlider.alignment = ['fill','center'];
	DuAEF.DuScriptUI.addSeparator(ui_celAnimGroup);
	var ui_celNavGroup = DuAEF.DuScriptUI.addGroup(ui_celAnimGroup,'row');
	ui_celNavGroup.alignment = ['center','top'];
	var ui_celPrevFrameButton = DuAEF.DuScriptUI.addButton(ui_celNavGroup,'',DuAEF.DuBinary.toFile(w32_previousframe_l),"Previous frame",DuAEF.DuBinary.toFile(w32_previousframe_r));
	var ui_celExpoEdit = DuAEF.DuScriptUI.addEditText(ui_celNavGroup,'02');
	ui_celExpoEdit.static.helpTip = "Animation exposure";
	var ui_celNextFrameButton = DuAEF.DuScriptUI.addButton(ui_celNavGroup,'',DuAEF.DuBinary.toFile(w32_nextframe_l),"Next frame",DuAEF.DuBinary.toFile(w32_nextframe_r));
	DuAEF.DuScriptUI.addSeparator(ui_celAnimGroup);
	var ui_celAnimCancelButton = DuAEF.DuScriptUI.addButton(ui_celAnimGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));
	ui_celAnimCancelButton.alignment = ['center','top'];

	//IK FK
	var ui_ikFkOptionsGroup = DuAEF.DuScriptUI.addGroup(ui_animToolsTab,'column');
	if (settings.data.uiMode != 2) DuAEF.DuScriptUI.addSeparator(ui_ikFkOptionsGroup,"IK/FK");
	ui_ikFkOptionsGroup.alignment = ['fill','top'];
	var ui_fkToIkButton = DuAEF.DuScriptUI.addButton(ui_ikFkOptionsGroup,"Snap FK to IK",DuAEF.DuBinary.toFile(w25_fk2ik_l),"Aligns FK rotation values to current IK.",DuAEF.DuBinary.toFile(w25_fk2ik_r));
	var ui_ikToFkButton = DuAEF.DuScriptUI.addButton(ui_ikFkOptionsGroup,"Snap IK to FK",DuAEF.DuBinary.toFile(w25_ik2fk_l),"Aligns IK position value to current FK.",DuAEF.DuBinary.toFile(w25_ik2fk_r));
	var ui_ikFkSwitchButton = DuAEF.DuScriptUI.addButton(ui_ikFkOptionsGroup,"IK/FK Switch",DuAEF.DuBinary.toFile(w25_ikfk_l),"IK/FK Switch",DuAEF.DuBinary.toFile(w25_ikfk_r));
	var ui_ikFkCancelButton = DuAEF.DuScriptUI.addButton(ui_ikFkOptionsGroup,"Back",DuAEF.DuBinary.toFile(w25_back_m),"Back",DuAEF.DuBinary.toFile(w25_back_r));

	//========= INIT ===================

	ui_motionTrailColorEdit.setText(settings.data.motionTrailColor);
	var color = DuAEF.DuJS.Color.hexToRGB(ui_motionTrailColorEdit.text);
	DuAEF.DuScriptUI.setTextColor(ui_motionTrailColorLabel,color);
	ui_motionTrailColorBox.selection = settings.data.motionTrailColorMode;
	ui_motionTrailColorGroup.enabled = settings.data.motionTrailColorMode == 1;
	ui_timeRemapLoopOutButton.setChecked(true);
	ui_onionSkinInSlider.enabled = false;
	ui_onionSkinOutButton.setChecked(true);
	ui_onionSkinButton.setChecked(true);
	ui_extractControllersMPSelector.setCurrentIndex(0);

	ui_animToolsTab.tabActivated = setCurrentAnimToolsPanel;

	//=========== CONNECT EVENTS ==========

	if (DuAEF.DuAE.App.version >= 15)
	{
		ui_motionTrailColorLabel.addEventListener("mousedown",ui_motionTrailColor_clicked,false);
		ui_motionTrailColorEdit.onChange = ui_motionTrailColorEdit_changed;
		ui_motionTrailColorBox.onChange = ui_motionTrailColorBox_changed;
		ui_motionTrailButton.onClick = ui_motionTrailValidButton.onClick = ui_motionTrailButton_clicked;
		ui_motionTrailOptionsButton.onClick = function () {setCurrentAnimToolsPanel(5);};
		ui_motionTrailCancelButton.onClick = function() {setCurrentAnimToolsPanel(0);};
	}

	ui_blenderButton.onClick = function () { ui_blenderAnimRefreshSelector_clicked(); setCurrentAnimToolsPanel(1); };
	ui_blenderAnimCancelButton.onClick = function () { setCurrentAnimToolsPanel(0); };
	ui_blenderAnimRefreshSelector.onClick = ui_blenderAnimRefreshSelector_clicked;
	ui_blenderAnimValidButton.onClick = ui_blenderAnimValidButton_clicked;

	ui_extractControllersButton.onClick = shared.extractControllers;
	ui_extractControllersValidButton.onClick = function () { shared.extractControllers(); setCurrentAnimToolsPanel(0); };
	if (DuAEF.DuAE.App.version >= 15.1)
	{
		ui_extractControllersOptionsButton.onClick = ui_extractControllersOptionsButton_clicked;
	}
	ui_extractControllersCancelButton.onClick = function () {setCurrentAnimToolsPanel(0);};
	ui_extractControllersMPSelector.onChange = ui_extractControllersMPSelector_changed;

	ui_exposureButton.onClick = ui_exposureValidButton.onClick = ui_exposureButton_clicked;
	ui_exposureCancelButton.onClick = function() {setCurrentAnimToolsPanel(0);};
	ui_exposureOptionsButton.onClick = function() {setCurrentAnimToolsPanel(7);};

	ui_timeremapButton.onClick = ui_timeRemapValidButton.onClick = ui_timeremapButton_clicked;
	ui_timeremapOptionsButton.onClick = function() {setCurrentAnimToolsPanel(8);};
	ui_timeRemapCancelButton.onClick = function() {setCurrentAnimToolsPanel(0);};
	ui_timeRemapLoopInButton.onClick = ui_timeRemapLoopInButton_clicked;
	ui_timeRemapLoopOutButton.onClick = ui_timeRemapLoopOutButton_clicked;

	ui_celAnimCancelButton.onClick = function() {setCurrentAnimToolsPanel(0);};
	ui_celAnimButton.onClick = function() {setCurrentAnimToolsPanel(9);};
	ui_onionSkinInButton.onClick = ui_onionSkinInButton_clicked;
	ui_onionSkinOutButton.onClick = ui_onionSkinOutButton_clicked;
	ui_onionSkinButton.onClick = ui_onionSkinButton_clicked;
	ui_celCreateCelButton.onClick = ui_celCreateCelButton_clicked;
	ui_onionSkinInSlider.onChange = ui_onionSkinOutSlider.onChange = ui_onionSkinEdit.onChange = ui_celExpoEdit.onChange = ui_onionSkinButton_clicked;
	ui_celPrevFrameButton.onClick = ui_celPrevFrameButton_clicked;
	ui_celNextFrameButton.onClick = ui_celNextFrameButton_clicked;

	ui_ikFkOptionsButton.onClick = function() {setCurrentAnimToolsPanel(10);};
	ui_ikFkCancelButton.onClick = function() {setCurrentAnimToolsPanel(0);};
	ui_ikToFkButton.onClick = ui_ikToFkButton_clicked;
	ui_fkToIkButton.onClick = ui_fkToIkButton_clicked;
	ui_ikFkButton.onClick = function(){ui_ikFkButton_clicked();setCurrentAnimToolsPanel(0);};
	ui_ikFkSwitchButton.onClick = ui_ikFkButton_clicked;

	debugLog.stopTimer("Animation tools ready.");
}
