function ui_buildStructures(ui_structuresMainGroup)
{
	debugLog.startTimer("Loading Structures.");

	//========== FUNCTIONS ==============
	function setCurrentStructuresPanel(panel)
	{
		if (panel == undefined) panel = 0;

		ui_structuresMainPanelGroup.visible = panel == 0;
		ui_structuresEditGroup.visible = panel == 6;
	}

	function initStructuresUI()
	{
		setCurrentStructuresPanel(0);
	}

	// ============= EVENTS =============
	
	//HOMINOID
	function ui_humanButton_clicked(walk)
	{
		walk = def( walk, false);

		var numSpine = parseInt( ui_spineEdit.text );
		if ( isNaN( numSpine ) ) numSpine = 0;
		var numNeck = parseInt( ui_neckEdit.text );
		if ( isNaN( numNeck ) ) numNeck = 0;
		var type = DuAEF.Duik.Autorig.AnimalTypes.PLANTIGRADE;

		var structs = Duik.structures.mammal (
			DuAEF.Duik.Autorig.AnimalTypes.PLANTIGRADE,
			numSpine,
			numNeck,
			ui_hipsButton.checked,
			ui_headButton.checked,
			ui_armShoulderButton.checked,
			ui_armHumerusButton.checked,
			ui_armRadiusButton.checked,
			ui_armHandButton.checked,
			ui_legFemurButton.checked,
			ui_legTibiaButton.checked,
			ui_legFootButton.checked,
			ui_legClawsButton.checked
			)

		var structures = structs[0];
		var structureLayers = structs[1];

		if (walk)
		{
			//bake structures
			for (var i = 0,num = structures.length ; i < num ; i++) { structures[i].bakeAppearence(); }
			//autorig
			var ctrls = DuAEF.Duik.Autorig.rig(structureLayers);
			for (var i = 0,num = ctrls.length ; i < num ; i++) { ctrls[i].bakeAppearance(); }
			DuAEF.Duik.Automation.autoWalk(ctrls);
		}
		setCurrentStructuresPanel(0);
	}

	//ARM
	function ui_armPlantiButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_armPlantiImage.visible = true;
			ui_armDigiImage.visible = false;
			ui_armUnguImage.visible = false;
			ui_armPlantiLegImage.visible = false;
		}

		ui_armPlantiButton.setChecked(true);
		ui_armDigiButton.setChecked(false);
		ui_armUnguButton.setChecked(false);

		ui_armClawsButton.label.text = "Claws";
	}

	function ui_armDigiButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_armPlantiImage.visible = false;
			ui_armDigiImage.visible = true;
			ui_armUnguImage.visible = false;
			ui_armPlantiLegImage.visible = false;
		}
		ui_armPlantiButton.setChecked(false);
		ui_armDigiButton.setChecked(true);
		ui_armUnguButton.setChecked(false);

		ui_armClawsButton.label.text = "Claws";
	}

	function ui_armUnguButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_armPlantiImage.visible = false;
			ui_armDigiImage.visible = false;
			ui_armUnguImage.visible = true;
			ui_armPlantiLegImage.visible = false;
		}
		ui_armPlantiButton.setChecked(false);
		ui_armDigiButton.setChecked(false);
		ui_armUnguButton.setChecked(true);

		ui_armClawsButton.label.text = "Hoof";
	}

	function ui_armClawsButton_clicked()
	{
		if (settings.data.uiMode >= 2) return;
		if (!ui_armPlantiButton.checked) return;
		if (ui_armClawsButton.checked)
		{
			ui_armPlantiLegImage.visible = true;
			ui_armPlantiImage.visible = false;
		}
		else
		{
			ui_armPlantiLegImage.visible = false;
			ui_armPlantiImage.visible = true;
		}
	}

	function ui_armValidButton_clicked(forceLink)
	{
		var type = DuAEF.Duik.Autorig.AnimalTypes.PLANTIGRADE;
		if (ui_armDigiButton.checked) type = DuAEF.Duik.Autorig.AnimalTypes.DIGITIGRADE;
		if (ui_armUnguButton.checked) type = DuAEF.Duik.Autorig.AnimalTypes.UNGULATE;

		Duik.structures.arm (
			type,
			ui_armShoulderButton.checked,
			ui_armHumerusButton.checked,
			ui_armRadiusButton.checked,
			ui_armHandButton.checked,
			ui_armClawsButton.checked,
			forceLink
		);

		setCurrentStructuresPanel(0);
	}

	//LEG
	function ui_legPlantiButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_legPlantiImage.visible = true;
			ui_legDigiImage.visible = false;
			ui_legUnguImage.visible = false;
		}

		ui_legPlantiButton.setChecked(true);
		ui_legDigiButton.setChecked(false);
		ui_legUnguButton.setChecked(false);

		ui_legClawsButton.label.text = "Toes";
	}

	function ui_legDigiButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_legPlantiImage.visible = false;
			ui_legDigiImage.visible = true;
			ui_legUnguImage.visible = false;
		}
		ui_legPlantiButton.setChecked(false);
		ui_legDigiButton.setChecked(true);
		ui_legUnguButton.setChecked(false);

		ui_legClawsButton.label.text = "Claws";
	}

	function ui_legUnguButton_clicked()
	{
		if (settings.data.uiMode < 2)
		{
			ui_legPlantiImage.visible = false;
			ui_legDigiImage.visible = false;
			ui_legUnguImage.visible = true;
		}
		ui_legPlantiButton.setChecked(false);
		ui_legDigiButton.setChecked(false);
		ui_legUnguButton.setChecked(true);

		ui_legClawsButton.label.text = "Hoof";
	}

	function ui_legValidButton_clicked(forceLink)
	{
		var type = DuAEF.Duik.Autorig.AnimalTypes.PLANTIGRADE;
		if (ui_legDigiButton.checked) type = DuAEF.Duik.Autorig.AnimalTypes.DIGITIGRADE;
		if (ui_legUnguButton.checked) type = DuAEF.Duik.Autorig.AnimalTypes.UNGULATE;

		Duik.structures.leg(
			type,
			ui_legFemurButton.checked,
			ui_legTibiaButton.checked,
			ui_legFootButton.checked,
			ui_legClawsButton.checked,
			forceLink
		);

		setCurrentStructuresPanel(0);
	}

	//SPINE
	function ui_spineValidButton_clicked(forceLink)
	{
		
		var numSpine = parseInt(ui_spineEdit.text);
		if (isNaN(numSpine)) numSpine = 0;
		var numNeck = parseInt(ui_neckEdit.text);
		if (isNaN(numNeck)) numNeck = 0;

		Duik.structures.spine(
			numSpine,
			numNeck,
			ui_hipsButton.checked,
			ui_headButton.checked,
			forceLink
		);

		setCurrentStructuresPanel(0);
	}

	//TAIL
	function ui_tailValidButton_clicked(forceLink)
	{
		var numTail = parseInt(ui_tailEdit.text);
    	if (isNaN(numTail)) return;

		Duik.structures.tail(
			numTail,
			forceLink
		);

		setCurrentStructuresPanel(0);
	}

	//CUSTOM
	function ui_structuresCustomNameEdit_activated()
	{
		if (ui_structuresCustomNameEdit.text == "Name") ui_structuresCustomNameEdit.setText('');
	}

	function ui_structuresCustomNameEdit_Deactivated()
	{
		if (ui_structuresCustomNameEdit.text == '') ui_structuresCustomNameEdit.setText("Name");
	}

	function ui_customStructureButton_clicked(randomColor, forceLink)
	{
		var num = parseInt(ui_structuresCustomNumberEdit.text);

		Duik.structures.custom(
			num,
			ui_structuresCustomNameEdit.text,
			forceLink,
			randomColor
		);
		setCurrentStructuresPanel(0);
	}

	function ui_structuresShowButton_clicked(invert)
	{
		Duik.structures.show ( invert );
	}

	function ui_structuresEditModeButton_clicked()
	{
		Duik.structures.edit( );
	}

	function ui_structuresSelectButton_clicked()
	{
		Duik.structures.select();
	}

	function ui_structuresDuplicateButton_clicked()
	{
		Duik.structures.duplicate( );
	}

	function ui_autorigButton_clicked ()
    {
        Duik.constraints.autorig();
    }

	// ============= UI =================

	ui_structuresMainGroup.orientation = 'stack';

	//MAIN
	var ui_structuresMainPanelGroup = DuAEF.DuScriptUI.addGroup(ui_structuresMainGroup,'column');
	if ( settings.data.uiMode < 2 && !standAlone ) DuAEF.DuScriptUI.addSeparator(ui_structuresMainPanelGroup, "Structures");
	else if ( !standAlone ) DuAEF.DuScriptUI.addSeparator(ui_structuresMainPanelGroup, "");
	var ui_structuresGroup1 = DuAEF.DuScriptUI.addGroup(ui_structuresMainPanelGroup,settings.data.uiMode >= 2 ? 'row' : 'column');
	ui_structuresGroup1.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];
	ui_structuresGroup1.alignChildren = ['fill','top'];
	var ui_humanButton = DuAEF.DuScriptUI.addButton(ui_structuresGroup1,settings.data.uiMode >= 2 ? '' : "Hominoid",DuAEF.DuBinary.toFile(w25_human_l),"Add a structure for a hominoid",DuAEF.DuBinary.toFile(w25_human_r));
	ui_humanButton.setHelp("Hominoid",createstructuresHelp,createstructuresLink);
	var ui_structuresGroup2 = DuAEF.DuScriptUI.addGroup(ui_structuresMainPanelGroup,settings.data.uiMode >= 2 ? 'row' : 'column');
	ui_structuresGroup2.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];
	ui_structuresGroup2.alignChildren = ['fill','top'];
	var ui_armGroup = DuAEF.DuScriptUI.addGroup(ui_structuresGroup2,settings.data.uiMode >= 2 ? 'column' : 'row');
	var ui_armButton = DuAEF.DuScriptUI.addButton(ui_armGroup,settings.data.uiMode >= 2 ? '' : "Arm (or front leg)",DuAEF.DuBinary.toFile(w25_arm_l),"Add a structure for an arm",DuAEF.DuBinary.toFile(w25_arm_r));
	ui_armButton.setHelp("Arm / Front Leg",createstructuresHelp,createstructuresLink);
	var ui_armOptionsButton = DuAEF.DuScriptUI.addButton(ui_armGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Arm options",DuAEF.DuBinary.toFile(w14_plus_r));
	var ui_legGroup = DuAEF.DuScriptUI.addGroup(ui_structuresGroup2,settings.data.uiMode >= 2 ? 'column' : 'row');
	var ui_legButton = DuAEF.DuScriptUI.addButton(ui_legGroup,settings.data.uiMode >= 2 ? '' : "Leg",DuAEF.DuBinary.toFile(w25_leg_l),"Add a structure for a leg",DuAEF.DuBinary.toFile(w25_leg_r));
	ui_legButton.setHelp("(Back) Leg", createstructuresHelp, createstructuresLink);
	var ui_legOptionsButton = DuAEF.DuScriptUI.addButton(ui_legGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Leg options",DuAEF.DuBinary.toFile(w14_plus_r));
	var ui_spineGroup = DuAEF.DuScriptUI.addGroup(ui_structuresGroup2,settings.data.uiMode >= 2 ? 'column' : 'row');
	var ui_spineButton = DuAEF.DuScriptUI.addButton(ui_spineGroup,settings.data.uiMode >= 2 ? '' : "Spine",DuAEF.DuBinary.toFile(w25_spine_l),"Add a structure for a spine",DuAEF.DuBinary.toFile(w25_spine_r));
	ui_spineButton.setHelp("Spine", createstructuresHelp, createstructuresLink);
	var ui_spineOptionsButton = DuAEF.DuScriptUI.addButton(ui_spineGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Spine options",DuAEF.DuBinary.toFile(w14_plus_r));
	var ui_tailGroup = DuAEF.DuScriptUI.addGroup(ui_structuresGroup2,settings.data.uiMode >= 2 ? 'column' : 'row');
	var ui_tailButton = DuAEF.DuScriptUI.addButton(ui_tailGroup,settings.data.uiMode >= 2 ? '' : "Tail",DuAEF.DuBinary.toFile(w25_tail_l),"Add a structure for a tail",DuAEF.DuBinary.toFile(w25_tail_r));
	ui_tailButton.setHelp("Tail", createstructuresHelp, createstructuresLink);
	var ui_tailOptionsButton = DuAEF.DuScriptUI.addButton(ui_tailGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Tail options",DuAEF.DuBinary.toFile(w14_plus_r));
	var ui_customGroup = DuAEF.DuScriptUI.addGroup(ui_structuresGroup2,settings.data.uiMode >= 2 ? 'column' : 'row');
	var ui_customStructureButton = DuAEF.DuScriptUI.addButton(ui_customGroup,settings.data.uiMode >= 2 ? '' : "Custom", DuAEF.DuBinary.toFile(w25_bone_l),"Add a structure, on selected path/pins/layers if any.",DuAEF.DuBinary.toFile(w25_bone_r));
	ui_customStructureButton.setHelp("Custom Structure", createstructuresHelp, createstructuresLink);
	var ui_customOptionsButton = DuAEF.DuScriptUI.addButton(ui_customGroup,'',DuAEF.DuBinary.toFile(w14_plus_m),"Custom Structures options",DuAEF.DuBinary.toFile(w14_plus_r));
	ui_armOptionsButton.group.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['right','center'];
	ui_legOptionsButton.group.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['right','center'];
	ui_spineOptionsButton.group.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['right','center'];
	ui_tailOptionsButton.group.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['right','center'];
	ui_customOptionsButton.group.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['right','center'];

	var ui_structuresToolsGroup = DuAEF.DuScriptUI.addGroup(ui_structuresMainPanelGroup,settings.data.uiMode >= 2 ? 'row' : 'column');
	ui_structuresToolsGroup.alignment = ['fill','top'];
	ui_structuresToolsGroup.alignChildren = ['fill','top'];
	if (settings.data.uiMode != 0)
	{
		var ui_structuresEditModeButton = DuAEF.DuScriptUI.addButton(ui_structuresToolsGroup,settings.data.uiMode >= 2 ? "" : "Toggle edit mode",DuAEF.DuBinary.toFile(w25_structureedit_l),"Unlink elements' children to easily edit anchor points",DuAEF.DuBinary.toFile(w25_structureedit_r));
		ui_structuresEditModeButton.setHelp("Toggle Edit Mode", structuretoolsHelp, structuretoolsLink);
		ui_structuresEditModeButton.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];
	}
	var ui_structuresSelectButton = DuAEF.DuScriptUI.addButton(ui_structuresToolsGroup,settings.data.uiMode >= 2 ? '' : "Select structures",DuAEF.DuBinary.toFile(w25_selectallstructures_l),"Select all structures found in the current composition",DuAEF.DuBinary.toFile(w25_selectallstructures_r));
	ui_structuresSelectButton.setHelp("Select Structures", structuretoolsHelp, structuretoolsLink);
	ui_structuresSelectButton.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];
	var ui_structuresDuplicateButton = DuAEF.DuScriptUI.addButton(ui_structuresToolsGroup,settings.data.uiMode >= 2 ? '' : "Duplicate",DuAEF.DuBinary.toFile(w25_duplicatestructure_l),"Duplicate structures",DuAEF.DuBinary.toFile(w25_duplicatestructure_r));
	ui_structuresDuplicateButton.setHelp("Duplicate Structures", structuretoolsHelp, structuretoolsLink);
	ui_structuresDuplicateButton.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];
	var ui_structuresShowButton = DuAEF.DuScriptUI.addButton(ui_structuresToolsGroup,settings.data.uiMode >= 2 ? '' : "Show/hide",DuAEF.DuBinary.toFile(w25_structureshow_l),"Show or hide structures",DuAEF.DuBinary.toFile(w25_structurehide_r));
	ui_structuresShowButton.setHelp("Show/Hide Structures", structuretoolsHelp, structuretoolsLink);
	ui_structuresShowButton.alignment = settings.data.uiMode >= 2 ? ['center','top'] : ['fill','top'];

	if (settings.data.uiMode != 0)
	{
		DuAEF.DuScriptUI.addSeparator(ui_structuresMainPanelGroup);
		var ui_editStructureButton = DuAEF.DuScriptUI.addButton(ui_structuresMainPanelGroup,"Edit...",DuAEF.DuBinary.toFile(w18_settings_l),"Edit existing structures",DuAEF.DuBinary.toFile(w18_settings_r));
		ui_editStructureButton.setHelp("Edit Structures", structuretoolsHelp, structuretoolsLink);
	}

	//autorig
	DuAEF.DuScriptUI.addSeparator(ui_structuresMainPanelGroup);
	var ui_autorigButton = DuAEF.DuScriptUI.addButton( ui_structuresMainPanelGroup, settings.data.uiMode > 2 ? '' : "Auto-rig & IK", DuAEF.DuBinary.toFile( w25_autorig_l ), "Automatically rig structures (use the Links & Constraints panel for more options)", DuAEF.DuBinary.toFile( w25_autorig_r ) );
	if (settings.data.uiMode > 2) ui_autorigButton.alignment = ['center', 'top'];
	ui_autorigButton.setHelp( "Auto-rig", autorigHelp, autorigLink );

	//CUSTOM
	var ui_structuresCustomWindow = DuAEF.DuScriptUI.createPopup( "Custom Structures" );
	var ui_structuresCustomGroup = ui_structuresCustomWindow.contents;
	ui_structuresCustomGroup.alignment = ['fill','top'];
	ui_structuresCustomGroup.alignChildren = ['fill','top'];
	var ui_structuresCustomNumberGroup = DuAEF.DuScriptUI.addGroup(ui_structuresCustomGroup);
	var ui_structuresEditColorLabel = DuAEF.DuScriptUI.addStaticText(ui_structuresCustomNumberGroup,"Number of elements",undefined,undefined,true);
	var ui_structuresCustomNumberEdit = DuAEF.DuScriptUI.addEditText(ui_structuresCustomNumberGroup, "2");
	ui_structuresCustomNumberEdit.minimumSize = [25,10];
	var ui_structuresCustomNameEdit = DuAEF.DuScriptUI.addEditText(ui_structuresCustomGroup, "Name");
	var ui_structuresCustomValidButton = DuAEF.DuScriptUI.addButton(ui_structuresCustomGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create structure",DuAEF.DuBinary.toFile(w25_check_r));

	//ARM
	var ui_armWindow = DuAEF.DuScriptUI.createPopup( "Arm Structure" );
	var ui_armGroup = ui_armWindow.contents;
	var ui_sutrcturesArmTypeGroup = DuAEF.DuScriptUI.addGroup(ui_armGroup,'row');
	ui_sutrcturesArmTypeGroup.alignChildren = ['center','top'];
	var ui_armPlantiButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesArmTypeGroup,'',DuAEF.DuBinary.toFile(w25_filledhand_l),"Plantigrade (human and primates, bears, rabbits...)",DuAEF.DuBinary.toFile(w25_filledhand_r));
	ui_armPlantiButton.setChecked(true);
	var ui_armDigiButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesArmTypeGroup,'',DuAEF.DuBinary.toFile(w25_digitigrade_l),"Digitigrade (dogs, cats, dinosaurs, walking birds...)",DuAEF.DuBinary.toFile(w25_digitigrade_r));
	var ui_armUnguButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesArmTypeGroup,'',DuAEF.DuBinary.toFile(w25_ungulate_l),"Ungulate (horses, cattle, giraffes, pigs, deers, camels, hippopotamuses...)",DuAEF.DuBinary.toFile(w25_ungulate_r));
	var ui_armDetailsGroup = DuAEF.DuScriptUI.addGroup(ui_armGroup,'column');
	ui_armDetailsGroup.alignment = ['center','top'];
	ui_armDetailsGroup.alignChildren = ['left','top'];
	if (settings.data.uiMode < 2 && DuAEF.DuAE.App.hasFilesAndNetworkAccess)
	{
		var ui_armHelpGroup = DuAEF.DuScriptUI.addGroup(ui_armDetailsGroup,'stack');
		var ui_armPlantiImage = ui_armHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_plantiarm));
		var ui_armDigiImage = ui_armHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_digitiarm));
		var ui_armUnguImage = ui_armHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_unguarm));
		var ui_armPlantiLegImage = ui_armHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_plantifrontleg));
		ui_armDigiImage.visible = false;
		ui_armUnguImage.visible = false;
		ui_armPlantiLegImage.visible = false;
	}
	var ui_armShoulderButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_armDetailsGroup, "Shoulder", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.RAINBOX_RED);
	var ui_armHumerusButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_armDetailsGroup, "Arm", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.ORANGE);
	ui_armHumerusButton.setChecked(true);
	var ui_armRadiusButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_armDetailsGroup, "Forearm", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.YELLOW);
	ui_armRadiusButton.setChecked(true);
	var ui_armHandButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_armDetailsGroup, "Hand", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.LIGHT_BLUE);
	ui_armHandButton.setChecked(true);
	var ui_armClawsButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_armDetailsGroup, "Claws", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.LIGHT_PURPLE);
	var ui_armValidButton = DuAEF.DuScriptUI.addButton(ui_armGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create structure",DuAEF.DuBinary.toFile(w25_check_r));

	//LEG
	var ui_legWindow = DuAEF.DuScriptUI.createPopup( "Leg structure" );
	var ui_legGroup = ui_legWindow.contents;
	var ui_sutrcturesLegTypeGroup = DuAEF.DuScriptUI.addGroup(ui_legGroup,'row');
	ui_sutrcturesLegTypeGroup.alignChildren = ['center','top'];
	var ui_legPlantiButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesLegTypeGroup,'',DuAEF.DuBinary.toFile(w25_plantigrade_l),"Plantigrade (human and primates, bears, rabbits...)",DuAEF.DuBinary.toFile(w25_plantigrade_r));
	ui_legPlantiButton.setChecked(true);
	var ui_legDigiButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesLegTypeGroup,'',DuAEF.DuBinary.toFile(w25_digitigrade_l),"Digitigrade (dogs, cats, dinosaurs, walking birds...)",DuAEF.DuBinary.toFile(w25_digitigrade_r));
	var ui_legUnguButton = DuAEF.DuScriptUI.addCheckBox(ui_sutrcturesLegTypeGroup,'',DuAEF.DuBinary.toFile(w25_ungulate_l),"Ungulate (horses, cattle, girafes, pigs, deers, camels, hippopotamuses...)",DuAEF.DuBinary.toFile(w25_ungulate_r));
	var ui_legDetailsGroup = DuAEF.DuScriptUI.addGroup(ui_legGroup,'column');
	ui_legDetailsGroup.alignment = ['center','top'];
	ui_legDetailsGroup.alignChildren = ['left','top'];
	if (settings.data.uiMode < 2 && DuAEF.DuAE.App.hasFilesAndNetworkAccess)
	{
		var ui_legHelpGroup = DuAEF.DuScriptUI.addGroup(ui_legDetailsGroup,'stack');
		var ui_legPlantiImage = ui_legHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_plantileg));
		var ui_legDigiImage = ui_legHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_digitileg));
		var ui_legUnguImage = ui_legHelpGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_unguleg));
		ui_legDigiImage.visible = false;
		ui_legUnguImage.visible = false;
	}
	var ui_legFemurButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_legDetailsGroup, "Thigh", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.ORANGE);
	ui_legFemurButton.setChecked(true);
	var ui_legTibiaButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_legDetailsGroup, "Calf", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.YELLOW);
	ui_legTibiaButton.setChecked(true);
	var ui_legFootButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_legDetailsGroup, "Foot", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.LIGHT_BLUE);
	ui_legFootButton.setChecked(true);
	var ui_legClawsButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_legDetailsGroup, "Toes", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.LIGHT_PURPLE);
	ui_legClawsButton.setChecked(true);
	ui_legClawsButton.label.minimumSize.width = 50;
	var ui_legValidButton = DuAEF.DuScriptUI.addButton(ui_legGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create structure",DuAEF.DuBinary.toFile(w25_check_r));

	//SPINE
	var ui_spineWindow = DuAEF.DuScriptUI.createPopup( "Spine structure" );
	var ui_spineGroup = ui_spineWindow.contents;
	var ui_spineDetailsGroup = DuAEF.DuScriptUI.addGroup(ui_spineGroup,'column');
	ui_spineDetailsGroup.alignment = ['center','top'];
	ui_spineDetailsGroup.alignChildren = ['left','top'];
	if (settings.data.uiMode < 2 && DuAEF.DuAE.App.hasFilesAndNetworkAccess)
	{
		var ui_spineImage = ui_spineDetailsGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_spine));
	}
	var ui_headButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_spineDetailsGroup, "Head", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.LIGHT_BLUE);
	ui_headButton.setChecked(true);
	var ui_neckEdit = DuAEF.DuScriptUI.addEditText(ui_spineDetailsGroup,'1',"Neck: "," layers");
	if (settings.data.uiMode < 2)DuAEF.DuScriptUI.setTextColor(ui_neckEdit.static, DuAEF.DuJS.Color.Colors.YELLOW);
	var ui_spineEdit = DuAEF.DuScriptUI.addEditText(ui_spineDetailsGroup,'2',"Spine: "," layers");
	if (settings.data.uiMode < 2)DuAEF.DuScriptUI.setTextColor(ui_spineEdit.static, DuAEF.DuJS.Color.Colors.ORANGE);
	var ui_hipsButton = DuAEF.DuScriptUI.addSimpleCheckBox(ui_spineDetailsGroup, "Hips", '', settings.data.uiMode >= 2 ? DuAEF.DuJS.Color.Colors.LIGHT_GREY : DuAEF.DuJS.Color.Colors.RAINBOX_RED);
	ui_hipsButton.setChecked(true);

	var ui_spineValidButton = DuAEF.DuScriptUI.addButton(ui_spineGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create structure",DuAEF.DuBinary.toFile(w25_check_r));

	//TAIL
	var ui_tailWindow = DuAEF.DuScriptUI.createPopup( 'Tail structure' );
	var ui_tailGroup = ui_tailWindow.contents;
	var ui_tailDetailsGroup = DuAEF.DuScriptUI.addGroup(ui_tailGroup,'column');
	ui_tailDetailsGroup.alignment = ['center','top'];
	ui_tailDetailsGroup.alignChildren = ['left','top'];
	if (settings.data.uiMode < 2 && DuAEF.DuAE.App.hasFilesAndNetworkAccess)
	{
		var ui_tailImage = ui_tailDetailsGroup.add('image',undefined,DuAEF.DuBinary.toFile(illustrations_tail));
	}
	var ui_tailEdit = DuAEF.DuScriptUI.addEditText(ui_tailDetailsGroup,'3',"Tail: "," layers");
	if (settings.data.uiMode < 2)DuAEF.DuScriptUI.setTextColor(ui_tailEdit.static, DuAEF.DuJS.Color.Colors.RAINBOX_RED);

	var ui_tailValidButton = DuAEF.DuScriptUI.addButton(ui_tailGroup,'Create',DuAEF.DuBinary.toFile(w25_check_g),"Create structure",DuAEF.DuBinary.toFile(w25_check_r));

	//EDITOR
	#include 'Duik16_structures_editor.jsxinc'

	//============== INIT ===================

	ui_structuresMainGroup.tabActivated = setCurrentStructuresPanel;
	if (standAlone) setCurrentStructuresPanel();

	// ========= CONNECT EVENTS ================

	//HOMINOID
	ui_humanButton.onClick = function () { ui_humanButton_clicked(false); };
	ui_humanButton.onAltClick = function () { ui_humanButton_clicked(true); };

	//ARM
	ui_armPlantiButton.onClick = ui_armPlantiButton_clicked;
	ui_armDigiButton.onClick = ui_armDigiButton_clicked;
	ui_armUnguButton.onClick = ui_armUnguButton_clicked;

	ui_armClawsButton.onClick = ui_armClawsButton_clicked;

	ui_armWindow.tieTo(ui_armOptionsButton);
	ui_armValidButton.onClick = ui_armButton.onClick = function() { ui_armValidButton_clicked(false); };
	ui_armValidButton.onCtrlClick = ui_armButton.onCtrlClick = function() { ui_armValidButton_clicked(true); };

	//LEG
	ui_legPlantiButton.onClick = ui_legPlantiButton_clicked;
	ui_legDigiButton.onClick = ui_legDigiButton_clicked;
	ui_legUnguButton.onClick = ui_legUnguButton_clicked;

	ui_legWindow.tieTo(ui_legOptionsButton);
	ui_legValidButton.onClick = ui_legButton.onClick = function() { ui_legValidButton_clicked(false); };
	ui_legValidButton.onCtrlClick = ui_legButton.onCtrlClick = function() { ui_legValidButton_clicked(true); };

	//SPINE
	ui_spineWindow.tieTo(ui_spineOptionsButton);
	ui_spineValidButton.onClick = ui_spineButton.onClick = function() { ui_spineValidButton_clicked(false); };
	ui_spineValidButton.onCtrlClick = ui_spineButton.onCtrlClick = function() { ui_spineValidButton_clicked(true); };

	//TAIL
	ui_tailWindow.tieTo(ui_tailOptionsButton);
	ui_tailValidButton.onClick = ui_tailButton.onClick = function() { ui_tailValidButton_clicked(false); };
	ui_tailValidButton.onCtrlClick = ui_tailButton.onCtrlClick = function() { ui_tailValidButton_clicked(true); };

	//CUSTOM STRUCTURES
	ui_structuresCustomWindow.tieTo(ui_customOptionsButton);
	ui_structuresCustomNameEdit.onActivate = ui_structuresCustomNameEdit_activated;
	ui_structuresCustomNameEdit.onDeactivate = ui_structuresCustomNameEdit_Deactivated;
	ui_customStructureButton.onClick = ui_structuresCustomValidButton.onClick = function () { ui_customStructureButton_clicked(false, false); };
	ui_customStructureButton.onCtrlClick = ui_structuresCustomValidButton.onCtrlClick = function () { ui_customStructureButton_clicked(false, true); };
	ui_customStructureButton.onAltClick = ui_structuresCustomValidButton.onAltClick = function () { ui_customStructureButton_clicked(true, false); };
	ui_customStructureButton.onCtrlAltClick = ui_structuresCustomValidButton.onCtrlAltClick = function () { ui_customStructureButton_clicked(true, true); };
	
	//EDIT
	if (settings.data.uiMode != 0)
	{
		ui_editStructureButton.onClick = function() {setCurrentStructuresPanel(6);};
		ui_structuresEditModeButton.onClick = ui_structuresEditModeButton_clicked;
	}

	//AUTORIG
	ui_autorigButton.onClick = ui_autorigButton_clicked;


	ui_structuresDuplicateButton.onClick = ui_structuresDuplicateButton_clicked;
	ui_structuresShowButton.onClick = function () { ui_structuresShowButton_clicked(false); };
	ui_structuresShowButton.onAltClick = function () { ui_structuresShowButton_clicked(true); };
	ui_structuresSelectButton.onClick = ui_structuresSelectButton_clicked;

	debugLog.stopTimer("Structures ready.");
}
