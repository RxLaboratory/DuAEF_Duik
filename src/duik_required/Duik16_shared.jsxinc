var shared = {};

shared.createIK = function ()
{
	var layers = DuAEF.DuAE.Comp.unselectLayers();
	if (layers.length == 0) return;
	app.beginUndoGroup('Duik | ' + "IK");

	DuAEF.DuAE.Project.setProgressMode(true);

	var ctrl = DuAEF.Duik.Rigging.ik(layers,null,false,!settings.data.ik3Layer);
	if(ctrl.length > 1) ctrl = ctrl[1];
	else ctrl = ctrl[0];
	ctrl.layer.selected = true;

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();
}

shared.createBezierIK = function ()
{
	var layers = DuAEF.DuAE.Comp.unselectLayers();
	if (layers.length == 0) return;
	app.beginUndoGroup('Duik | ' + "IK");

	DuAEF.DuAE.Project.setProgressMode(true);

	var ctrl = DuAEF.Duik.Rigging.ik(layers,undefined,true);
	ctrl[1].layer.selected = true;

	DuAEF.DuAE.Project.setProgressMode(false);

	app.endUndoGroup();
}

shared.checkForUpdate = function (showAlert)
{
	if (!DuAEF.DuAE.App.hasFilesAndNetworkAccess) return null;

	if (typeof showAlert === 'undefined') showAlert = false;

	//get the RSS feed
	var channel = DuAEF.DuRSS.get('rainboxprod.net', 'wp/category/updates/feed/', 'DUIK/' + version);

	if (!channel && showAlert)
	{
		alert("The server could not be contacted.");
		return channel;
	}

	if (showAlert && channel.items.length > 0)
	{
		var newVersion = channel.items[0].title;
		//if the new version is higher
		if (DuAEF.DuJS.Version.compare(newVersion, version))
		{
			alert("A new version of Duik is available,\ngo to http://rainboxprod.coop to download it\n\nCurrent version: " + version + "\nNew version: " + newVersion);
			DuAEF.DuSystem.openURL(channel.items[0].link);
		}
		else
		{
			alert("This version is up-to-date");
		}
	}

	return channel;
}
