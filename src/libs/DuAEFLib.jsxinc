/**
 * The general Duduf After Effects ExtendScript Framework namespace.<br />
 * Provides some general tools and information.
 * @namespace
 * @example
 * //The framework version is
 * DuAEF.version;
 * //If you need to get the OS the script is running on
 * DuAEF.mac; //true on mac
 * DuAEF.win; //true on windows
 * //You can customize your script, these values are used in alerts, ui controls, etc.
 * DuAEF.scriptName = "My Beautiful Script";
 * DuAEF.scriptVersion = "1.0.0";
 */
var DuAEF = {};
/**
 * The Current DuAEF Version
 * @readonly
 * @memberof DuAEF
 * @type {string}
 */
DuAEF.version = "0.1.0-Beta";
/**
 * Set to true and enable debug mode if you're a developper
 * @memberof DuAEF
 * @type {boolean}
 */
DuAEF.debug = false;
/**
 * The name of the script using this instance of DuAEF. Must be set by {@link  DuAEF.init}.
 * @memberof DuAEF
 * @type {string}
 * @readonly
 */
DuAEF.scriptName = "DuAEF";
/**
 * The version of the script using this instance of DuAEF. Must be set by {@link  DuAEF.init}.
 * @memberof DuAEF
 * @type {string}
 * @readonly
 */
DuAEF.scriptVersion = "0.0.0";
/**
 * True if the script is run for the first time (new or the version has changed since last run)
 * @memberof DuAEF
 * @type {boolean}
 * @readonly
 */
DuAEF.scriptFirstRun = true;
/**
 * The url for the forum about the script
 */
DuAEF.forumURL = '';
/**
 * The url for a chat server about the script
 */
DuAEF.chatURL = '';
/**
 * The url for reporting bugs
 */
DuAEF.bugReportURL = '';
/**
 * The url for requesting features
 */
DuAEF.featureRequestURL = '';
/**
 * The url about the script
 */
DuAEF.aboutURL = '';
/**
 * The text about the script
 */
DuAEF.scriptAbout = '';

/**
 * The current DuAEF File
 * @readonly
 * @memberof DuAEF
 * @type {File}
 */
DuAEF.file = new File( $.fileName );

/**
 * Enum for states.
 * @readonly
 * @enum {int}
 */
DuAEF.States = {
    NOT_SET: -1,
    INIT: 0,
    RUNTIME: 1
};

/**
 * The current state of the script
 * @type {DuAEF.States}
 */
DuAEF.state = DuAEF.States.NOT_SET;

/**
 * Includes binaries needed by some libraries, like pngquant for DuQuantLib or FFmpeg for DuFFmpegLib.<br />
 * The binaries are available only if you include DuAEF.jsxinc or DuAEF_full.jsxinc.<br />
 * If you use the DuAEF_no_bin.jsxinc version of DuAEF, this is an empty object.<br />
 * @namespace
 * @memberof DuAEF
 */
DuAEF.bin = {};

//Initializes DuAEF
( function()
{
    //detect OS Version
    var mac = $.os.toLowerCase().indexOf( "mac" ) >= 0;
    /**
     * The current OS, true if we're on Mac OS
     * @memberof DuAEF
     * @readonly
     * @type {boolean}
     */
    DuAEF.mac = mac;
    /**
     * The current OS, true if we're on Windows
     * @memberof DuAEF
     * @readonly
     * @type {boolean}
     */
    DuAEF.win = !mac;

    //the binaries
    DuAEF.bin.pngquant = null;
    DuAEF.bin.pngquantbatch = null

} )();

/**
 * This method has to be called once at the very beginning of the script, just after the inclusion of DuAEF <code>#include DuAEF.jsxinc</code>
 * @param {string} [scriptName="DuAEF"] - The name of your script, as it has to be displayed in the UI and the filesystem
 * @param {string} [scriptVersion="0.0.0"] - The version of your script, in the form "XX.XX.XX-Comment", for example "1.0.12-Beta". The "-Comment" part is optional.
 */
DuAEF.init = function( scriptName, scriptVersion )
{
    DuAEF.state = DuAEF.States.INIT;

    scriptName = def( scriptName, "DuAEF" );
    scriptVersion = def( scriptVersion, "0.0.0" );
    DuAEF.scriptName = scriptName;
    DuAEF.scriptVersion = scriptVersion;

    //check if this script has already been run once
    // Check the version from latest run
    if ( app.settings.haveSetting( DuAEF.scriptName, "version" ) )
    {
        var prevVersion = app.settings.getSetting( DuAEF.scriptName, "version" );
        if ( prevVersion == DuAEF.scriptVersion ) DuAEF.scriptFirstRun = false;
    }
}

/**
 * This method has to be called once at the end of the script, when everything is ready and the main UI visible (after any prompt or setup during startup).
 */
DuAEF.enterRunTime = function()
{
    app.settings.saveSetting( DuAEF.scriptName, "version", DuAEF.scriptVersion );
    DuAEF.state = DuAEF.States.RUNTIME;

    //do post init methods
    DuAEF.DuAE.postInit();
    DuAEF.Duik.postInit();
    DuAEF.Duik.Structure.postInit();
}
