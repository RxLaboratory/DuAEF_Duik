/*
DuSettingsLib
Library to manager settings in a JSON file.
Copyright (c) 2017 Nicolas Dufresne, Rainbox Productions
https://rainboxprod.coop

_Contributors:_
Nicolas Dufresne - Lead developer

This file is part of DuAEF.

DuAEF is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

DuAEF is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with DuAEF. If not, see <http://www.gnu.org/licenses/>.
*/

/**
* Constructs a new DuSettings instance
* @class DuSettings
* @classdesc A class to manage settings.
* @param {string}	  namespace     - A namespace to group your settings.
* @param {File|string}    [file=Folder.myDocuments/namespace_settings.json]    - The file to store the settings
* @property {string}	  namespace	- A namespace to group your settings.
* @property {File}		file	- The file to store the settings
* @property {Object}	data	- The settings as a js object
*/
function DuSettings(namespace,file)
{
	if (file == undefined) file = new File(Folder.myDocuments.absoluteURI + "/" + namespace + "_settings.json");
	this.namespace = namespace;
	if (file instanceof File) this.file = file;
	else this.file = new File(file);
	this.file.encoding = 'UTF-8';

	this.data = {};
	this.load();
}

/**
 * loads data from the settings file
 * @memberof DuAEF.DuSettings
 */
DuSettings.prototype.load = function()
{
	//load file
	if (this.file.exists)
	{
		//open file
		if (this.file.open("r"))
		{
			var data = this.file.read();
			this.file.close();
			if (data != "") this.data = JSON.parse(data);
		}
	}
}

/**
 * Saves data to the file
 * @memberof DuAEF.DuSettings
 * @param {string}		name	- The name of the setting
 * @return {boolean}	true if the file has been correctly written
 */
DuSettings.prototype.save = function()
{
	if (!DuAEF.DuAE.App.hasFilesAndNetworkAccess) return false;
	if (this.file.open("w"))
	{
		var data = JSON.stringify(this.data);
		this.file.write(data);
		this.file.close();
		return true;
	}
	return false;
}
